<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>AI探索站 - 即刻圈子</title>
        <link>https://m.okjike.com/topics/63579abb6724cc583b9bba9a</link>
        
        <item>
            <id>https://m.okjike.com/originalPosts/68ea47481ed9b53c78bffaee</id>
            <title>AI探索站 10月11日</title>
            <link>https://m.okjike.com/originalPosts/68ea47481ed9b53c78bffaee</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/68ea47481ed9b53c78bffaee</guid>
            <pubDate></pubDate>
            <updated>Sat, 11 Oct 2025 12:02:16 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    很多需求真的是无法空想出来的。比如当我交替使用 GPT 和 Gemini 的时候，最终决定我使用体验的完全不是两者的智能或者风格区别，而是一个纯粹的 feature 差异：后者不支持通过修改对话历史从而实现对话的分岔。<br /><br />对话的分岔显然是一个 GPT 出现之前没有人会预料到的功能。现实中不存在这个东西。当然有时候你会想哎呀我昨天和那谁的对话要是编辑一下重开一个平行宇宙就好了，但反正你知道这不可能，也不会认真对待这个想法。然而 GPT 一旦提供这个功能，你就立刻发现它不可或缺。无数次——或者说几乎每一次——我能从一段对话中学到些什么的体验，都来自于我对之前对话记录的反复 refinement。通过不断比较它们导致的对话走向，我才真正理解我们其实是在说什么。<br /><br />非常奇妙。你意识到对话的本质不是线性的，而是由一连串 what-if 构成的。好的对话不是一条河流，而是一棵树。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/68e8ae363ea7571a78fa4ba7</id>
            <title>AI探索站 10月10日</title>
            <link>https://m.okjike.com/originalPosts/68e8ae363ea7571a78fa4ba7</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/68e8ae363ea7571a78fa4ba7</guid>
            <pubDate></pubDate>
            <updated>Fri, 10 Oct 2025 06:56:54 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    AI 会P图以后，光线不好再也不会成为不出片的理由，
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/68e85bf8f8c611cba8f0aa07</id>
            <title>AI探索站 10月10日</title>
            <link>https://m.okjike.com/originalPosts/68e85bf8f8c611cba8f0aa07</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/68e85bf8f8c611cba8f0aa07</guid>
            <pubDate></pubDate>
            <updated>Fri, 10 Oct 2025 01:06:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    AI 是想法和勤奋的放大器。<br /><br />过去有一个模糊想法，很长时间想法就是模糊的。有了 AI 后，模糊想法可以很快变清晰。模糊的想法有些是自己脑海里浮现的，有些是看他人内容时被触发的。这两种场景下，AI 都是让模糊想法变清晰具体的好工具。<br /><br />更进一步，是通过 AI，让十分努力的自己，能变成百分努力的自己。就如 Dan Koe 等百万博主每天两小时一样。没有 AI，这两小时就是两小时。有了 AI，这两小时相当于原来二十小时。AI 让勤奋的人，变成了疯狂勤奋。时长可能还减少了。<br /><br />赞叹 + 自勉。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/68e7f01f3ea7571a78ecf5bb</id>
            <title>AI探索站 10月09日</title>
            <link>https://m.okjike.com/originalPosts/68e7f01f3ea7571a78ecf5bb</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/68e7f01f3ea7571a78ecf5bb</guid>
            <pubDate></pubDate>
            <updated>Thu, 09 Oct 2025 17:25:51 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    在国内上一个网站要经过几步：<br />1. 准备网站项目代码；<br />2. 阿里云买服务器；<br />3. 阿里云买域名，并进行域名备案；<br />4. 代码部署到服务器ecs中，dev和build通过；<br />5. 买dns解析，没错，阿里云dns解析是要钱的；<br />6. 买证书，或者搞免费证书；<br />7. 配置nginx，用证书写在配置文件中，搞定域名的https解析；<br />8. 域名备案的备案号要更新到网站页面中。<br /><br />在海外上一个网站要几步：<br />1. 准备网站项目代码；<br />2. 上传到github；<br />3. vercel自动解析github的更新并deploy；<br />4. cloudflare配置域名dns解析；
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/68e753e296a4bc9b3904d3af</id>
            <title>AI探索站 10月09日</title>
            <link>https://m.okjike.com/originalPosts/68e753e296a4bc9b3904d3af</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/68e753e296a4bc9b3904d3af</guid>
            <pubDate></pubDate>
            <updated>Thu, 09 Oct 2025 06:19:14 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    有多少人在为AI付费，更推荐充值哪家？
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/68e72bc8d9abb9785de5aa0f</id>
            <title>AI探索站 10月09日</title>
            <link>https://m.okjike.com/originalPosts/68e72bc8d9abb9785de5aa0f</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/68e72bc8d9abb9785de5aa0f</guid>
            <pubDate></pubDate>
            <updated>Thu, 09 Oct 2025 03:28:08 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    假设你只有5分钟向投资者讲清楚一件事，你会说什么？答案很简单：用4张幻灯片，讲透4个核心问题。<br /><br />第一张：你在解决什么问题？<br />别上来就讲产品，先讲“痛点”。比如，“中小企业融资难，一笔贷款要跑5家银行，平均耗时28天”，或者“老年人买菜总担心新鲜度，每天花1小时逛菜市场”。问题要具体，让投资者立刻感受到“啊，这确实是个麻烦事”。<br /><br />第二张：这个问题有多大？<br />市场规模不用“颠覆行业”那么夸张，讲清楚“有多少人在被这个问题困扰”。比如，“中国有4300万小微企业，每年融资需求超10万亿”，或者“全球60岁以上人口已达15亿，其中80%每周需采购生鲜”。数字不用精确，但趋势要清晰——这是一个值得投入的“大蛋糕”。<br /><br />第三张：你打算怎么解决？<br />用一句话说清你的方案。比如，“我们开发了智能风控系统，让小微企业贷款审批时间从28天缩短到2小时”，或者“我们搭建了社区生鲜直供平台，老年人扫码下单，2小时内送到家”。重点是“怎么落地”，比如“已和30家社区超市签约，日均订单500+”。<br /><br />第四张：为什么是你？<br />投资者投的永远是“人”。讲清楚团队的优势：“我们的CEO有10年银行风控经验，CTO曾主导过智能算法项目”，或者“我们的联合创始人深耕社区15年，熟悉老年人需求”。如果有早期用户反馈，比如“有位阿姨反馈‘再也不用早起买菜了’”，比空泛的“专业团队”更有说服力——真实的声音最动人。<br /><br />最后4张：锦上添花，但别喧宾夺主<br />如果前面4张讲透了，后面的可以快速补充：<br />- 你现在有什么成果？比如“已实现月营收100万，复购率65%”；<br />- 怎么扩张？“先覆盖北京3个社区，明年计划进入长三角”；<br />- 需要多少钱？“本轮融资500万，用于技术研发和团队扩张，预计18个月实现盈利”；<br />- 退出机制？“3-5年通过并购或IPO，让投资者获得3-5倍回报”。<br /><br />关键提醒： 别堆砌文字。每张幻灯片最多3行字，剩下的用图表或一句话总结。投资者每天看几十份商业计划书，没人有耐心读“文字墙”。记住，融资演讲不是“介绍产品”，而是“讲一个让人心动的故事，然后告诉他们‘我们能做到’”。<br /><br />简单、直接、有温度——这就是打动投资者的核心。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/68e65a6d5edbca981d330c34</id>
            <title>AI探索站 10月08日</title>
            <link>https://m.okjike.com/originalPosts/68e65a6d5edbca981d330c34</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/68e65a6d5edbca981d330c34</guid>
            <pubDate></pubDate>
            <updated>Wed, 08 Oct 2025 12:34:53 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    推荐学习下微软搞的这个 R&amp;D-Agent 框架，https://github.com/microsoft/RD-Agent ，它是一个让 AI 能够自己做科研的系统——能提出问题、设计实验、验证结果、总结规律，整套科研流程都能自动化执行。<br /><br />微软还基于这套框架，构建了一个用于量化投资研究的智能体 R&amp;D-Agent(Q)，https://github.com/microsoft/qlib，并与开源量化平台 Qlib 结合，实现了自动化因子挖掘与策略优化。照这个趋势发展下去，未来的量化研究，恐怕真得交给 AI 来操盘了，😅<br /><br />R&amp;D-Agent 的整体架构分为两个阶段：研究阶段（Research Phase）和开发阶段（Development Phase）。研究阶段由四个部分组成：规划、探索路径结构、推理管线和记忆上下文，它们通过反馈机制持续循环，不断在假设、实验与分析之间往复，让系统在多轮探索中自动调整方向、积累知识、优化策略；开发阶段则承接研究成果，主要包括编码工作流与评估策略，前者把想法变成可执行代码，后者负责验证与对比结果，确保系统演化出的改进真实可靠。两个阶段形成首尾相接的闭环，让科研过程实现持续反馈与自我进化。<br /><br />从本质上看，R&amp;D-Agent 不是在“模拟科研”，而是在“系统化科研”。它让科学探索从线性的人力流程，转变为并行的智能网络。每一次假设的提出与验证，都会被记录下来，形成一份不断扩展的知识图谱，让科研活动变得可编排、可追踪、可积累。<br /><br />相关论文：1）《R&amp;D-Agent: An LLM-Agent Framework Towards Autonomous Data Science》，https://arxiv.org/abs/2505.14738 ；2）《Qlib: An AI-oriented Quantitative Investment Platform》，https://arxiv.org/abs/2009.11189
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/68e507b756725ea8ff52fbe0</id>
            <title>AI探索站 10月07日</title>
            <link>https://m.okjike.com/originalPosts/68e507b756725ea8ff52fbe0</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/68e507b756725ea8ff52fbe0</guid>
            <pubDate></pubDate>
            <updated>Tue, 07 Oct 2025 12:29:43 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    Sutton 最近跟 Dwarkesh 有个访谈，老爷子认为 LLM 并不是通向 AGI 的正确道路。搞笑的是：LLM 支持者 Dwarkesh 认为 LLM 是符合 “The Bitter Lesson” （通用计算方法加大规模数据终将战胜人工设计的策略）的，却被 Sutton 无情打脸。我看完访谈的最大感受是 Sutton 的观点有点抽象，后来我读了《智能简史》这本书，才完全理解了 Sutton 的观点。<br /><br />Sutton 在访谈里面提到：大模型只是在模仿人类，而不是真的理解了世界。大模型智能预测人类会说什么，而不能预测会发生什么。这个观点说实话很抽象，但我从《智能简史》的一个例子中理解了他的意思。<br /><br />大脑有一种神奇的能力，它可以想象未来会发生什么，《智能简史》用老鼠迷宫实验非常形象的介绍了这种能力。<br /><br />实验过程大致如下：研究人员将一只老鼠放进一个T型迷宫，迷宫的右臂尽头有食物。经过几次尝试，老鼠学会了右转去获取食物。但接下来，实验者将迷宫旋转了180度，入口和岔路口的位置都变了，但食物仍然在房间的同一个绝对位置。此时，如果老鼠只是学会了“右转”这个动作，那它应该还会右转，但这样它就会走向错误的方向。然而，实验中的老鼠在路口停下来左右摇头思考了一下，最终选择了左转，并成功找到了食物。<br /><br />这个实验说明，老鼠并不是死记硬背了向右转的动作，而是在大脑中建立了一个关于迷宫和食物位置的空间地图，一个“世界模型”。当迷宫被旋转后，老鼠能够利用这个内在的地图，在大脑中想象食物的位置，以达到获取食物的目的。它理解了目标（食物）在空间中的位置，而不是机械地重复之前被奖励的行为。后来的研究者通过监测老鼠的大脑神经活动，证明了它确实在脑中分别演练了两种选择的结果。<br /><br />相比之下，鱼就没有这么聪明了。取一条鱼放入水箱，箱中设有透明隔板。在隔板一角开个小孔，使鱼能从一侧游至另一侧。让鱼自由探索水箱，找到小孔并花些时间来回游动。数日后进行新操作：将鱼置于水箱一侧，在透明隔板的另一侧放置食物。结果发现鱼花了跟第一次一样的时间才找到小孔位置，也就是说鱼并没有建立世界模型。<br /><br />这些实验可以用来解释Sutton的观点。Sutton认为，真正的智能，需要像老鼠一样，能够在内在建立一个世界模型，并利用这个模型去灵活地适应和解决问题，而不仅仅是在已有的数据中寻找最优的“下一个词”。现在的大语言模型，本质上是在一个极其庞大的“语言迷宫”里，通过海量的数据训练，学会了在某个“路口”（当前上下文），选择最有可能的下一个“方向”（下一个词）。它能够预测人类会说什么，因为它已经“看”过了无数人类在相似情境下的选择。<br /><br />然而，一旦我们稍微改变“迷宫”的结构，提出一个它从未见过的、需要真正理解世界才能回答的问题，或者要求它根据现实世界的变化做出预测，它可能就会像那只鱼一样，暴露出其死记硬背的本质。比如有研究者发现，当使用 LLM 作为评判工具时，只需要加一个“解”，甚至只是空格、冒号等符号，就能让毫无意义的回答骗得高分。<br /><br />在 Sutton 看来，仅仅通过扩大数据和计算量来训练大模型，只是在让模型更擅长模仿人类的语言模式，而无法真正地理解世界，因此 LLM 不是通向AGI的正确道路。<br /><br />虽然我赞成 Sutton 的说法，LLM 相比大脑确实不够“智能”，但是从实用主义的角度看，即使 LLM 只会模仿人类，如果它确实能完成人类的工作，那么这算不算实现了 AGI？俗话说得好：“当一个东西走路像鸭子、叫声像鸭子，那它就是鸭子。”我自己是不纠结技术路线的，我只关心 AI 是不是真的能解决我的问题，而且我认为 LLM 可以帮助我们更快破解大脑智能之谜。<br /><br />最后也推荐大家可以读一下《智能简史》这本书，作者是搞 AI 出身的，为了研究 AI 学习了很多神经科学的知识，他将神经科学的研究成果跟机器学习的知识串联起来。所以我读的非常爽：就像飞机是从鸟类的飞行得到启发一样，AI 的很多突破都源于我们对大脑的研究。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/68dc0eefe1724775b4369bba</id>
            <title>AI探索站 09月30日</title>
            <link>https://m.okjike.com/originalPosts/68dc0eefe1724775b4369bba</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/68dc0eefe1724775b4369bba</guid>
            <pubDate></pubDate>
            <updated>Tue, 30 Sep 2025 17:10:07 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    Sora 2  &amp; Sora App 来了～
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/68cfce51dbff5eb45065eb28</id>
            <title>AI探索站 09月21日</title>
            <link>https://m.okjike.com/originalPosts/68cfce51dbff5eb45065eb28</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/68cfce51dbff5eb45065eb28</guid>
            <pubDate></pubDate>
            <updated>Sun, 21 Sep 2025 10:07:13 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    最近听的最有价值的播客，是 Claude Code 使用量全球榜一大哥，刘小排在koji的十字路口的播客。<br />听完的一些收获：<br />1. 刘小排发现，人们都说 AI 不赚钱，其实是榜单头部的 AI 产品基本都不赚钱。但这跟他的体感完全不同。只要你不乱花钱投放，降低营销和人力成本，从第一天就开始赚钱。<br />2. 别被 Claude Code 的 Code 这个单词所迷惑，它是一个通用 Agent 工具，从调研到写代码都可以做。<br />3. 只要在虚拟世界中，任何有标准操作程序（SOP）的事情都可以通过 Claude Code 实现自动化。<br />4. Claude Code 的价值在于其可控性，允许用户根据需要为其提供工具，从而实现无限级的扩展，这与 Manas 等内置工具受限的 Agent 不同。<br />5. 用 Claude Code 之前可以先读官方文档，很多功能比如7x24地跑都是官方宣传的功能，根本不是黑科技<br />6. 使用 Claude Code 如何避免屎山代码？你先在飞书里把需求文档写清楚，最好配上图，然后再和AI讨论一下需求的细节，需求不清楚的结果就是屎山代码。<br />7. 猎豹移动的产品方法论，核心在于 “简单”，即专注于一个功能并做到极致，而不是做加法<br />8. 他从猎豹移动学到的产品三段论是：预测、单点击穿、All-in，即预测市场趋势，找到一个点站稳脚跟，然后投入所有资源。<br />9. 在微软亚洲研究院实习时发现 “科技” 是两个词，即 “科学” 和 “技术”，并意识到自己做的是工程而非科学，这一认知影响了他日后的创业方向。
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>