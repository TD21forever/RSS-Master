<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>AI探索站 - 即刻圈子</title>
        <link>https://m.okjike.com/topics/63579abb6724cc583b9bba9a</link>
        
        <item>
            <id>https://m.okjike.com/originalPosts/68770c04e81ba2a1792fefb2</id>
            <title>AI探索站 07月16日</title>
            <link>https://m.okjike.com/originalPosts/68770c04e81ba2a1792fefb2</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/68770c04e81ba2a1792fefb2</guid>
            <pubDate></pubDate>
            <updated>Wed, 16 Jul 2025 02:18:44 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    Notion 刚刚又对数据库进行了一次大更新，优化了很多细细节。<br />我想说的是，在 AI 时代每个不懂编程的小白都应该去深度学习一下 Notion。<br />为什么呢？因为 Notion 就是这个时代界面最友好的，上手门槛最低的，能帮助你理解“数据库”（关系型）这个概念的产品——什么是表，什么是行，什么是字段，字段为什么有类型，什么是关系映射等等。<br />而理解了数据库的基础概念，在很大程度上你就理解了许多编程思维。你会发现许多你想象中很复杂的产品和业务逻辑，其实本质都是数据库的增删改查。<br />这个对于你用 AI、n8n 或 Dify 进行零代码 Vibe Coding 非常重要。因为无论是低代码还是 AI 编程，你都需要能清晰的描述你的业务逻辑，才能靠外部工具进行不写代码的实现。<br />在我们上学的那个时代，对数据库的理解是靠高中和大学计算机课上的 Microsoft Access 来实现的。<br />那曾经是实际上最好的图形化数据库程序，但微软已经放弃了这个产品，现在的计算机课应该也不学了。<br />Notion 在产品中交付给用户的“数据库”虽然是伪数据库，但它在基本逻辑上遵循了一般关系型数据库的范式。<br />你只要玩转了 Notion，那在 Vibe Coding 时接触真正的关系型数据库也是可以触类旁通的。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/687642e6e81ba2a179234400</id>
            <title>AI探索站 07月15日</title>
            <link>https://m.okjike.com/originalPosts/687642e6e81ba2a179234400</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/687642e6e81ba2a179234400</guid>
            <pubDate></pubDate>
            <updated>Tue, 15 Jul 2025 12:00:38 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    有个事儿很有意思啊，现在投资圈好像更青睐00后创业者搞AI产品/工具/应用，觉得AI是年轻人和00后的事业。这种判断的出发点是什么呢？一种基于数据和事实的推导？一种似是而非的感觉？还是什么东西？<br /><br />以及，00后AI builder好像更喜欢小而美，喜欢做一个有人用但用户不够多还能给我付点钱，一人吃饱全家不饿的东西。这些是好的投资标的么？<br /><br />真的有大野心，敢甩开全世界膀子搞，知道怎么用资源和人的几个AI Agent builder，Manus和Lovart创始人都是1990年代初出生的，都是奔35的人了。Genspark创始人更是奔五了（Eric原谅我）。比他们年轻的创始人，胃口反而比他们小，这是什么道理？<br />​<br />​70% 开拓、创新、学习的心劲儿和能力+30% 做事的常识/经历/手段。前者年轻人表现的更好，但中年人们也可以表现得很好（一部分）。但后者是靠游戏时间长获得的系统装备，年轻人没有就是没有。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/687503f61dfe5b6d64e8a8cf</id>
            <title>AI探索站 07月14日</title>
            <link>https://m.okjike.com/originalPosts/687503f61dfe5b6d64e8a8cf</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/687503f61dfe5b6d64e8a8cf</guid>
            <pubDate></pubDate>
            <updated>Mon, 14 Jul 2025 13:19:50 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    这对吗？
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/68746d2b57121f8f1fb9f0c4</id>
            <title>AI探索站 07月14日</title>
            <link>https://m.okjike.com/originalPosts/68746d2b57121f8f1fb9f0c4</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/68746d2b57121f8f1fb9f0c4</guid>
            <pubDate></pubDate>
            <updated>Mon, 14 Jul 2025 02:36:27 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    卧槽！影视级TTS！<br /><br />IndexTTS2 马上就要发布了，这是个文本生成语音的大模型，效果能达到影视级，大家直接看视频，任何的文字描述都是苍白无力的
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/6873814ee81ba2a179f24b21</id>
            <title>AI探索站 07月13日</title>
            <link>https://m.okjike.com/originalPosts/6873814ee81ba2a179f24b21</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/6873814ee81ba2a179f24b21</guid>
            <pubDate></pubDate>
            <updated>Sun, 13 Jul 2025 09:50:06 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    用 Kimi K2 跑出了一个离谱组件，一次成功，我真傻了<br /><br />支持添加各种组件并且调整大小和移动位置，支持堆叠，类似一个小的无限画布了<br /><br />写过类似的东西的都知道有多恶心
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/687203b9e81ba2a179da0925</id>
            <title>AI探索站 07月12日</title>
            <link>https://m.okjike.com/originalPosts/687203b9e81ba2a179da0925</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/687203b9e81ba2a179da0925</guid>
            <pubDate></pubDate>
            <updated>Sat, 12 Jul 2025 06:42:01 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    昨晚试了一下 Kimi K2，前端能力上非常强！<br /><br />可以替换掉 Claude Code 的默认模型，用 K2 驱动 Claude Code，再也不用担心封号，搭配超划算价格，我直接爽用！<br /><br />先看测试结果，后面附上如何在 Claude Code 中使用 K2 的教程，完整提示词在这里：https://mp.weixin.qq.com/s/S5SKpzQ8GFGzv6dO6efnFA<br /><br />先来藏师傅的经典提示词，这次加上了 PPT 逻辑，让整个页面支持类似 PPT 的翻页。<br />不是很多朋友想要 PPT 提示词吗，现在来了。<br />效果超出预期了，即使是 Gemini 和 Opus 4 也时常有超出页面高度的问题。<br />K2 一次成功，而且还为每一个卡片加上了回弹和缓动效果，图表都加上了动效，非常适合展示汇报内容。<br /><br />然后整一下藏师傅的日签网站吧，基本上就是看简单的前端能力和构建网页的美学素质。<br />直接来看结果，这个质量和效果基本跟 Claude Sonnet 4 差不多，所有功能都能够使用，而且他还做了简单的文案排版。<br />看到这个我舒了一口气，国内很多模型的前端能力连这个都搞不定，现在终于可以往下测试上重量了。<br /><br />然后就是一个偏视觉能力的的考察项目，让他整个点阵动画。<br />在当时这个提示词除了 DeepSeek 0528 之外是全军覆没的，基本都无法运行。<br />直接看结果，第一次就正确运行，同时上面的动画模式和形状选择切换也没问题。<br />下面的其他调整选项第一次没有生效，跟他说完修复了一次也好了，夜间模式也能正常搞定。<br /><br />来整一个真的能干活的带有复杂逻辑的产品，比如一个极简的 Markdown 笔记编辑器。<br />K2 首次生成的结果在功能上处理的很好，基本上所有的功能都可用，都是生效的，没有 Bug。<br />就是渲染的 Markdown 样式有点感人，我就跟他说样式各种格式的样式渲染太差了，再改一下吧。<br />然后基本上就改好了，所有的样式都没啥问题。<br />除了那个表格背景色，这个好说，这么复杂的功能和样式处理第一次搞成这样已经超出预期了。<br /><br />如何在 Claude Code 中使用 K2<br /><br />这次的 K2 模型不止兼容了常见的 Open AI 调用方式，还兼容了 Anthropic 的模型调用。<br />这就是说你可以将 K2 替换为为 Anthropic 提供服务的模型，不用担心封号和费用彻底爽用 Claude Code了。<br /><br />首先我们需要去月之暗面的开发者（https://platform.moonshot.cn/console/account）后台创建一个 API Key。<br />进去以后随便充值个几块钱，然后去 API Key 管理这个侧边栏新建一个 Key 记好。<br />然后你需要安装 Claude Code 了，打开你苹果或者 Windows 的终端，安装前需要安装 Node.js，输入下面的命令。<br />安装完成 Node.js 后，我们安装 Claude Code，继续在终端中输入，如果最后输出了 Claude Code 的介绍和版本号说明就安装成功了。<br />这期间你可能会遇到各种问题，相信我，复制你的终端输出结果扔给 GPT-o3，他都能帮你搞定。<br />这时候我们已经安装成功了，接下来我们需要把 Claude Code 里面原来的 API 请求地址和 Key 给他替换掉。<br />先创建一个你想要写代码的文件夹，然后打开终端，输入“cd+空格+文件夹路径”按住 shift 把文件夹拖到终端里面就会自动展示路径了，直接回车就行。然后输入这两个命令：<br /><br />export ANTHROPIC_AUTH_TOKEN=你的月之暗面 API Key<br />export ANTHROPIC_BASE_URL=https://api.moonshot.ai/anthropic<br /><br />我最近经常跟朋友们说。<br /><br />海外的 Agent 的编程产品如火如荼，每天都有新的出现。<br />国内到现在也没有一个在工具调用和前端能力都符合要求可以驱动 Agent 的模型，感觉被锁死了，不自觉的有点悲观。<br /><br />但现在我试完这个开源的 K2，我感觉自己又恢复了信心。我意识到它填补了一个关键空白：工程实用性。<br /><br />K2 当然在世界范围不是最强的模型，但它是又一个让我觉得"能用来干活"的国产开源模型。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/68707ae2003901b635a8e8a3</id>
            <title>AI探索站 07月11日</title>
            <link>https://m.okjike.com/originalPosts/68707ae2003901b635a8e8a3</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/68707ae2003901b635a8e8a3</guid>
            <pubDate></pubDate>
            <updated>Fri, 11 Jul 2025 02:45:54 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    Dia 昨晚又进行了一次更新，推出了内嵌浏览功能<br /><br />可以在与 AI 聊天时，直接在对话界面旁边打开网页内容，无需跳转到新标签页或离开当前对话。<br /><br />你可以在一个界面内完成信息查找和决策，聊天线程始终可见。<br /><br />他们也介绍了背后的设计思路：<br /><br />越来越多的用户习惯以“聊天”作为任务的起点，而不是传统的网页。对话本身成为了信息探索和任务处理的锚点。<br /><br />Dia 的新思路是让 AI 成为网页浏览的增强工具，而不是屏障。用户可以一边与 AI 互动，一边实时查阅网页，获得更丰富、透明的信息。<br /><br />这种设计强调“人性化”——让用户自主选择是依赖 AI 总结，还是亲自查阅网页细节。<br /><br />未来的浏览体验不是“AI 或网页”的二选一，而是两者的无缝协作。AI 和网页内容可以在同一界面、同一流程中互补，提升效率和体验。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/6864a4a7b7f4ddcfdff38089</id>
            <title>AI探索站 07月02日</title>
            <link>https://m.okjike.com/originalPosts/6864a4a7b7f4ddcfdff38089</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/6864a4a7b7f4ddcfdff38089</guid>
            <pubDate></pubDate>
            <updated>Wed, 02 Jul 2025 03:16:55 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    基于和课代表立正的一期采访，总结了最近一些思考，2025年已经过半，“推背感”更加明显，甚至超过很多乐观从业者的预期，我们正在见证AI革命进入新纪元。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/686101b136def6ff84109105</id>
            <title>AI探索站 06月29日</title>
            <link>https://m.okjike.com/originalPosts/686101b136def6ff84109105</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/686101b136def6ff84109105</guid>
            <pubDate></pubDate>
            <updated>Sun, 29 Jun 2025 09:04:49 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    今天想试试最近比较火热的Claude Code，看看到底和Cursor的体验有何不同，新闻和视频介绍看了不少，但和亲手尝试还是不同的。遗憾的是Claude Code在国内没法用，翻墙都不行，经同事帮助，找了个开源路由库成功搞定，使用私有的LLM API。<br /><br />试着让它写了个乒乓游戏和发推的脚本，都one shot成功了。有人说Claude Code像AI工程师，而Cursor Agent像实习生，从这两次简单的实验，确实能感受到Claude Code的爽点，交给它任务，直接获取结果，中间没那么多要确认的东西。<br /><br />用的开源库是：https://github.com/musistudio/claude-code-router
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/685f99c578eaceb2cfa755f1</id>
            <title>AI探索站 06月28日</title>
            <link>https://m.okjike.com/originalPosts/685f99c578eaceb2cfa755f1</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/685f99c578eaceb2cfa755f1</guid>
            <pubDate></pubDate>
            <updated>Sat, 28 Jun 2025 07:29:09 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    和群里朋友聊 AI 学到一个洞察。<br /><br />我们都知道人类的聪明分成 book smart 和 street smart。前者是做题家的长处，而后者在很多现实问题上更有用。<br /><br />这两者的区别可以理解为训练方式的差别。前者是 instruction-following based 为主，训练的是模仿和把指令内化为习惯和技能。后者则不然，训练的环境是对抗性的，没有自洽的指令，只有彼此矛盾的约束。训练的是如何在一个混乱的环境里生存、协作和发展。<br /><br />AI 天生就更擅长前者，因为 AI 比人类还要做题家——今天人们对如何用奖惩机制训练 AI 服从指令已经得心应手，但对如何让 AI 在对抗性环境里自己找到策略仍然不是很熟悉。棋牌类游戏是少有的能成功训练 AI 的领域，但棋牌类游戏的环境比起真实社会毕竟抽象得多，而且这些 AI 模型都不是语言模型，使用非常受限。<br /><br />这就是为什么今天 AI 写起政府公文来一套一套的，你让它在街上开个馄饨铺子它就彻底抓瞎。归根结底，AI 是东亚小孩里的东亚小孩。
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>