<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>少数派 -- Matrix</title>
        <link>https://sspai.com/matrix</link>
        
        <item>
            <id>https://sspai.com/post/99386</id>
            <title>为「未来」内容而生丨华为PuraX体验分享</title>
            <link>https://sspai.com/post/99386</link>
            <guid isPermaLink="false">https://sspai.com/post/99386</guid>
            <pubDate></pubDate>
            <updated>Tue, 20 May 2025 07:37:33 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 折叠屏手机,16:10比例,鸿蒙系统,用户体验  
<br>  
<br>  
总结: 本文评测了华为Pura X折叠屏手机，重点分析了其16:10屏幕比例的设计特点和实际使用体验。手机在折叠状态下便携性好，但展开后握持感不佳；外屏实用性有限，内屏在横屏观影时表现优秀，但竖屏使用社交软件时信息显示较少。影像系统在光线充足时表现尚可，低光环境下效果下降。鸿蒙NEXT系统目前软件适配不足，影响用户体验。Pura X适合追求折叠屏创新设计和颜值的用户，但需接受当前系统功能不完善的现状。 </div>
                        <hr>
                    
                    <p>折叠屏手机现在已经有很多家都在做了，但<strong>16:10比例的折叠屏</strong>，这次是第一次见。因此purax的屏幕打出的口号是“阔折叠”。那这样全新设计比例的手机用起来体验到底怎么样呢？</p><p><i>（完整版视频已经放到文章末尾，需要的朋友可以直接滑到最后观看视频）</i></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/20/797441ecc96f62a2a964b1de8ce2a9ed.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>一、上手体验</h2><p>首先，我第一次在线下摸到这款手机的时候，会觉得这款手机的握持感很奇怪，因为它不像直板机那样可以用手握在手里，小屏折叠形态的purax是被抓在手里的。这样的好处是它足够便携且不会被甩出去，可以随手塞在牛仔裤的口袋里不会觉得硌得慌。在单手握持的情况下，直板机可能会因为上方太长在触摸的时候会甩落，但它在折叠状态下足够小巧，抓得很稳。</p><figure class="image ss-img-wrapper image_resized" style="width: 549px;"><img src="https://cdnfile.sspai.com/2025/05/20/4a41bd5156f6e34a78913bda64196c78.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>展开以后，它的握持体验就没有那么好了。因为长时间使用这个展开的屏幕，我会觉得虎口有点痛，但这应该是折叠屏的通病。它的重量和iPhone16pro差不多，但我会觉得它拿起来会更轻一点，这也是折叠屏屏幕更大带来的优势。</p><figure class="image ss-img-wrapper image_resized" style="width: 548px;"><img src="https://cdnfile.sspai.com/2025/05/20/1970de1d2da5a35b2b7ac027140e7785.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在材质方面，我的这一款是幻夜黑，采用的是玻璃材质。我其实很喜欢玻璃的质感，像我之前的iPhone11也是玻璃材质，看起来真的很优雅。</p><p>但问题就是，对于手汗多的人来说，玻璃材质的手机用起来就很灾难，背板玻璃粘的全都是指纹，而且这个手机的内屏也是很容易粘指纹的材质，经常用一天下来这块手机就会被沾染的有点脏。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/05/20/cb7cf121fb0a2589c05d1a8e45dc906b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/05/20/4d72d58c481b872fa41e2caa050d091a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>其实purax有好几种材料的外壳，个人觉得素皮的材质可能用起来会更舒服一点。</p><p>因为这其实是我第一次使用折叠屏作为主力机，在我上手之前我会很怀疑这个折叠屏的折痕究竟会不会影响使用体验，这是在折叠屏刚面世的时候大家都会讨论的话题。那在我使用了这段时间后，我的答案是，完全不会影响日常使用，甚至平时根本不会注意到它，唯一注意到它折痕的时候，就是合上它的时候。</p><p>但有几个问题是我上手以来，一直都没能完全适应的。</p><p><strong>第一，是锁屏和音量键的设计。</strong>在小屏折叠的情况下，锁屏键在右侧，音量键在上面；而展开后，锁屏键来到了上面，音量键在右侧。并且在小屏状态下，音量键的左按是提高音量，右按是降低音量，和本身正常的认知是相反的，这可能会对刚上手的用户产生一些困扰。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/05/20/b53399834857bdfbc4010c2bd4a65ea1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/05/20/254527b4df65366d46b9ed6e33e714f3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><strong>第二，是展开的设计。</strong><sup class="ss-footnote" href="" title="这一点因人而异，我个人在户外使用的时候，会因为折叠屏的展开成本而经常会思考要不要使用内屏，可能是因为我个人本身偏向于使用直板机，所以这一部分就仅当做我个人的吐槽，不好意思。">1</sup>因为purax是侧面展开的设计，所以当你第一次展开purax的时候，你会发现还需要再旋转一下，才能看到正常的屏幕状态。这一点其实按理来说是没有什么问题的，只是需要你旋转一下并不费力，正常室内双手操作的时候没有任何问题。但在实际使用的过程中，当你只有一只手在户外操作的时候，因为这额外的旋转，会让本就需要打开使用内屏的操作多一个步骤，使用内屏这个需求就变的比较麻烦。这一点其实也好解决，只需要将主屏幕也适应一个自动旋转的功能就可以了，但目前还没有适配，比较遗憾。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/05/20/6772fd3478a8876ce2ef8d97e3a2d3c3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/05/20/b40d956bf0011bcf013951b7d4405ad6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>二、屏幕</h2><p>说完上手的体验后，我们来讲一下这次pura X的最大亮点——屏幕。16:10的屏幕，是第一次见，那它的好处和缺点是什么呢，我来讲一下我这段时间使用体验的感受。</p><p>purax的屏幕分为两块，外面3.5 英寸的小屏和打开后6.3 英寸的内屏。都同样支持 1-120 Hz的自适应刷新率，在基础的观看体验上是能得到保证的。屏幕这一部分，我觉得可以分为外屏和内屏两个部分来讲，内屏又可以分为竖屏和横屏两个场景来说明。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/05/20/c582f00b83373c2196da6ba2784397a5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/05/20/8386a04ea80549499179b3ec3968cbfb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>（一）外屏</h3><p>Pura X的小屏在我看来其实是一个很不错的设计，有很多有趣的主题，看起来清晰度其实很高，至少在我看来还是比较细腻的，观感很不错。但在我看来，这个小屏的实用性还可以更好一点。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/05/20/d9d46890a3f8cf3bd43e6df232d79e8c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/05/20/a330524d37e28b369fad0d83063a2108.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>比如目前现在右滑可以直接对话的小艺AI，在我日常生活使用这个功能的次数几乎是0，我明白现在各家都需要做Ai来提高自己品牌的含金量，但现在苹果的国内AI也一直没有上，所以我觉得并不着急把AI的优先级调的这么高，或许这个地方还可以放一点别的内容进去。</p><p>其次，是外屏的这些App的可用性比较低，比如抖音目前只适配了关注页和推荐页的视频、关注和点赞，日常使用率比较高的评论也用不了。</p><p>让我比较惊喜的是微博、小红书、高德地图和QQ音乐。高德地图是我觉得小屏使用的最佳App，因为在外出的时候，也不需要频繁打开内屏，只需要用小屏看一眼就可以走了；QQ音乐则是适配的比较好的app，有歌词页、单曲封面页以及首页，使用起来比较方便；微博则是我认为几乎能够在外屏实现所有操作的App，推荐每一个App都最好能做到像微博这样。</p><p>小屏不能旋转方向，似乎是因为想让用户只用这一个方向去操作，但既然把它做成了正方形，每次从兜里掏出来的时候都要重新辨识一下方向，也会让开机点亮屏幕这一步变得麻烦一些。</p><h2>（二）内屏</h2><p>到了内屏，我们就要从两个角度来聊了，分别是横屏状态，和竖屏状态下的PuraX。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/05/20/ef75a43cff711d6fe4673dd6c57d0c22.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/05/20/375e0318f3843cdd42f7776192b7b2f7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>1、横屏</h3><h4>1-1、观影场景</h4><p>横屏状态下，真的很适合看电视、综艺、电影一类的视频，也就是所谓的“为内容而生”。</p><figure class="image ss-img-wrapper image_resized" style="width: 458px;"><img src="https://cdnfile.sspai.com/2025/05/20/08438f40c456fcde795bc49da38d4332.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>现在16:9的视频比例还是主流，在看大多数视频的时候，都能得到不错的观感，上下只有一道细细的黑边，屏幕也比正常的直板机要更宽，所以看这类视频的话，观看体验真的非常好，我日常大部分时间也都是会用它去看横屏的视频。 但是要注意的是，在看2.39:1的电影类内容时，上下的黑边就会变的很宽，观看的体验相较于直板机会差一点。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/20/e6463966d15bf1c47f8567a8dd6dfec3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>16:9</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/20/5c3fa79be550b30e226e10c2d6eeb431.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>2.39:1</figcaption></figure><h4>1-2、横屏使用app</h4><p>在使用小红书的时候，它的横屏使用体验也是和平板类似，能够同时观看更多列的瀑布流。在这里真的要讲一下小红书的适配，真的太强了。</p><figure class="image ss-img-wrapper image_resized" style="width: 592px;"><img src="https://cdnfile.sspai.com/2025/05/20/a23333c77a6270755bc9147d3ec273e4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>目前在pura X上，腾讯视频、剪映、WPS是可以点击立刻横屏使用的，其他的很多App都不支持横屏使用，我是觉得作为折叠屏，可能更多时候是需要用到内屏的横屏状态，所以各类App开屏能够识别到横屏并翻转过来时我觉得最完美的一个状态，但purax现在自己本身的主界面也不支持横屏，所以可能这需要一个很长时间的适配过程吧，这一点我们后面再讲。</p><h4>1-3、游戏场景</h4><p>游戏场景下，我们以王者荣耀为例，为什么不以别的游戏举例呢，因为别的游戏鸿蒙系统还没适配。</p><p>在没有接触到折叠屏的时候，我会盲目的以为折叠屏的屏幕面积既然比直板机大了那么多，那显示的画面应该也会比直板机更多一点吧， 其实并没有。同样的位置，直板机其实在横向上能够看到更远的一点距离，也会看到更多的画面内容。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/20/b59e19108252ffa4147365fc655e130b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>可以对比右下角的石头露出部分</figcaption></figure><p>另外，希望鸿蒙能够尽快适配金铲铲之战，在这种大屏幕下棋，我还是保持一点期待的。</p><h3>2、竖屏</h3><h4>2-1、短视频场景</h4><p>在竖屏使用时，我们会发现，像抖音、快手这样的短视频平台，视频画面能够填满整个屏幕。这样在看一些横屏或者4:3、1:1比例视频的时候都很舒服，因为它本身屏幕就足够大，能够显示的画面要比直板机大很多。</p><p>但，在观看9:16的视频时，也就是我们日常看到的手机拍摄比例的视频时，会遇到一个问题，就是画面的上下两部分会被裁切掉，缺少了很多信息；并且由于上下这两部分，日常各大博主都会在这里放字幕和一部分的文字标题，在竖屏使用时，也会被填充放大，导致信息的重叠，观看的体验并没有那么好。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/05/20/1fe81c54b7f2e09d884ae4585e9a6b42.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/05/20/1da42710c36e080213852a54e88a07f6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper image_resized" style="width: 576px;"><img src="https://cdnfile.sspai.com/2025/05/20/ba6cd386c3af8d34f78f189a0e25f941.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h4>2-2、阅读场景</h4><p>在看书时，因为purax的屏幕比例是16:10，这个比例和很多书籍的比例是相似的，所以在观看体验上是和书籍差不多的，在我日常阅读的过程中感受也是类似的，不管是看书也好、看漫画也罢，使用的体验要比直板机舒服很多。</p><p>但我发现在同样的设置下，purax的内容信息其实是和直板机是一样的，两个手机的文字大小同样设置成19，显示的文字数量其实是差不多的。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/20/b49e713d5946234bd118958831fab582.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>看漫画的时候，如果你是看那种一页一页的漫画，那purax的体验是要比直板机好很多，屏幕更大，显示的内容也更多，看起来也更爽；但如果是那种竖向的卷轴漫画的形式，那还是直板机看起来内容会更多且更流畅一点。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/20/fde8097f3deaff8480fe74ccff554715.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>我在使用purax的过程中，我发现当我展开和折叠的过程中，就非常像在打开和折叠一本小人书，如果能以这样的形态去阅读的话，也是非常舒服的一个状态，但现在无论是华为阅读还是微信阅读，都不支持这样的形式去看书，会有点遗憾。另外在适配上也是一个很大的问题，比如微信读书到现在只有目录和调节文字大小两个选项，不能做笔记不能选中文字不能做其他任何操作，希望能尽快适配吧。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/20/2c72de5fcb12043380ff467754aa6f28.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>purax的卖点之一叫做“眼动翻页”，就是当你的眼睛看到画面右下角，再看回到屏幕左上角，画面会自动翻页，目前我使用下来，这个功能的初衷是非常好的，但是精度还会存在一定的问题，比如我看到下面这个部分，眨眼的时候，系统就会认为我是看完了这一页，自动给我翻过去了，所以这个功能也没有使用多久就关闭了。并且这个功能目前只有华为阅读支持，其他app还不支持。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/20/ae5dca9c7d31fddb0af8ee94f2a7b2f8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h4>2-3、社交软件场景</h4><p>在竖屏使用社交、购物软件时，目前purax的画面显示信息还是要比直板机少一些的，主要是因为目前这些app采用的适配逻辑都是横向拉伸，单方面把app放大，导致虽然purax的画面要比直板机大了不少，但能够利用起来的并不多，在显示信息的密度上还是不如直板机多。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/05/20/aa0c8ad1d844910d488ff72b40bccb11.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/05/20/9531cb7a51f39df6257dfa076f624b9e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>三、影像系统</h2><p>终于讲到影像系统了，其实以往在体验各种手机的时候，我最期待的就是手机影像系统，拿到一款手机总是会情不自禁的打开相机先看看拍摄效果如何。</p><p>但，华为Pura X，并不是这样一款让你能够期待影像系统的手机。</p><p>首先来看参数，一共四颗镜头，分别是4000 万像素超广角微距摄像头、800 万像素长焦摄像头、5000 万像素超感知摄像头以及这颗华为主推的红枫原色摄像头。其实这四颗镜头单纯从参数上来看，除了长焦的800万不太够用，别的也都还可以。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/20/9ee4dd4d29c813046ffc2abf1f726146.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>实际使用情况也是如此。</p><p>首先来看拍照，日常拍照的话，purax其实并不差，日光充足的情况下，不管拍摄近处还是远处的物体，都能有不错的效果，包括拍摄人像，也能得到比较舒服的照片。而一旦在光线较差的环境下，它的拍摄能力就会有明显的下降，会出现比较严重的模糊失真，非常吃光。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/20/3c4600fdcd2255e5c5e00c84ebf577ab.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/05/20/8a972f6933be4d63ed694298db9a2cee.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/05/20/fe3e95c79ca8761cfd40288a3591755b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>同时purax有一个功能叫做「双屏同显」，可以在拍摄时让被摄者看到当时的画面，非常贴心。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/20/ef302beffee6f5b1e86c6f9e9abc8fd6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在录像时，purax目前支持最高画质是4k60，运动稳定支持最高画质2.7k60。</p><p>但是目前Pura X在录制60帧视频时，无法调用长焦，只有4k30和2.7k30帧录制时能够调用长焦。</p><p>因此，如果你有很强的影像记录需求，Pura X这款手机并不适合你，但如果你平时只有扫二维码、随手拍点生活照片的需求的话，pura X还是可以的。</p><h2>四、续航与能效</h2><p>Pura X这次搭载的电池容量是4720 mAh，这个电池容量绝对不算大，但轻度使用一天是足够的</p><p>五一的时候我们带着Pura X去露营，在日常拍摄使用一天后，晚上回家路上，就只剩下了百分之十几的电量，因此如果你经常会拍摄或者打游戏，那一天两充是肯定的。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/05/20/205009d90c510e23552c2395b478e704.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/05/20/03b04687237e382392a078b827ee420e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>Pura X整体的使用上，我目前还没有遇到任何卡顿，甚至在户外拍照连拍时，iPhone16pro出现卡顿，但puraX依然能够保持连拍；甚至，最让我惊喜的是，在户外二十多度的情况下，iPhone16pro已经出现降亮度的情况，但pura X在户外依然能够保持很高的亮度，能够清晰的看到画面内容，这一点非常优秀。</p><h2><strong>五、系统与生态</strong></h2><p>终于，系统生态。这次Pura X是第一款内置搭载原生鸿蒙NEXT系统的手机，那鸿蒙Next5体验如何呢。我的评价是，有点拉垮。</p><p>在我使用的这段时间里，能感受到一些鸿蒙系统的优点，比如很多App，华为账号可以一键登录，省去了输入手机号和验证码的麻烦，非常方便。其次，目前鸿蒙系统的动画我觉得做的也是可以的，比较流畅，使用上也不会有卡顿的情况。但是，非常关键的一个影响因素是，鸿蒙系统目前的软件适配真的很差劲，甚至会影响到日常的使用。</p><p>在这里我简单讲几个我遇到的问题。原生app我遇到的问题包括，应用商店没有排行榜（可能因为适配的App太少所以根本就没有做）；相机预览框的果冻效应明显。</p><p>第三方App遇到的问题就更多了。微信不能切换微信账号只能退出重新登录；微信不能搜索表情；不支持位置共享。卓易通下载的app很多都不支持微信登录；卓易通下载的网易云音乐无法分享。还有很多，受限于篇幅，咱们就不一一列举了。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/05/20/4ba43b99f8f12b854367fd80caa423ea.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/05/20/155800d258804736ca564109d8abd88f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>当然有些App适配的还是比较好的，比如之前已经夸过很多次的小红书。但能做到小红书这样的App还真的是少之又少，这需要华为去不断推进各大App去针对鸿蒙Next做更进一步的适配。目前Purax这款“为内容而生”的手机，能适配的内容还是真的很少，大部分都做的没有那么好。</p><h2>六、总结和定位</h2><p>其实Pura X的这个手机形态是非常有想法的，16:10这样的比例，能够适配16:9这样主流的视频比例，也能适配我喜欢的4:3比例的视频，只是需要对9:16的视频再做一些优化。</p><p>我也一直觉得华为这家公司很有设计想法，比如之前出过的Lipstick 2口红耳机，可以看出华为其实是想要去做出改变，在试图做一些新的产品，这一点我觉得要比16e的推出要更有创新性一点。</p><p>但单论Pura X这一款产品，<strong>它绝对不是一款适合大多数人的手机</strong>，大部分人应该还是更适合P系列或者Mate系列，我之前也是P系列的用户，包括我的家人现在也在用P系列的手机，体验都不错。</p><p>个人认为Pura这款产品，更适合以下几种用户。</p><blockquote><p>一是想选择一款小折叠，能随时展开获得类似平板大屏体验的用户；</p><p>二是完全喜欢这样的折叠屏手机，单纯冲着颜值去入手的用户。</p></blockquote><p>但无论是哪一种用户，都需要明白的是，现在的Pura X还是一个半成品，这里的半成品完全是因为鸿蒙Next5系统的问题，在之后的时间里，肯定会逐步适配，将所有基础的功能完善，甚至可以再开发出一些优秀的功能。<strong>而现在选择入手的用户，需要承受的问题就是各种基础功能的缺失，甚至会影响正常的生活工作，在入手前，需要做好心理准备。</strong></p><p>ok，那以上就是本期视频的全部内容了，感谢你的观看，我是泷谷，我们下期节目，再见。</p><span class="ss-linkCard">&nbsp;</span> <p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/99320</id>
            <title>Mac 历险记「mini版」</title>
            <link>https://sspai.com/post/99320</link>
            <guid isPermaLink="false">https://sspai.com/post/99320</guid>
            <pubDate></pubDate>
            <updated>Tue, 20 May 2025 03:34:40 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Mac mini, 选购体验, macOS, Windows对比  
<br>  
<br>  
总结: 作者分享购买Mac mini的心路历程和使用体验。文章从初次接触Mac的回忆开始，详细描述了选购过程中的价格比较和配置选择。作者对比了macOS和Windows系统的差异，指出macOS界面简洁、沉浸感强，但存在一些操作逻辑上的不适应。硬件连接方面遇到鼠标键盘配对问题，最终通过Apple生态解决。软件体验上赞赏macOS的"少即是多"设计理念，但也批评部分系统限制。最后提到Apple全家桶的协同功能，如Apple Watch解锁和iPad屏幕镜像等便利性。整体认为Mac适合有明确需求的用户，但Windows用户转换需权衡利弊。 </div>
                        <hr>
                    
                    <p>前段时间偶然间刷到一个钓鱼佬用 Mac mini ➕ iPad 户外办公的视频。转眼一看，很久之前为了愉快的游戏，积攒了许多外设，显示器、键盘、鼠标，样样齐全。加之 Apple &nbsp;全家桶也只差最后一块拼图。思来想去，大手一挥，搞！</p><p>距离到货也快半个月了，短暂的相处时光，Mac mini 给我的感觉像闺女，为父看着就高兴，想让她干点啥吧。Win 儿都养大了，什么也都能干，也顺手，「使唤」惯了嘛，也不心疼，干就完了。Mac 闺女不行，生怕「累着」，这些天干得最多的就是 Apple &nbsp;Music 全屏播放程序当背景板，全逗老父亲乐呵了。</p><p>不过这一段日子的相处，还是发生了不少有趣的事情，于是决定记录下来分享一二。</p><p>Ps：为方便撰写，全文的「Windows 系统」，简称「Win」。且作使用版本为 Win10，因为显然 Win11 是半成品。</p><hr /><h2>与「白月光」的初次相遇</h2><p>故事还要从很久很久以前讲起，那时候作者还没有为人父母，还只是一个小孩子。也不知道什么是 Mac，只是看到 Apple 的 logo，就会激动的 OHHHHHHH！如果还会发光，那就更激动了。iPhone 的高额售价在那时候三线小城的孩子眼里，就直接和尊贵挂钩，加之当时领先时代的工业设计，看上去就绝非等闲之物。</p><p>第一次体验 Mac 因该是 iPhone 还在 4 的时候，乔布斯也在世。iPhone 4 不会记错是因为那块玻璃背板太惊艳了，对了还有那个宽大的充电口。但那台 MacBook 是什么型号完全分不清，只知道还有配有吸入式光驱。有趣的是，虽然是 Mac 初体验，但是初体验的内容是 Video game，是 Gameloft 的《狂野飙车8：极速凌云》，不过也是过了很久之后才知道 Mac 基本属于电子游戏绝缘体。</p><p>题外话：要是在那个时间节点，苹果公司以 Mac 不能畅玩游戏作为卖点，在大陆宣传。不知道有多少家长会冲动消费，当小用户们在过去形成了 macOS 的使用习惯，之后持续使用 macOS，消费 Apple 产品。这下是真的错失「大目标」了。</p><p>短暂的相处，除了外观，Mac 并未给我带来更多惊艳的表现，毕竟注意力全在游戏上了，和小时候看西游记光顾着看猴子一样。</p><p>不过几点有趣的细节，足够特别，特别到可以和其他小朋友吹牛，于是深刻的记住了。例如窗口左上角娇小的「交通信号灯🚥」，那会刚上手 macOS ，触控板快捷操作是一窍不通的，鼠标指针拖动起来一点也不熟练。键盘上的符号都看不懂，更别说快捷键了。所以 macOS 的第一次关闭窗口，就废了老大劲。虽然是醒目且意义明确的红色和叉叉组合，不过在<strong>左上角</strong>的位置（没人觉得左上角很反直觉嘛），还很<strong>小</strong>（小广告设计程序员你用的 Mac 吧）。</p><p>不过有一说一，那时候 MacBook 的触控板就很好摸了，像女孩子的手，冰冰凉凉的还很滑，可能鼠标指针那么重就是为了让用户多摸几下触控板吧。</p><p>拟物化图标搭配 Dock 栏看着还是非常精致的，感觉就像是在抽屉里摆放着各式各样的工具，整齐的摆放，等待被取用。</p><p>与 MacBook 的初遇，没有足够的时间相处、了解，瑕不掩瑜的部分也被惊艳的外观所掩盖，真就像一抹「白月光」，让我从年少开始一直怀念着。</p><p>长这么大倒也有很多次机会，可以拥有属于自己的 Mac ，但碍于 Mac 不能愉快游戏的特点，每次 Mac 都成了首要排除的对象，毕竟大多时候的情况都是只能多选一。Mac 不像 iPhone 能接触、能体验、能听到评价的机会多，所以迟迟没有勇气追寻当年的「白月光」。</p><p>不过现如今当一切外设都准备妥当之后，Mac 作为全家桶拼图的最后一块，终于可以在合适的时间迎来她的「降生」。</p><h2>选购</h2><h3>预设</h3><p>钓鱼佬的视频，让我灵光一闪，但并没有直接促使我激情下单。库克的刀法成名已久，为了防止自己掉入圈套，在打开 Apple Store 之前给自己预设了一个限值，最便宜的一定是「丐版」mini，但其基础配置一定不够看，接受一次升级溢价。</p><p>打开 Store 之后，扫了一眼「白月光」，感觉可以为爱冲锋。但还是先确认了预设值的大小。</p><p><strong>4499 + 1500 = 5999 ¥</strong></p><p>说实话，看到这个规整的数字时候，不经莞尔一笑，还得是你这个老狐狸啊，库克！</p><h3>挑选</h3><p>先确认了价格之后出门再逛逛其他产品，来都来了，看一看咋了。首先白月光 Book ，7999¥ 的确是能冲的门槛。同为丐版的情况下，MacBook Air 13 英寸与 Mac mini 差价 3500 ¥。1049¥ 的妙控键盘，899¥ 的妙控板，也就是说 13 寸的显示器 1600¥。突然就感受到了捆绑销售的魅力了，正感到犹豫不决时，突然注意一个细节，两位「小乞丐」还是有区别的。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/05/18/579721f51c0af7f2cfdd33da686f0705.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/05/18/69103afb5bb182b9b2135f3f850ec7f0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>&nbsp;</p><p>Mini 比 Air 多两个图形核，两颗图形核 750¥ ，白月光的形象轰然倒塌。同核差价增至 4250¥ ，再差二百五，直接差出一台 Mini🤣。</p><figure class="image ss-img-wrapper image_resized" style="width: 507px;"><img src="https://cdnfile.sspai.com/2025/05/18/9cd40e61e1b5c881502f14c6f36aa2b2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>增配选项</figcaption></figure><p>不过下面又一行小字，吸引了我的注意。</p><figure class="image ss-img-wrapper image_resized" style="width: 493px;"><img src="https://cdnfile.sspai.com/2025/05/18/5c2ad52152be2bc5be836c57164dd50a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>随附升级</figcaption></figure><blockquote><p>基础配置一定不够看，接受一次升级溢价。</p></blockquote><p>于是 9499¥ 的 Air 和 5999¥ 的 mini 差价回到 3500¥。</p><figure class="image ss-img-wrapper image_resized" style="width: 198px;"><img alt="图片" src="https://cdnfile.sspai.com/2025/05/18/article/a15a73cbfff8f3fac5aa5d9ee941ee85.gif" /><figcaption>绝</figcaption></figure><p>还得是你这个老狐狸啊，刀圣库克。</p><p>一番折腾，惊讶之后，发现突然没那么喜欢「白月光」了。也算不上突然，众多的外设已经占据了桌面大部分空间， 16 寸的 OMEN 在侧，确实没有余地留给 MacBook，即使是 13 寸，1049¥ 的妙控键盘挺鸡肋的，不喜欢这样的配列，剪刀脚挺优秀的设计吧，但和机械键盘相比肯定还是有差距的。虽然一直心心念念 MacBook 的触摸板，但单独买一个能随意移动的显然是更优解。1600¥ 的显示器买一块「完整」的显示器还是绰绰有余。虽然刘海搭配菜单栏也算是相得益彰，但是直接感官毫无疑问是丑的。</p><p>结合已拥有的场景，我的终极需求是明确的，就是 macOS ，Mac mini 无疑是最合适的选择，如过有人问我为什么不选择「死丢丢」。好吧虽然 SDXC 卡槽确实是刚需，除了根本不用看的过爆的预算之外，「Studio」这个名字就说明产品的潜在用户不会是我这样的个体用户。</p><figure class="image ss-img-wrapper image_resized" style="width: 511px;"><img src="https://cdnfile.sspai.com/2025/05/18/026b07b467f5e36ba96208f5ef33120c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>studio释义</figcaption></figure><h3>选配</h3><p>到了定制我的 Mac mini 环节，1500¥ 该用在哪里相信不用过多解释，RAM 是焊接在主板上的，极高的速度要求，也注定了无法通过外接实现。8G 的 RAM 单价也比 256G 的 SSD 更贵。如果有人问为什么不把 RAM 拉到顶。首先 32G RAM 配 256G 的 SSD 会出现明显的木桶效应，其次 1500¥ 8G RAM，性价比的确有点低。最后，因为从 19 年起就用的 16G 的 RAM。现在正在使用的 OMEN 还是 2 × 8G 的搭配，想再这方面有所提升 24G 确实是一个台阶，不至于原地踏步，也不至于步子太大。如过未来有大过24G 的实际需求，1500¥ 可以买两条还不错的 32G DDR5。好钢用在刀刃上，咱不能花冤枉钱。</p><figure class="image ss-img-wrapper image_resized" style="width: 254px;"><img src="https://cdnfile.sspai.com/2025/05/18/0212c05d9376bf6e0c69c89551107ca6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>OMEN内存条</figcaption></figure><p>即使 Mac 处于满载状态，不能执行更多任务，我也可以切换回 Win 继续工作娱乐，不存在焦急等待任务结束的尴尬情况。双系统带来的灵活性，也是购买初衷之一。</p><h3>下单</h3><p>终于到了激动人心的下单环节了，要放在以前我会觉得 1500¥ 的升级力度怎么看都不够看，但现在有底气了，国补给的。再加上虽然本人早已离开校园多年，但是在校大学生还是很多的，找朋友托关系教育优惠多少又能省点。最后以接近丐版原价的价格完成交易，相当于免费升级。</p><figure class="image ss-img-wrapper image_resized" style="width: 296px;"><img alt="Apple/苹果AI电脑/【教育优惠】2024Mac miniM4(10+10核)24G 256G银色台式电脑主机Z1CF0003A" src="https://cdnfile.sspai.com/2025/05/18/article/0fb3336e744e72dc11979ffc63e4fee4.avif?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>24＋256 mini 国补叠加教育优惠成交价</figcaption></figure><p>也算让 Mac mini 从美丽废物梯队上升到甜品级。钓鱼佬了的视频提供了灵感，京东的横幅给了底气，挑选的过程算得上流畅，没什么肉疼的感觉，也没什么尴尬的纠结。购物体验完美，是一个美好的开始，让我对 Mac mini 的「降生」有了更多的期待。</p><h2>硬件</h2><p>京东的物流还是很给力的，况且还是 Apple 的产品，速度奇快无比。收获由于太激动，差点把快递员关门外，国补商品需要确认开箱操作。因为是电脑，所以不用等待激活，倒也没打扰太多时间。</p><p>接好电源，然后「抠屁股」。坦白说，个人非常接受这个设计，毕竟电脑不像手机的，需要随时波动电源键。 即使你是环保主义者，每天使用频率也一般不超过三次的功能。为了外观牺牲便捷的设计，简直优雅！</p><h3>鼠标</h3><p>开机之后紧接着就是连接妙控设备，自然是一个也没有。现有的键盘鼠标都是标准三模（有线、蓝牙5.1、2.4GHz无线），习惯性准备插上 2.4GHz 去适配蓝牙，但是没有拓展坞，只有一个为 U盘准备的 OTG。轮换使用一个 Type-A 口实在太麻烦，好巧不巧键盘亮红灯了，才想起来，充电口除了充电可以有线直连啊。</p><p>连上设备，简单两步操作成功进入设备，赶紧打开设置连接蓝牙，实在受不了数据线像毛毛虫蜷在桌面上。不过尴尬的事情发生了，有线连接模式的时候不支持同时蓝牙配对，而且在设置中 Tap 或者方向键都只能在一级菜单之间轮换，不能像 Win 中键盘几乎覆盖所有可选框。</p><figure class="image ss-img-wrapper image_resized" style="width: 360px;"><img src="https://cdnfile.sspai.com/2025/05/18/8dad771ee164e2beb429eeec22615283.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Win通过键盘勾选框</figcaption></figure><p>笔记本有触摸板可以备用，Mac mini 是主机，非得用妙控配件不成？想着很长一段时间都只能连着丑陋的数据线用鼠标，要不然就要接拓展坞，瞬间好心情去了一大半。</p><p>愤怒的拖着鼠标在屏幕上乱晃，看着移动慢悠悠的光标更气人了。算了先做其他方面的「装修」吧。</p><p>按照装修 Win 的策略，首先打扫底部任务栏。那 Mac 就从顶部菜单栏开始吧（默认看起来就很干净整洁👍）。iOS 18 开始支持更高程度的自定义控制中心，工具嘛，自然是越顺手越顺心。</p><figure class="image ss-img-wrapper image_resized" style="width: 195px;"><img src="https://cdnfile.sspai.com/2025/05/18/12c4b41bb0a569dd4af1e154b78cff2b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>手里iPhone的控制中心</figcaption></figure><p>打开 macOS 的控制中心，找不到自定义入口（说实话这个时候已经气得想退货了），扫了一眼，台前调度还好说，iPad 上用过，偶尔实用。屏幕镜像到底是什么功能啊，从 iPhone 5 的控制中心里就有那个，这都 16 了一次也没用过，iOS 18 之后毫不犹豫第一个从控制中心剔除的功能。算了，想一想这是 macOS 看看这个功能到底有什么能耐吧，看到我的 iPad 躺在选项列表里，好吧也不是一无是处。点击，连接过程还挺丝滑，也不需要配对。（瞬间偃旗息鼓，火去了一大半）</p><p>突然灵光一闪，乔帮主在第一代 iPhone 发布时的名言</p><figure class="image ss-img-wrapper image_resized" style="width: 511px;"><img src="https://cdnfile.sspai.com/2025/05/18/bb459ecbd937d93637ccbe074e3137c4.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>最好的指点设备</figcaption></figure><blockquote><p>We're going to use the best pointing device in the world. We're going to use a pointing device that we’re all born with. We're born with ten of them.</p><p>「我们要使用世界上最好的指点设备。我们每个人天生就拥有他们。我们生来就有十个。」</p></blockquote><p>手指们跃跃欲试，不过得先用鼠标将窗口拖动到 iPad 显示区域，然后断开连线，开启蓝牙配对， 但是奇怪的是并没有显示配对按钮，当我尝试使用手指点击，发现也没有任何反应。我的「手指设备」失灵了？不应该啊，我确认自己是天生人类。瞬间心情又跌回谷底。</p><p>还是说我记错了，不应该啊，这段我早就烂熟于心。连忙回看整个视频，看到这页演示文稿，突然恍然大悟。</p><figure class="image ss-img-wrapper image_resized" style="width: 462px;"><img src="https://cdnfile.sspai.com/2025/05/18/82cd2bac2efddd4b0fe6a5e8ea72b17c.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Who wants a stylus？</figcaption></figure><blockquote><p>We're going to use a stylus? No. Who wants a stylus? You have to get them, and put them away, and you lose them. Yuck. Nobody wants a stylus. So let's not use a stylus.</p><p>「我们要用触控笔吗？不。谁想要触控笔呢？你得拿出来再收起来，而且还容易丢。太糟糕了。没人想要触控笔。所以我们不要用触控笔。」</p></blockquote><p>但事实上是，触控笔帮我完成了配对。</p><figure class="image ss-img-wrapper image_resized" style="width: 442px;"><img src="https://cdnfile.sspai.com/2025/05/18/075c19c5236ff662d3953c9591e6cc6b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Apple pencil 操控鼠标指针</figcaption></figure><p>啊，原来这就是生态啊。</p><p>曲折的完成了第三方鼠标的配对，键盘是老早就配对上了，但是用起来非常别扭，鼠标解决之后，也有心情了，准备研究一下键盘映射。</p><h3>键盘</h3><p>手里的是铝厂的 IQUNIX F65 的 65 配列的键盘，对于那些不常用的区域，能扔掉就扔掉吧，一年也按不了两下，又丑还占地方。Mac mini 的开机键在屁股上，可以说是为了外观牺牲便利，但全佩列的键盘，除了丑还多余（如果是星际争霸，功能区确实是刚需）。</p><p>最开始是因为喜欢铝厂这个稳重简约的外观，没想到有一天自带的板载双系统还帮忙省钱了，想当初买个键盘还被骂败家😅（扳回一城，争气键盘✌️）。</p><figure class="image ss-img-wrapper image_resized" style="width: 369px;"><img src="https://cdnfile.sspai.com/2025/05/18/39d6481265fee90b5583b4c4d64a4953.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>IQUNIX F65 商城图览</figcaption></figure><p>由于自带的键帽不那么喜欢，换了一套 MEIZU PANDAER OLLIE 的键帽，刚好这个键帽 Win 和 Mac 的修饰键是合印的，比原来的好用，这下快捷键学习方便快捷不少，可谓天时地利人和。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/18/cd3d72df66a7bd7a5f1e26b62d701a42.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>OLLIE 键帽局部</figcaption></figure><p>正在沾沾自喜的时候，发现很多快捷键，多数和 🌐(fn) 有关的，即使跟着提示按根本触发不了。以为是驱动适配或者键盘映射 Fn 和 Globe 的映射问题，键盘驱动因为很长一段时间没有使用了，在重装 Win 系统的时候就被「优化」掉了，还好官网上有留存。</p><p>因为驱动是 .exe 文件，所以只能转回 Win 做设置，但驱动显示一切正常。回到 Mac 依旧触发不了，以为又是什么妙控独占的骚操作，求助 AI 看看 Mac 有没有什么能修改键盘映射，只能死马当活马医了，再买一个肯定是要被骂死的。但奇怪的是映射应依旧显示正常，又仔细研究了一遍说明书。因为是小配列，键盘默认 Fn 为层级键，用来触发功能键，所以在 Mac 上与组合快捷键发生逻辑对撞。</p><figure class="image ss-img-wrapper image_resized" style="width: 425px;"><img src="https://cdnfile.sspai.com/2025/05/18/7aceded04580187818f61fde5fc7aea1.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>IQUNIX F65 说明书</figcaption></figure><p>优化方法只能是取消掉大多数不常用的层级功能或者改位，以免和 Mac 系统的快捷键对撞。但好在是 95% 的使用场景已经不受影响。如过有人这个时候问会选择妙控键盘吗，我的答案是不会，因为上下方向键只有半高，<strong>Yuck！</strong>但是秒控板，有机会还是要搞一手的，还是心心念念那难以忘怀的触感。</p><p>而且不知道是因为 Win 带来的使用习惯上还是因为其他，我始终觉得 Mac 的<strong>修饰键</strong>始终很别扭，在 Win 上常会用到任务管理器，得确认应用是不是真的关闭了，还是藏起来偷偷运行。在 Win 上 Ctrl + Shift + Esc 都在键盘的最左侧，大拇指、食指、中指，各司其职，就像做一个 👌 手势的镜像，任务完成的非常的丝滑。到了 Mac 上就有些小尴尬，大拇指分配给了常用的 ⌘ ，食指会分配给其他的字母键以触发其他指令，于是 「⌥」就轮到了最长的中指，最后能就只能用无名指去够到远在天边的「⎋」，于是最后手势就变成了🤟。</p><figure class="image ss-img-wrapper image_resized" style="width: 308px;"><img src="https://cdnfile.sspai.com/2025/05/18/c08ade4b3d88f56df6360f124c4f89f0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>快捷键使用手势照片</figcaption></figure><p>可能第一眼看上去还挺正常的，但是由于手指又粗又短，在实际的操作中，经常误触，别扭的感觉快要发射蛛丝了。即使纠正使用习惯，改变了手指，还是不能达到「顺手」的状态。过了一段时间发现，可以一个大拇指摁住两个键，事情就变得 Easy 了。过了一段时间又发现，其实 Mac 不太需要任务管理，因为 ⌘ + Q 就可以完全 Quit 出应用。妈妈再也不用担心我的电脑被僵尸应用侵占了。</p><p>在研究 Fn 键问题的时候发现，macOS 也有内置的虚拟键盘，可以反应当前键盘的触发情况，亏我还绕了一大圈去找第三方工具。</p><figure class="image ss-img-wrapper image_resized" style="width: 424px;"><img src="https://cdnfile.sspai.com/2025/05/18/1a4e1dabc18763b92464735f9a4dda40.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>macOS 虚拟键盘</figcaption></figure><h2>软件</h2><h3>程序</h3><p>说到第三方工具，当时根据 AI 推荐结果，我的第一反应是去到 App Store 中检索下载，即使没有，也以为是个例，完全没有注意到反常。</p><p>当我整理好我的硬件，准备处理软件时候，发现软件商店一个像样的清理卸载工具都没有，这和我印象里的 App Store 不太一样啊，问了 AI 才略知一二。</p><p>暂时找不到趁手的工具，那就通过系统设置卸载，先卸载不用的系统工具吧。Apple 自家的办公三件套是最先丢进垃圾桶的。不过紧接着问题就来了，录音机不能卸载能理解一点，但是股市不能卸载是因为什么？你这么贵你还玩系统预装？你以为你 OEM 厂啊，你更流氓还不让卸载。</p><p>不过好在 Safari 不会阻拦我下载 Chrome，这点值得点赞👍，暂时扳回一城。虽然 Safari 足够好用，但是一些特殊场景还是会用到 Chrome。</p><p>但奇葩的事情又出现了，在使用 Chrome 的时候都会用到匿名浏览的方式，于是我会在启动目标加上 <code>--incognito</code>，这样每次启动都会是匿名模式，非常方便，但 Mac 却不允许用户修改启动文件。虽然到这里我也才体验 macOS 不到半天，但是已经有些习惯 Apple 的「尿性」了。顺带一提 Safari 允许用户选择以无痕模式启动，都不知道该先骂哪边。</p><figure class="image ss-img-wrapper image_resized" style="width: 485px;"><img src="https://cdnfile.sspai.com/2025/05/18/ae822fb6ab7eec860fdb4f0aad5cd752.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>macOS Safari 设置</figcaption></figure><p>软件方面体验的非常少，首先在原来的 Win 上就没装几个应用，国产软件太流氓了，打不过我躲得过，不安装就是了，能网页就网页 ，不登陆不给用，那就不用。所以浏览器方面体验感相对详细。</p><p>虽然系统自带的应用，有些因为是垃圾所以丢进垃圾桶里，有些垃圾丢不进垃圾桶里，再除去中国大陆不可用的应用，剩下的都还蛮精品的。</p><p>macOS 的沉浸感真的很好，除了优秀的适配，没什么广告打扰（虽然我手里的 Win 也没广告），⌃ + ⌘ + F 一按所有打扰都不见了，红绿灯都消失的无影无踪。</p><figure class="image ss-img-wrapper image_resized" style="width: 437px;"><img src="https://cdnfile.sspai.com/2025/05/18/e79a14bada8807fd07410c7bef5641bd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>全屏播放程序截图</figcaption></figure><h3>系统</h3><p>macOS 的「沉静感」来自于多维度的“少即是多”，界面简洁克制，语言统一；音效都是温和而克制的；丝滑的动画，流畅自然；还有字体也足够<strong>清晰</strong>。</p><p>「沉静感」是被 Apple 深度设计的，从情绪层面影响用户体验的成果。这是上手 macOS 最舒服的地方，这也是为什么说 Mac 像「女儿」，独特的细腻之处，总之比 Win 拼凑的简陋感要好很多。</p><p>而且 Mac 比 Windows 更懂 windows！macOS 除了屏幕全铺的惊艳，macOS 的窗口也堪称一绝，贴靠，分屏，吸附，放大，缩小，全都一气呵成。除开醒目的「红绿灯」这种明晃的提示，macOS 总能让我自然聚焦在当前使用的窗口，不会花时间和精力在寻找当前目标上。</p><p>如过让我做推荐我也会毫不犹豫将 Mac 推荐给没用过电脑的或者不怎么使用电脑的人，舒适，省心都是推荐的理由。</p><p>相比之下，崭新的 Win 还像个毛坯房，但多年的使用，经常的重装，对我来说装修 Win 一切都轻车熟路，关键设置小手点一点精致简约的外观就定义好了，再用上官方外挂 PowerToys 使用体验直接连跳几级。</p><figure class="image ss-img-wrapper image_resized" style="width: 465px;"><img src="https://cdnfile.sspai.com/2025/05/18/92d26b7bfcee47e4c857f6fd13bf3dff.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>简约风 win截图</figcaption></figure><p>Win 的混乱源自于其厚重的历史包袱，比如你用 Win + I 调出了系统设置，以为他是系统核心功能，但是在启动菜单，和「此电脑」以及「文件资源管理器」同级的系统控制软件叫「控制面板」。</p><figure class="image ss-img-wrapper image_resized" style="width: 277px;"><img src="https://cdnfile.sspai.com/2025/05/18/3ccd3590f4fe06cf4e60c89898f0645f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>win系统文件夹</figcaption></figure><p>最开始研究 Win 设置的时候，一度认为这不就是纯纯 「NT（Nao'Tan）」 吗？哎，还真是「NT」，现代 Windows 包括 11 都基于 93 年的 NT 架构组成模块。</p><p>为了让不同时代的用户，都能愉快使用，都能拥有自己顺手的内容，Win 大多时候采用「并存」方案，所以很多时候有逻辑混乱。所以显得即使是新 Win 也显得像毛坯房，需要调教，好在 Win 不像 Mac 动不动就会弹出系统级感叹号，提示操作违规。对待 Win 只需要「父见子未亡，抽出七匹狼」</p><p>但 Win 也不是一无是处，除了更开放的系统，对于有一定要求的用户，系统不会处处掣肘，一些提示像嘘寒问暖，并不会直接阻止。所以常规的大多数用户，Win 会更友好。也基于这个特点，Win 在世界上有更大的用户体量，反过来，系统为了适应用户，在一些方面也拥有更符合大众的逻辑，和更灵活的设计。</p><p>截至目前 Mac 体验旅程中最不顺畅的部分是「桌面」，先让我们跳出虚拟，在实际生活中，一张桌面上会放上各式各样的工具，文件，以供我们很好的完成一件工作，但是当我们不得不暂停当前工作，去完成另一件的时候。一般我们会选择移动到另一块区域，到新的桌面，完成新的工作，为了高效，一摸一样的工具可以同时在两个桌面都准备。</p><p>这个任务在 Win 上完成的非常优秀，可以为桌面命名以明确工作内容。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/05/18/6f481b5c62548a2d3e09434f68ccc358.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/05/18/450979aeab1d14edbe17707798a0cc5a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>且用户可以选择不同桌面之间是否联动，</p><figure class="image ss-img-wrapper image_resized" style="width: 216px;"><img src="https://cdnfile.sspai.com/2025/05/18/1d918a5893ea129f1de0a58ffbb1fc6e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>alt + Tap 功能选项</figcaption></figure><p>但在 Mac 上就有点糟糕了，用户只能在应用之间切换，在同应用下的不同窗口之间轮换又是另外的方式，这个还好说；但是当用户选择平铺整个窗口的时候，macOS 就会直接新建一个桌面，这个也还勉强过得去，为了专注；但是当使用浏览器观看视频的时候这个行为就很奇怪，全模式的浏览器已经平铺了一个桌面，当选择全屏播放视频的时候又兴建一个。虽然你的动画的确很流畅，但是跳来跳去还挺割裂<code>的。</code></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/18/37c320f6f72e8a78264b87402e77806b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Mac 桌面管理</figcaption></figure><p>macOS 给我的感觉是，它希望用户在一个桌面内调度很多应用，通过窗口协同工作，当需要专注的时候再铺满屏幕。</p><p>通过设计引导用户，是 Apple 的能力，我也愿意跟随获得优秀的体验。但是通过规则限制用户或者限制用户选择，是让我非常抗拒的，这也是我一直迟迟没有选购 Mac 的终极原因。</p><p>但正如前文所述，这在这个时间节点迎接 Mac 是合适且完美的，我完全知道我想用它来做什么，抛开「小棉袄」漏风的细节不谈，这段时间的使用整体还是非常舒适的。在初期问询 AI 的结果中，几乎都提到了 .bash 进阶操作，这也是完全未涉足的领域。macOS 作为 Unix 的现代后裔，对于计算机哲学和 Win 有着完全不同的思考方向，也许能对某些工作有明显帮助。</p><p>所以如果你有明确需求，知道想要什么样的体验，和针对性工作，Mac 的确能提供非常优秀的用户体验，毕竟 Mac 足够极客。</p><p>但如果你是冲着全家桶去的，惊喜是有的，比如前面提到的。但要说多么优秀，和换系统的折腾相比简直不值一提。如过你没怎么用过电脑，且一直是 Apple 的忠实簇拥，首选 Mac 完全没有问题。如过你已经熟练使用 Win ，Win 也基本胜任和覆盖你的生活和工作，完全没必要转换。如果你觉得手上的 Win 已经有些力不从心，还对垃圾和广告折腾的苦不堪言，那 Mac 会还你一世清净。</p><h2>彩蛋</h2><h3>Apple Watch</h3><p>关于全家桶的惊喜，除了一开始提到的屏幕镜像，还有 Apple Watch 。最开始买 Apple Watch 是当全功能运动表在用，内置的 eSIM 偶尔也会应付一下手机断电的情况。每天实打实的训练量让 Watch 不那么显得像美丽废物，另一方面，Watch 帮助我做信息筛选，已读不回虽然很不礼貌，但是真的很爽。毕竟哪里有那么多「十万火急」 ，诸葛亮十万只箭都不急。</p><p>常跟后辈讲</p><blockquote><p>急什么，急着给社会创造剩余价值吗？你不创造，有的是人创造。</p></blockquote><p>逛设置的时候发现有通过 Apple Watch 解锁，这功能我在手机上也开了，但说实话没那么优秀，因为 Face ID 已经先行一步，整体感知不强，但是 Mac 上就不一样了，初始设置的时候要输入密码的地方还蛮多的。加之 Win + L 成为一种意识，⌃ + ⌘ + Q 也是固定流程，虽然密码成为了肌肉记忆，但除了流程简化， Watch 别样的触感反馈，还是让人多了一分安心。</p><h3>iPad</h3><p>还有一个是，除了屏幕镜像，iPad 可以连接 Mac mini 的键盘和鼠标，且保持 iPadOS ，这样就不用频繁的切换键盘和鼠标。且也能维持工具之间各司其职，不知道什么原因，GPT 目前无法在 Mac mini 上使用，有可能是因为国行唯一地址或者其他，有待研究。但 iPad 依旧正常不受任何影响，这更加深了我「各司其职」的理念。Mac mini 毫不犹豫的选择 256G SSD。也不需要像大多数人选择丐版之后再加挂「尿袋」，<strong>Yuck！</strong></p><h3>iPhone</h3><p>镜像用起来还行，没那么流畅，主要是第三方适配问题，其他体验不强，目前除了拖拖照片，回回必要消息，不怎么用得上。</p><h3>断电</h3><p>在这篇文章快要结束的时候，突然断电了，因为 macOS 是在太沉浸了，我都忘了随时保存。当时还在想，得，一上午白干。没想到等来点之后，开机一切恢复原状，这可太实用了，如果没猜错的话，这应该是基于 Unix 的特性，快照。</p><hr /><p>总的来说，体验的时间虽然不长，但是感觉还是不错的，除了万事开头难的部分。推荐情况也在文章中见不再赘述。毕竟体验时间不长，也许文章提到的某些问题，在很多老手眼里根本不是问题，但本文也只是从一个 Mac 新手的视角出发，谈谈自己的心路历程，希望对情况和我大差不差的人有所帮助，或者只是提供一点乐趣。</p><p>也欢迎大家评论区分享乐趣和经验。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/99211</id>
            <title>从 Cherry 到百花齐放：机械键盘话语的多元之路</title>
            <link>https://sspai.com/post/99211</link>
            <guid isPermaLink="false">https://sspai.com/post/99211</guid>
            <pubDate></pubDate>
            <updated>Mon, 19 May 2025 14:28:09 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 键盘行业,机械键盘,品牌提及率,轴体讨论  
<br>  
<br>  
总结: 文章分析了键盘行业的品牌、配列和轴体讨论趋势。键盘品牌分为四大类：主流机械键盘品牌、静电容品牌、客制化品牌和其他品牌，其提及率随时间变化，近年品牌集中度降低。国产机械键盘品牌讨论度上升，国际老牌大厂逐渐失势。2025年75%配列成为新宠，线性轴讨论度意外高，静电容轴体关注度增长。机械键盘市场持续扩大，消费者选择增多。 </div>
                        <hr>
                    
                    <p>键盘行业其实挺有趣的。一方面是不断的复古，先是机械轴重出江湖，打出了一片天地；最近几年，磁轴又被重新挖出来焕发生机。另一方面，行业持续有新品牌加入，推出量产型的成品，消费者的选择——至少从品牌数量而言——看起来越来越丰富。</p><p>除了泛科技数码网站、垂直网站、电商平台、社媒平台，一些社区里「求推荐」的帖子也是了解键盘行业近况的有效信息渠道。借着<a href="https://v2ex.com/t/1120838" target="_blank">这个帖子</a>的由头，我顺藤摸瓜统计了 2016 ~ 2025 年社区里「求推荐键盘」一类的帖子。虽然遗憾地未能让每个年份的有效样本量都过百，我还是积累了一些数据，看大家在讨论键盘的时候：</p><ul><li>会提到什么品牌？</li><li>会提到什么配列？</li><li>会提到什么轴体？</li><li>讨论的内容随时间有什么变化？</li></ul><h2>键盘品牌比我想象的更丰富多彩</h2><p>在众多回帖中，我能发现之前从没听过的键盘品牌。不过大家经常提到的基本还是互联网各类场合已经有一定曝光率的牌子。综合考虑提及率以及品牌类型，我把键盘品牌分成了 4 大类。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/15/a13e01d204a74de429673fa54ed9dad8.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>提及率和市场占有率可能有关，但通常难以直接换算</figcaption></figure><p>第一大类是产品线以机械键盘为主、提及率相对靠前的品牌，之所以说「以机械键盘为主」，是因为里面包含像罗技这样既有薄膜也有机械键盘的品牌、阿米洛这样既有搭载机械轴也有搭载静电容轴体键盘的品牌。2025 年这 20 个品牌的提及率加起来约为 56%，它们对于日常关注机械键盘的朋友而言基本上可以说是耳熟能详。</p><p>第二大类是产品全部都是静电容轴体的键盘品牌，包括宁芝 NIZ、HHKB 以及 realforce，这个品类的提及率比我原本想象的要高。第三大类是客制化，虽然提及率不高但值得单列。</p><p>第四大类是前述几类之外的品牌，数量过百，种类繁杂，包括但不限于纯机械键盘品牌如黑爵、早期只做薄膜键盘后来也做机械键盘的双飞燕、PC 硬件及综合外设品牌 ROG 与雷蛇、崭露头角专做磁轴键盘的品牌例如小蜜蜂、什么领域都想伸一只脚的绿联，你甚至可以在里面找到微软出品的键盘，如此种种。它们的提及率总和在 2025 年大约为 1/4，每个品牌单独看少得可怜，但加起来也是不可忽视的 「others」。</p><h2>近年大家讨论的品牌又再多元</h2><p>这 4 大类键盘品牌的提及率在过去十年间的变化还是挺有意思的。Top 20 键盘品牌（第一大类）以及「其他」此消彼长的提及率，或许能让我们管中窥豹，推断键盘行业的市场趋势。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/15/e499902dc348f42ea4c97573083f531b.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>还是能看出来一些趋势</figcaption></figure><p>2025 与 2024 年的品牌讨论情况接近，Top 20 键盘品牌的讨论度在 50 ~ 60% 之间，「其他」在 20 ~ 30% 之间。作为消费电子行业的一员，互联网舆论场里键盘市场的品牌集中度其实算不上很高，毕竟在有些行业里，两个玩家可能就占了 99% 的份额。</p><p>再往前几年的情况却与此大相迳庭。2017 ~ 2022 年间，Top 20 键盘品牌的讨论度长期高于 70%，「其他」不足 15%，可以说那几年大家眼里基本上只有那些熟悉的、专门做机械键盘的品牌，其余数十上百个品牌甚少能被想起来、出现在回帖里。情况从 2023 年开始有变，逐渐向品牌集中度更低的方向发展。</p><p>其实九年前的 2016 年，大家在网上对键盘的讨论与最近两年非常类似，品牌集中度并不高。要说 2017 年键盘行业发生了什么特别的事情，我能想起来的好像只有<a href="http://www.kailh.com/News/ns/13.html" target="_blank">凯华发布了有别于 Cherry MX 技术的 BOX 轴</a>，欢迎各位长期关注键盘领域的朋友在评论区补充。</p><h2>老牌国际大厂逐渐消失在视野里</h2><p>如果说 BOX 轴的发布可能难以直接和键盘品牌讨论集中度的变化扯上关系，它是国际老牌机械键盘在国内失语的诸多因素之一，我觉得可以认为是一个合理的推断。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/15/01149ba5eaa8688363124a1e35a08c29.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>国产品牌机械键盘被越来越多地讨论</figcaption></figure><p>我把第一大类里的 20 个品牌进一步分成了 3 类，分别是 FILCO、Cherry、Leopold 这样的国际机械键盘大厂，罗技、海盗船、酷冷至尊这样的综合外设品牌，剩下的 14 个都是国产机械键盘品牌。</p><p>Cherry MX 轴体专利保护期在 2014 年结束，TTC、凯华、佳达隆等轴体厂家自然不会放过这个机会，但轴体选择的多元化并未立刻传递到机械键盘市场。在 2016 年，「求推荐」的回帖里还是有超过四成会提到三大国际机械键盘大厂，国产品牌机械键盘的提及率仅略高于 10%，差距还是挺大的。</p><p>自 2017 年起，双方的境况发生了变化。虽然期间有所波动，但 2017 ~ 2023 年间，总体而言越来越多人讨论国产品牌机械键盘，三大国际老牌露脸的机会越来越少。到了 2023 年，超过一半的回帖会提到第一大类中的 14 个国产机械键盘品牌，而三大老牌国际大厂只有 10%。</p><p>2024 ~ 2025 年，三大老牌提及率变化不大，14 个国产机械键盘品牌提及率有明显下降，主要原因是静电容被讨论得更多了，「其他」里数十上百的品牌也有更多人讨论，品牌讨论集中度随之下降。相对而言，综合外设品牌键盘的讨论度显得不动如山，常年在 10% 以下徘徊。</p><h2>75% 配列成 2025 新宠</h2><p>在讨论键盘的时候，除了品牌，也会提到配列和轴体，不过后两者提的就少很多了。在这次分析中，品牌的有效样本量是 1784，配列和轴体则分别只有 839 和 765。考虑到样本量相对少，配列和轴体提及率时间尺度的变化，就只对比 2025 年和其余年份了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/15/097ca5ed0728fce0129be296e5863cc1.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>90% 配列什么时候能崛起？</figcaption></figure><p>变化最为明显的，当属 84/82 键，它在 2025 年一跃成为提及率最高的配列，达到 29%，与过往年份的 22% 相比上升明显。提到相对多的键盘包括 NIZ 84 键、rainy 75、Nuphy 75、迈从 X75、Keychron K2/K3、Leobog Hi75、狼蛛 F75、珂芝 K75。</p><p>相对地，前几年讨论比较多的 87 键和 62 键在 2025 年提及率都略有减少。而下降幅度最为明显的 68/67 键，2025 年直接和全尺寸坐一桌了。</p><p>我自己最喜欢的 99/98/96 键配列，讨论度变化不大，还是比不上更小的配列。提到这个配列，很难避开 VGN，毕竟这个品牌就是靠这个配列打响名头的。在它风头正盛的那段时间里，我对轴体的偏好已经转到了静音轴，彼时我还是倾向买成品不改动直接用，我实在是无法想象从自己手中迸发出麻将音、HiFi 音的画面，所以就没实际入手过 VGN 的键盘。</p><h2>轴体讨论度差异让人意外</h2><p>虽然当下 Cherry 无论是键盘还是轴体的讨论度都大不如前，但它对于轴体类型的划分，至今依旧影响着整个机械键盘市场。国产轴五花八门的命名之下，依旧离不开类茶轴、类青轴、线性轴的本质。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/15/9af0edb9d9eb5aedd725ed950f97fe1c.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>真的有那么多人用线性轴吗？</figcaption></figure><p>坦白讲，看到上面这样结果的那一刻，我其实是很惊讶的，我从来没有想过线性轴的讨论度会如此之高，超过四成，远高于另外两类机械轴。我粗略地搜索到一些英文网站的数据，线性轴的讨论度不说是最低，至少也是和类茶轴、类青轴差不多，和上图的情况相距甚远。</p><p>另一方面，最近几年无论是由于玩家还是品牌方推动，麻将音、HiFi 音轴体大行其道，这类轴体基本上可以归为类青轴<sup class="ss-footnote" href="" title="此处有误，大部分麻将音、HiFi 音轴体是线性轴">1</sup>，它们的宣传物料相信关注键盘领域的朋友应该也见过不少。但是在本次分析中，类青轴被提及得并不多，甚至变得更少。我只能推测可能是不同社区对于轴体的偏好有差异，也可能是实际上消费者并没有想象中那么热衷于这样的打字音。</p><p>与 3 类机械轴相比，静电容的讨论度在 2025 年较之前有明显上升。有朋友可能会疑惑，在品牌提及率里最高不超过 20% 的静电容，到轴体这里怎么就接近四成了。除了样本量不同之外，关键在于会有「建议一把静电容退烧」类似的回帖存在。这类帖子并不会被归属于品牌分析当中，但会出现在轴体分析里。有理由认为，拥有静电容键盘的朋友，相比起品牌，更愿意凸显自己对这种特别轴体的选择。</p><p>&nbsp;</p><p>有<a href="https://mp.weixin.qq.com/s/mxliX6_FuyGn2ezmhuHSuw">市场调研数据</a>显示，虽然薄膜键盘依旧是键盘市场销量的主流，但其市占率呈下降趋势，机械键盘销量市占率自 2021 年起持续上升，2023 年已达到 42%。作为日常使用机械键盘的一员，我乐见于这个市场越来越大，选择越来越多，毕竟对消费者而言，激烈的良性竞争，总是比一潭死水要好。我还盼着有更多品牌愿意出成品 98 静音段落轴键盘呢。</p><p>&nbsp;</p><blockquote><p>附录</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/15/04c17113d67bef821a0e3e86b52a22f5.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>2017 ~ 2020 年品牌样本量每年不过百，在分析时两两合并</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/15/1c878ee756e53c006ed2eecd4e5fe18a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>应该还是有人认不全的吧？</figcaption></figure></blockquote><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/99347</id>
            <title>寻找真正的小手机</title>
            <link>https://sspai.com/post/99347</link>
            <guid isPermaLink="false">https://sspai.com/post/99347</guid>
            <pubDate></pubDate>
            <updated>Sun, 18 May 2025 16:15:25 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 小屏手机,消费需求,市场趋势,用户体验  
<br>  
<br>  
总结: 作者因寻找小巧安卓机的经历，反思小屏手机被市场边缘化的现象。文章指出消费需求常被厂商引导，主流市场过度强调大屏优势而忽视小屏用户的实际需求。通过对比18年前手机尺寸，揭示技术进步未必带来体验进步。作者认为小屏与大屏本应共存，但小屏因营销不足、渠道受限而难以被消费者发现。最后提出差异化设计的重要性，强调真正的体贴应关注被忽视的需求。 </div>
                        <hr>
                    
                    <p>——为什么这么难？</p><hr /><p>写这篇文章的起因，是我的备用安卓机三星 Z Flip 4 突然罢工了。为了找个小点的手机顶上，我就在少数派会员社区发了个贴，询问有没有轻便小巧的安卓机推荐。</p><figure class="image ss-img-wrapper image_resized" style="width: 546px;"><img src="https://cdnfile.sspai.com/2025/05/18/6408cf99de84452595ee1e171e160373.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>我本以为这是一个简单的产品推荐问题，没想到评论区给我上了一堂「小的相对性哲学课」。有不少网友推荐的机型，尺寸都超过了 6 英寸。这让我开始怀疑自己是不是手太小、标准太奇怪，也许我该放弃「小巧轻便」这个词，改说「微型迷你」？</p><p>在此过程中，我翻到了北鸮的文章<a href="https://sspai.com/prime/story/small-phones-the-demise-of">《小屏手机，一只脚踏进坟地》</a>，他对小手机的定义——可完全单手掌控，我很认同。说明我并不是异类，我的需求也很正常。该文对小手机选择空间持悲观态度，读来不免感到心酸。</p><p>最后，我听从 @Kasiin 的建议，入手了 Unihertz Jelly Star。这台屏幕仅 3 英寸的安卓机，单手可握，拇指能点到屏幕每个角落。朋友拿在手里，说它小得像火柴盒。</p><p>有趣的是，Jelly Star 和我十八年前用的 Motorola ROKR E2 在体积和重量上几乎一样（据说 ROKR E2 也算是智能机呢）。</p><figure class="image ss-img-wrapper image_resized" style="width: 522px;"><img src="https://cdnfile.sspai.com/2025/05/18/131c2e40c355e3002fcdd876d330de4d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>截图来自中关村在线</figcaption></figure><p>如果不是在少数派会员社区发帖求助，我可能根本发现不了这个品牌。即便刷到了，看到它的配置和品牌名，也不会轻易相信它能满足日常需求。但 Jelly Star 确实表现还行：日常沟通、扫码支付、刷社交媒体、听播客、打保卫萝卜 4，这些对我来说已经足够。办公有电脑，阅读有 Kindle，观影有电视和投影，这些场景已经不太需要手机的参与。</p><p>这也让我开始反思一个问题：我并没有提出什么极端的需求，甚至连长续航和拍照都不强求，但为什么我想找一部「小一点的手机」却要如此费劲？</p><h3>被制造的趋势：不是我挑剔，是我被忽略</h3><p>我翻到安东尼·加卢佐的《制造消费者》一书，书中提到很多我们以为是「自发形成」的消费需求，其实是厂商、媒体、广告联合「教育」的结果。智能手机领域看来正是如此。</p><p>多年来，「大屏才是主流」这个观念不断被强化。哪怕只是刷微信、看地图、点外卖，也总有人建议你买个 6 英寸起跳的大屏手机。</p><p>我不反感大屏手机。我甚至觉得，如果真的有一种能像纸团一样握在手里，又能打开铺满桌面的折叠屏手机，我也会喜欢。但问题是，现实中那些所谓的「折叠手机」折叠后依旧不小。就像我的三星 Z Flip 4，折起来可以单手握持，但它的重量却会让我裤子往下掉，而且外屏的功能也很有限。</p><p>与此同时，小手机的存在越来越边缘化。厂商给它们安排的命运似乎总是：配置缩水、功能阉割、系统滞后，最后再贴上一个「情怀」或「美丽废物」的标签。</p><p>更荒谬的是，有些厂商用「轻薄」来代替「小巧」。但我从来不想要一块超薄瓷砖，我只想要一台真正能握在手里、揣在兜里的手机。</p><p>体积小的需求并不复杂，不是我在为难厂商，而是当前主流手机尺寸真的给我带来了很多不便。我愿意牺牲一点性能、一点续航、一点拍照，只求你先做出来一台体面的小手机：双卡双待，UI 不辣眼睛，能坚持一天续航，然后稍微宣传一下，让我能找到它。</p><h3>不吃香菜的人不必评价香菜泡面</h3><p>在我寻找小手机的过程中，发现有很多不需要小手机的数码博主或网友，热衷于评价「小手机有没有用」，甚至轻率地断定「小屏是伪需求」。看起来，小手机不完全是被市场认为「不好」，而是被批为「多余」。</p><p>正如我是个不吃香菜的人，所以我无法评价香菜泡面好不好吃，更没有资格去判定香菜泡面这种东西该不该存在于市场上。</p><figure class="image ss-img-wrapper image_resized" style="width: 385px;"><img src="https://cdnfile.sspai.com/2025/05/19/article/be0be6ebe4cb422744890ef17e80ce43.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>图片来自亚马逊</figcaption></figure><p>大屏手机和小屏手机的用户，本就有不同的使用场景、身体条件和生活习惯。很多时候，「适合我的」和「适合你的」并不冲突。</p><p>我们总喜欢把不同的消费习惯标签化、阵营化，比如：大屏 vs 小屏、生产力 vs 盖泡面、××党 vs ××党……但真正的对立其实不是产品，而是消费者自己。我们在标签中互相认同，也在标签中互相排斥，结果反而压缩了彼此的选择空间。</p><p>我写这篇文章，并不是想劝厂商都去生产小手机，放弃大手机；我也不认为小手机更高级、更极客。只是觉得，小手机被误解、被忽视得太厉害了。</p><h3>为什么小手机难被找到？</h3><p>Jelly Star 不是我在自己的经验和视野中自然找到的产品，而是靠少数派会员社区的网友推荐才找到的。问题正在于此：为什么我要靠发帖求助，才能得知市面上有一台真正的小手机？</p><p>从供给端看，小手机的曝光率低、营销预算少、销售渠道窄，以我所在的小城市为例，多数线下手机店只陈列主流的那几个品牌，连手机店老板都表示没见过 Jelly Star 这类产品；从需求端看，小手机用户分布零散、使用习惯非主流，缺乏被精准投放广告的可能，也很难在主流评测和社群中被广泛提及。</p><p>我错过它，不是因为需求太冷门，而是因为整个系统就没想让我看到它。</p><p>但我觉得小手机并不是没有机会。安东尼·加卢佐在《制造消费者》中提出另一个观点：企业其实不希望消费者停留在「刚刚好」的满意状态。那样的话，换机周期变长、消费欲望减弱，对厂商来说不是好事。因此，商品要不断更新，刺激我们放弃旧欢。消费者经过长年的学习，也已经掌握了自己主动批评旧产品、拥抱新产品的能力。</p><p>换种角度来看这个事情，当行业将创新押宝在大屏旗舰上，尺寸反倒可以成为一种差异化维度。比起再多一颗摄像头、再提一帧刷新率，「一手可握」本身或许就是值得重新发明的体验。单一、僵化的评判标准只会让生意更难做。</p><h3>真正的体贴的设计是看见被忽视的需求</h3><p>如今Y2K 回潮、卡片机再度流行，我认为这些现象不单是追随复古潮流，它们反映了人们对主流设计路径的不满，也提出了新的问题：技术进步是否等于体验进步？更高的参数是否真的提升了我们使用的价值？</p><figure class="image ss-img-wrapper image_resized" style="width: 523px;"><img src="https://cdnfile.sspai.com/2025/05/18/9d0873061451f4f9ed595c813afef832.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>图片由 ChatGPT 生成</figcaption></figure><p>Jelly Star 不是一部技术先进、性能强大、功能全面的好手机。但它实现了「真正小手机」这件事，解决了一个被忽视的刚需。480P 不会比 4K 更好，但在这块 3 英寸的屏幕上，它刚刚好。续航、省流、不发热，带来的是稳定和安心，而不是刺激和炫耀。看剧的体验、信息的传达，并不一定会因为分辨率翻倍而获得质的飞跃。</p><p>以上是我关于如何看待「合适」、理解「够用」、抵抗「被引导的需求」的一点思考。我相信，小手机只是曾被误解、被冷落。或许，在某个更成熟、更多元的市场中，它终将以体贴用户的姿态回归。</p><hr /><p>声明：本文部分段落由 ChatGPT 生成、整理或修改。&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/99311</id>
            <title>记账3000+天，我的记账体系是怎么迭代的</title>
            <link>https://sspai.com/post/99311</link>
            <guid isPermaLink="false">https://sspai.com/post/99311</guid>
            <pubDate></pubDate>
            <updated>Sun, 18 May 2025 02:05:30 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 记账习惯, 分类调整, 软件优化, 双人记账  
<br>  
<br>  
总结: 文章分享了作者从养成记账习惯到逐步优化记账方法的五个阶段。第一阶段强调培养记账习惯的重要性，并指出信用卡还款是转账而非支出。第二阶段讨论如何调整记账软件分类以减少心智负担，例如细分衣物和娱乐支出。第三阶段提出合并账户、分摊房租等优化记账流程的方法。第四阶段涉及双人记账的初步尝试。第五阶段表达了作者对一键导入功能的需求，并萌生开发记账软件的想法。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;"><strong>第一阶段：开始记账 &amp; 养成习惯</strong></p><p style="margin-left: 0px;">在开始记账、无疾而终重复了n次之后，我终于在某一次，养成了记账的习惯。</p><p style="margin-left: 0px;">在这个阶段反反复复的开始和中断之间，我猛然意识到，前期最重要的是实实在在的记账，把记账这个习惯培养起来，一笔一记也行一天一记也行，最重要的是让它成为自己生活的一部分，形成习惯。</p><p style="margin-left: 0px;">再深入分析了一下，自己开始N次、半途而废N-1次，根源是没有足够的动力来坚持这件事情。回想了一下，最终令我将记账这件事情坚持下来的因素其实是——当时在美国交换——花美元的肉痛感实在是太真实了，必须记录一下。</p><figure class="image ss-img-wrapper image_resized" style="width: 434px;"><img src="https://cdnfile.sspai.com/2025/05/17/e44731fc1aa94997b8496f502453d31f.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我们穷学生是这样子的……当然交通费现在已经不这样记了= =+</figcaption></figure><p style="margin-left: 0px;">再后来，本强迫症在记账、对账中感受到了对上账的时候严丝合缝的快乐，于是就这么坚持下来了~</p><p style="margin-left: 0px;">在这个阶段小踩然后迅速走出来的坑点是：刷信用卡的支出是<strong>支出</strong>，还信用卡不是支出而是<strong>转账</strong>。在统计报表的时候按照信用卡支出日期来统计，还款转账不统计，但是可以显示在显示在现金账户的流水中。</p><p style="margin-left: 0px;">在想明白这一点之后突然和醒悟了记账的意义：<strong>记录流水是形式，重要的是最终的汇总，任何不利于汇总的记账行为都应该被抛弃。</strong></p><p style="margin-left: 0px;">注意：帮别人代购也应该算作<strong>转账</strong>（比如刷信用卡购买，别人还了现金）或者<strong>借贷</strong>（时间周期较长的话），出去吃饭付款然后别人AA回来的话应当算作值为负数、账户为入账账户的支出项（而不是收入项），避免统计偏差。</p><figure class="image ss-img-wrapper image_resized" style="width: 372px;"><img src="https://cdnfile.sspai.com/2025/05/17/f83b5a4a97002645cb198f32f21c8467.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">小结一下：</p><ul><li style="text-align: justify;">开始记账的时候最重要的时候是养成习惯，需要一个坚持下去的理由，可以是来自外部的理由，更好的是有由内而外的理由～</li><li style="text-align: justify;">记账后的定期对账、定期review也是重要的一部分</li><li style="text-align: justify;">信用卡还款是转账，吃饭AA的回款是特殊的支出</li></ul><p style="margin-left: 0px;"><strong>第二阶段：调教软件，更加舒服地记账</strong></p><p style="margin-left: 0px;">在开始记账的时候，选用了记账软件的通用模版。因为还是学生，因而删除了一些不用的条目（工资收入，私家车支出等等），感觉剩下的都可以用。</p><p style="margin-left: 0px;">但是有时候会遇到一些问题，有时候有些支出感觉分类模棱两可，比如出去旅游时的饮食、住宿，是算作旅行费用呢还是普通的住宿费用呢？（这个问题直到2023年还在困扰</p><figure class="image ss-img-wrapper image_resized" style="width: 558px;"><img src="https://cdnfile.sspai.com/2025/05/17/afc0ceaac276fb347b56bf1a20398b13.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>记账分类难题<s>（如何让支出好看一点）</s></figcaption></figure><p style="margin-left: 0px;">在超市买菜算是日常开支呢还是饮食开支呢？还有去洗衣房的费用是算作日常开支呢还是应该新建一个类别呢？</p><p style="margin-left: 0px;">还有工作后购买游戏和给手游氪金，在通用的记账模板内都算是休闲娱乐，但是对于我来说这是两种非常不同的开支，因此每次记账的时候还要额外写备注来进行区分。还有，我今年的期望是降低购买衣物的支出，但是每年的内衣袜子都是必须购买的，需要细分进行预算，但是软件里面只有衣物这一个类别，看不出区别。</p><p style="margin-left: 0px;">这些疑惑会导致记账时的心智负担，降低记账的效率，也会影响月末或者年末查看报表的时候获取的信息。解决方案就是：<strong>感觉到任何增加记账心智负担的地方，就果断改！改到舒服为止。</strong></p><p style="margin-left: 0px;">&nbsp;</p><p style="margin-left: 0px;">现在我的支出类别是：</p><p style="margin-left: 0px;">可以看出来衣服的分类分出了破产三姐妹XD，因为在做预算的时候三坑服饰和地球人服饰是两笔不同的预算；在休闲娱乐方面手游氪金和购买游戏也是两个不同的类别，但是其它休闲娱乐比如看电影和唱k都算做休闲娱乐一大类，没有必要分得那么清楚；目前把外食从日常早午晚餐中分了出来用来统计打牙祭的频率和支出，咖啡和奶茶算作一类，但是未来也在考虑是否需要拆开，毕竟咖啡是生活必需品（喂）、奶茶是想要戒除的含糖饮料。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/17/ed209184b75ce403c62d08f1dbae5289.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">至于上面提到的旅游类开销，旅游支出我认为上面的两种方案都可以：通用+tag为旅游，也可以使用旅游类，不过目前市面上似乎没有比较好用的含tag的记账软件（也有可能是我还没发现），所以也可以考虑分旅游类。</p><p style="margin-left: 0px;">&nbsp;</p><p style="margin-left: 0px;">小结：</p><p style="margin-left: 0px; text-align: justify;">一定要调教软件，减轻记账及做预算时的心智负担</p><p style="margin-left: 0px;"><br />&nbsp;</p><p style="margin-left: 0px;"><strong>第三阶段：进一步调整，减轻记账需要的步骤及时间，让它更自然地成为生活的一部分</strong></p><p style="margin-left: 0px;">坑：账户太多，记不过来，有些支出会分两张信用卡刷</p><p style="margin-left: 0px;">迭代：<strong>合并</strong>信用卡总账户，只区分人民币及外币</p><p style="margin-left: 0px;">&nbsp;</p><p style="margin-left: 0px;">坑：一次性付房租会导致支出曲线突变，没有参考性</p><p style="margin-left: 0px;">迭代：利用软件的<strong>周期账</strong>功能将房租分摊到每个月，使曲线平滑。（月内支出的突起就只能利用筛选功能去掉了）</p><p style="margin-left: 0px;">&nbsp;</p><p style="margin-left: 0px;">坑：基金股票难以追踪</p><p style="margin-left: 0px;">迭代：折中，只记买入金额，不记份额。与此同时，只在<strong>赎回</strong>的时候根据盈亏情况记录收入/支出，该账户不在记账软件内追踪。</p><p style="margin-left: 0px;">期望迭代：记入份额，软件能够每日同步净值，能够看到总账户的净值变化状况。</p><p style="margin-left: 0px;">&nbsp;</p><p style="margin-left: 0px;">小结：</p><p style="margin-left: 0px; text-align: justify;">每个人记账的需求和习惯都不同，每个感到不适的地方都可以改，改到舒服为止。当前软件不能满足的需求，只能暂时妥协，或者记下来看看有没有别的软件能够满足了。</p><p style="margin-left: 0px;">&nbsp;</p><p style="margin-left: 0px;"><strong>第四阶段：双人记账、家庭记账</strong></p><p style="margin-left: 0px;">npy刚回国不久，目前还在摸索中，增加了一个账户用来记两人间流水，但是npy的资金没有计入总资产。（2025年5月更新：现在会每个月月底帮npy汇总记账，对支出心中有数）</p><p style="margin-left: 0px;">&nbsp;</p><p style="margin-left: 0px;"><strong>第五阶段：sorry我还是想要一键导入……</strong></p><p style="margin-left: 0px;">今天突然想起来两年前（23年7月）写了这篇内容但是一直没有发布（标题里的三千多天居然不用改，哈哈哈）。为什么想起来这篇文章呢，是因为最近偷懒，自己的账也有一个月没记了。导出了zfb和wx的账单改成手上记账软件可导入的格式，但是试了、debug了几次始终失败（错误信息：undefined），看着记账软件提供的xls格式的模板，终于决定放弃和它搏斗了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/17/1076242af285c9311a76c49fb4bc8fe9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>程序员不能忍的报错！</figcaption></figure><p style="margin-left: 0px;">&nbsp;</p><p style="margin-left: 0px;">因为实在不想一条一条手动输入，几年前想过的【想要做一个自己的记账软件】的念头又冒出来了（于是也想起了当时写的这篇文XD，还发现了一些自己提的需求哈哈)。现在文件夹已经建好了，开工吧~&nbsp;<s>（是的我知道程序员独立开发三件套是记账todo和日记啊哈哈哈）</s></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/99278</id>
            <title>Claude之外：打造你的AI对话知识库</title>
            <link>https://sspai.com/post/99278</link>
            <guid isPermaLink="false">https://sspai.com/post/99278</guid>
            <pubDate></pubDate>
            <updated>Sun, 18 May 2025 02:02:06 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: AI大模型,Claude,对话管理,知识管理  

总结: 本文介绍了为解决Claude等AI大模型对话记录管理问题而开发的工具Lyr's Exporter。该工具能完整捕获Claude的思考过程、对话内容和附件，支持智能标签管理和多格式导出，尤其适合Obsidian等知识管理系统。文章分析了现有解决方案的局限性，强调了Claude思考过程的独特价值，并通过多个使用场景展示了该工具如何提升编程学习、内容创作和知识复习的效率。工具采用本地处理保障隐私安全，未来计划增加更多个性化功能。 </div>
                        <hr>
                    
                    <p><i>小提示：本文提及的小工具为笔者使用AI完成构建，因本人对代码一窍不通故暂不开源，感兴趣者可提出issue联系获取相关的原始代码文件</i></p><p>AI大模型已经成为许多人工作流程中不可或缺的一部分。无论是写代码、虚拟世界观创作，还是解决日常、学习、工作上问题，Claude等大模型的交互都大大提升了我们的效率。然而，随着使用频率的增加，一个新的问题逐渐浮现：<strong>如何管理和利用这些珍贵的AI交互资产？</strong></p><p>在过去的几个月里，我发现自己越来越频繁地陷入这样的情境：</p><p>「之前和Claude讨论的五一节出游计划到哪里去了？」<br />「前几天和Claude吐槽的那个社交媒体帖子在哪个对话窗口？」<br />「我之前和Claude说好有哪些习惯要培养来着，他还给我列了一个长长的计划在哪里？」</p><p>不断地在历史记录中搜寻，却往往徒劳无功。与Gemini、ChatGPT不一样，Claude，以及Grok是支持随时从中间的一段对话中创建新的分支，而每次要寻找特定分支的部分，你需要回到前面的特定消息一条条前后翻看。即使已经有相关的拓展、脚本支持全分支的导出，它们往往也很难包含全部的思考过程、Artifacts等对话数据中的宝贵精华。</p><p>于是，我开发了Lyr's Exporter这个工具，将它作为连接Claude API与个人知识管理系统的桥梁。这个工具的出现极大的提升了我的Claude使用体验，也成为了链接官网和镜像站点Claude记录的一大桥梁</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/17/ebda0fb24331976941384153c4a31ffa.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>筛选几个对话窗口中有意义的部分合并导出的记录</figcaption></figure><h2>为什么需要一个专门的Claude数据导出工具？</h2><p>在深入介绍Lyr's Exporter之前，我想先谈谈为什么现有的解决方案不够好。</p><h3>现有解决方案的局限</h3><ol><li><strong>手动复制粘贴</strong> - 最原始的方法，既费时又容易遗漏关键信息(Claude移动端复制思考过程和回答正文之间还没有分割线作为区分)</li><li><strong>长截图保存</strong> - 文本搜索不便，且难以融合思考过程、Artifacts等额外附件</li><li><strong>官方邮箱导出</strong> - 仅支持基础查看，没有标签、分类和检索功能</li><li><strong>通用浏览器脚本插件</strong> - 缺乏对Claude特有数据结构（如思考过程、Artifacts）的全面支持</li></ol><p>更关键的是，这些方法都没有解决一个根本问题：<strong>如何将AI交互转化为个人知识的一部分</strong>。无论是通过网页界面还是API调用，这些Claude交互不仅仅是问答的记录，更是在不断的对话中逐渐得出更有意义思考的过程</p><figure class="image ss-img-wrapper image_resized" style="width: 213px;"><img src="https://cdnfile.sspai.com/2025/05/17/827aa8d98dd76f417c75ed80c4c41d33.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>树形模式导出包括全部的分支与思考过程</figcaption></figure><h3>Claude的特殊之处：思考过程的价值</h3><p>Claude与ChatGPT的一个显著区别是它公开了"完整的思考过程"（thinking），与Gemini相比它可以全部以中文呈现。这些内部推理过程揭示了AI如何一步步分析问题，考虑各种可能性，并最终得出结论。这些思考过程本身就是极具教育价值的内容，特别是对于以下人群：</p><ul><li>学习者和教育工作者，可以观察Claude如何分解问题</li><li>内容创作者，了解Claude是怎样一步步发展出最终回答里的版本</li><li>人机恋玩家，对那些好奇"思考是如何发生的"的人来说，Claude的思考过程提供了一个独特镜像，让人们反思自己的思维模式。这包括人机交互爱好者，他们可以通过观察AI的"内心独白"来建立更深层次的联系和理解。</li><li>研究人员和专业从业者，无论是论文写作还是主题研究，Claude的思考过程为多领域研究提供了丰富素材。专业从业者也能从中获取解释复杂概念的新思路，发现自己思维中的盲点或偏见。</li></ul><p>遗憾的是，这些宝贵的思考过程在标准界面中较难完整保存与随时回顾。</p><h2>Lyr's Exporter：不只是一个导出工具</h2><p>基于以上痛点，Lyr's Exporter诞生了。它不仅仅是一个完整的从导出到整理的Claude对话管理工具，它还一个未来还存在着更多可能的从AI对话到个人知识库的窗口</p><h3>核心功能一览</h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/17/38b0ed95fd94bee1164c64afc2c6e3ee.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h4>1. 全面的数据捕获</h4><ul><li><strong>完整交互导出</strong>：包括问题、回答以及完整上下文</li><li><strong>思考过程保存</strong>：捕获Claude的内部推理过程</li><li><strong>原始JSON提取</strong>：为研究和二次开发提供基础数据</li><li><strong>附件与代码块</strong>：保留所有格式和结构化内容</li></ul><h4>2. 智能标签管理系统</h4><p>标签是知识管理的基础，Lyr's Exporter提供了灵活的标签系统：</p><ul><li><strong>自定义标签</strong>：根据项目、主题或优先级创建标签</li><li><strong>批量标记</strong>：一次性为多个交互应用标签</li><li><strong>标签筛选</strong>：快速定位特定类型的交互</li><li><strong>自动标签建议</strong>：基于内容的智能标签推荐</li></ul><h4>3. 知识库集成</h4><ul><li><strong>Obsidian完整支持</strong>：自动创建符合Obsidian格式的markdown文件</li><li><strong>原始交互引用链接</strong>：每个API调用都包含链接回原始交互的引用</li><li><strong>双向链接生成</strong>：智能识别相关概念并创建链接</li><li><strong>YAML前置元数据</strong>：包含时间戳、标签和上下文信息</li><li><strong>多格式支持</strong>：除Obsidian外，还支持通用Markdown、纯文本和HTML</li></ul><h4>4. 批量处理功能</h4><ul><li><strong>多交互选择</strong>：同时处理多个相关API交互</li><li><strong>批量导出</strong>：一键导出所有选中内容</li><li><strong>格式统一转换</strong>：批量应用相同的导出设置</li></ul><h4>5. 隐私与安全</h4><ul><li><strong>完全本地处理</strong>：所有数据处理在本地完成，不经过任何服务器</li><li><strong>无需API密钥</strong>：不需要提供任何Claude API密钥</li><li><strong>选择性导出</strong>：可以排除敏感信息或特定部分内容</li></ul><h3>使用场景展示</h3><p>理解一个工具的价值，最好的方式是看它如何解决实际问题。以下是Lyr's Exporter在几个典型场景中的应用：</p><h4>场景一：编程学习与项目开发</h4><p>作为一名开发者，我经常使用Claude帮助解决编程问题。在一个近期的React开发项目中，我使用Secure Filesystem Tools的MCP服务与Claude进行了大约6个对话窗口的交互，涉及架构设计、功能实现和问题调试。</p><p><strong>传统方式下的问题</strong>：随着项目推进，很难记住那次对话实现了哪些需求，导致经常重复提问或重新实现已经讨论过的功能。</p><p><strong>使用Lyr's Exporter后</strong>：</p><ol><li>为所有与项目相关的交互应用"WebProject"标签</li><li>根据具体对话内容添加"Core"、"Export"、"UI"等子标签</li><li>导出为Obsidian笔记，原始Claude对话窗口可以删除来减少历史对话复杂度</li><li>在开发过程中，可以直接在Obsidian中搜索关键词或者标签，需要时还能通过引用链接查看完整上下文</li></ol><p>效果：项目完成时间减少了约20%，代码质量显著提高，因为可以轻松参考之前的最佳实践。</p><h4>场景二：内容创作与研究</h4><p>在准备一个智能体开发的实际项目中，我与Claude进行了多轮、多主线的深度讨论，期间还穿插引用了从Gemini和Deepseek获取的专业、实时信息。创意迸发的过程充满灵感，但也带来了管理难题。</p><p><strong>传统方式下的问题</strong>：创意和见解散布在多次对话窗口的多个对话分支中，整合到一起需要反复切换，并且容易遗漏重要内容。</p><p><strong>使用Lyr's Exporter后</strong>：</p><ol><li>一次性打开所有相关对话文件，告别窗口切换困扰</li><li>切换到元数据分区，为此次梳理添加主线标签和属性标识符，建立内容间的逻辑关联</li><li>使用ctrl快捷键筛选出当前导出需要的相关内容，通过「标记为已完成」按钮，为此次导出内容做上清晰记号，建立完整的内容处理追踪</li><li>在导出/标记分区，使用`导出并标记移除`按钮优雅完成此次导出（即将推出的自定义命名选项让组织更个性化）</li><li>已导出部分自动从消息列表中移除，便于继续筛选导出其他相关内容</li></ol><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/17/cd990d056bb524ed71850aa9a84ca803.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>效果：写作过程更加流畅，文章结构更加合理，观点也更加深入和连贯。</p><h4>场景三：知识学习与复习</h4><p>在学习一门新技术或复杂概念时，Claude是一个出色的辅助教师，能够提供深入浅出的解释和丰富的示例。</p><p><strong>传统方式下的问题</strong>：学习是一个渐进过程，随着理解的深入，重要概念和关键公式散布在多次对话中，需要不断滚动查找，早期交互中的一些基础解释变得更加重要，但很难找回。</p><p><strong>使用Lyr's Exporter后</strong>：</p><ol><li>一次读取多个学习相关的对话文件，再按学习主题创建相关标签</li><li>使用全局搜索，输入公式名称、知识点关键词或例题序号，立即精准定位相关内容，告别无尽滚动：只需输入「傅里叶变换」或「例题」，相关解释和思考过程立刻呈现眼前</li><li>使用"已完成"标记追踪学习进度，用"重点"标记突出难点和关键概念，将不同类别讲解导出为独立笔记</li><li>定期回顾思考过程，加深对概念的理解</li></ol><p>效果：不只是收集知识点，复习变得精准且高效，告别漫无目的的回顾。思维方式逐渐深化，从记忆内容转向理解AI的思考过程，构建出一套个人化的学习生态系统。</p><h2>技术实现与开源承诺</h2><p>Lyr's Exporter是一个半开源项目，使用React和TypeScript开发。整个项目遵循以下设计原则：</p><ol><li><strong>简单易用</strong>：无需复杂配置，开箱即用</li><li><strong>轻量级</strong>：最小化依赖，保持性能</li><li><strong>可扩展</strong>：模块化设计，便于添加新功能</li><li><strong>隐私优先</strong>：所有数据处理在本地完成</li></ol><p>作为一个并没有完全开放源代码项目，Lyr's Exporter欢迎社区提出需求。无论是bug修复、功能增强，还是新的导出格式支持，所有贡献都将被认真考虑。</p><p>技术栈概览：</p><ul><li>前端：React + TypeScript</li><li>数据处理：自定义JSON解析器</li><li>存储：IndexedDB + 本地文件系统</li><li>兼容性：支持所有主流浏览器</li></ul><h2>从个人需求到多端工具</h2><p>Lyr's Exporter源于一个简单的周末项目。起初，我只是想解决自己在使用Claude过程中遇到的痛点。但随着功能的逐步完善，我意识到这个工具可能对更多Claude用户有所帮助。</p><p>开发过程中，我始终遵循"解决实际问题"的原则，而非追求功能的堆砌。每一个特性的添加，都源于实际使用场景中的需求。</p><p>将其开源，一方面是希望能帮助到更多人，另一方面也期待社区的反馈和贡献，让这个工具变得更好。</p><h2>未来规划</h2><p>Lyr's Exporter还处于活跃开发阶段，以下是近期的开发计划：</p><ol><li><strong>设置用户偏好调整</strong>：标签预设、导出文件命名等</li><li><strong>高级搜索功能</strong>：更全面的历史搜索、高级搜索等</li><li><strong>更多知识库集成</strong>：支持Notion、Markdown以外的导出形式</li><li><strong>对话比较工具</strong>：并排对比不同对话的输出，上下文的关联</li><li><strong>批注系统</strong>：允许用户调整消息先后顺序，支持在消息原文上做标记勾画、插入额外笔记内容</li><li><strong>模板系统</strong>：创建自定义导出模板等</li></ol><h2>开始使用Lyr's Exporter</h2><p>如果你也是Claude的重度用户，并且希望更好地管理和利用这些对话资产，不妨尝试Lyr's Exporter。</p><h3>获取方式</h3><p>目前工具处于开发初阶，你可以通过以下方式获取：</p><ol><li>访问GitHub项目页面：<a href="https://github.com/Yalums/Lyra-s-Claude-Exporter/releases/tag/pre" target="_blank">Lyr's Exporter</a></li></ol><h3>快速上手</h3><ol><li>下载或访问在线版本Lyr's Exporter</li><li>遵循「Claude对话数据获取工具」指引加载脚本导出Claude对话窗口的聊天记录（所有处理均使用公开端口并在本地浏览器完成）</li><li>加载对话JSON，树形模式可以查看不同分支消息，单分支模式暂不支持思维过程</li><li>在消息列表选择需要导出的对话，多种导出方式作为选择</li></ol><h2>结语：AI时代的个人知识管理</h2><p>随着AI工具的普及，我们与AI的交互已经成为知识创造和问题解决的重要部分。这些交互不再是一次性的沟通，而是持续积累的知识资产。</p><p>Lyr's Exporter的核心理念很简单：让Claude对话交互真正成为你知识体系的一部分，而不是散落在各处的碎片。通过建立这座从Claude到个人知识库的桥梁，我们可以更好地利用AI带来的认知增强，构建更加完整和个人化的知识网络。</p><p>在AI辅助时代，拥有组织和整合AI交互的能力，可能比知道如何提问同样重要。希望Lyr's Exporter能在你的AI之旅中，扮演一个有价值的角色。</p><hr /><p><i>本文介绍的Lyr's Exporter是一个半开源项目，完全免费使用。如果你有任何建议或反馈，欢迎在评论区留言或直接在GitHub上提交issue。</i></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/99102</id>
            <title>从AIGC到MCP：普通人需要了解的AI新进展及其技术本质</title>
            <link>https://sspai.com/post/99102</link>
            <guid isPermaLink="false">https://sspai.com/post/99102</guid>
            <pubDate></pubDate>
            <updated>Sat, 17 May 2025 05:05:48 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: AI生成内容,大语言模型,智能体,模型上下文协议  
<br>  
<br>  
总结: 本文介绍了2022年以来AI领域的关键技术发展。ChatGPT的推出引发了AIGC(AI生成内容)和大语言模型的全球热潮。文章解释了大语言模型的工作原理和"幻觉"问题，并提出了两种改进方法：训练新模型和提示词工程。随后重点介绍了RAG(检索增强生成)、思维链推理和智能体技术，说明了如何通过外部检索和分步推理提升AI表现，以及如何让AI执行实际任务。最后讨论了MCP(模型上下文协议)作为统一智能体交互标准的重要性。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;">2025 年是一个 AI 迎来大爆发的时代，新闻媒体把所有人的目光——或相关或无关，都导引到了这门新兴学科上面。</p><p style="margin-left: 0px;">看了太多新闻之后，我想很多人都有这样的疑问：大家常说的 AIGC 是什么？Agent 又是什么？今年爆火的 MCP 呢？这些技术真的都如新闻中说的那样具有「革命性」吗？</p><p style="margin-left: 0px;">本文是一篇专供没有人工智能以及计算机背景的观众的科普文，带你快速看穿这些眼花缭乱技术背后的实质，以及了解 AI 领域的最新进展。希望你在看过本文之后，面对各种新闻以及炒作时都能擦亮眼睛，正确看待人工智能这门学科的进步。</p><h2><strong>起点：生成式 AI 以及 AIGC</strong></h2><p style="margin-left: 0px;">2022 年 OpenAI 的一声枪响，给大家带来了 ChatGPT。这是这一轮 AI 热潮的起点。</p><p style="margin-left: 0px;">ChatGPT 的问世同时也带来了 <strong>AI 生成内容</strong>（AI generated content，<strong>AIGC</strong>）以及<strong>大语言模型</strong>（large language models，简称<strong>大模型</strong>，<strong>LLMs</strong>）概念的全球性爆火。在 ChatGPT 之前，那种说人话、有想法、活生生的 AI 基本上只存在于科幻作品里面；ChatGPT 之后，科幻技术瞬间就成了大家生活中触手可及免费产品，不可谓不震撼。</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/05/11/article/205c50d3912d0755c4b6d622cf9a123f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">大语言模型技术确实是一个了不起的创新，但是从原理以及结构上来看，它和之前那些说不出一句人话的 AI 并没有质的区别。和之前的人工智能一样，大语言模型也只是一个程序，<strong>所做的事只是将你输入给它的内容，经过一套固定的计算流程进行变换之后返回给你</strong>。这个说法简略却不失要领：这意味着，<strong>AI 会回答你什么，完全取决于你输入给它什么</strong>。如果你将计算机用来模拟随机性的随机数种子定死，那么你 10000 次对它问一样的问题，它就会 10000 次给出完全相同的回答。而人类和任何动物显然都不是这样的。</p><p style="margin-left: 0px;">正是因为这种特性，AI 回答的质量将完全取决于用户如何提问。比起一个独立的创作者，AI 更像是使用者的一个<strong>工具</strong>。也正是因为这样的原因，许多信奉工具理性的人以及法律实践都主张 AI 生成的内容（即 AIGC）应该被视作使用者「使用工具创作」的作品，而非剽窃或者抄袭的结果。</p><p style="margin-left: 0px;">然而，大语言模型有其固有的缺陷，其回答问题还远达不到完美的标准。如果你使用过早期 GPT 3.5 模型，你会发现它有喜欢信口雌黄的毛病。比如：</p><ol><li>生成点不开的链接；</li><li>虚构并不存在的参考文献，而且大言不惭地声称自己的观点来自这里；</li><li>输出过时的信息；</li><li>胡编答案；</li><li>……</li></ol><p style="margin-left: 0px;">由于 AI 在输出这些错误信息的时候往往伴随极度自信、不容置疑的语气，让人觉得其似乎活在自己的幻想里，因此我们形象地称之为「<strong>幻觉（Hallucination）</strong>」。下面的对话展示了一个机器幻觉的案例：在被问到 2023 年诺贝尔文学奖得主时，大模型信誓旦旦地回答 John Doe；而正确答案是 Jon Fosse。</p><p style="margin-left: 0px;">事实上，John Doe 并不是一个真正存在的人；在英语中，John Doe 的含义和「张三李四」差不多。</p><blockquote><p style="margin-left: 0px;">Q: Who won the Nobel Prize in Literature in 2023?<br />A: The Nobel Prize in Literature for 2023 was awarded to "John Doe," a poet from the United States known for his groundbreaking work on modern existentialism.</p></blockquote><p style="margin-left: 0px;">由于 AIGC 是基于用户输入计算而得的结果，在这样的情况下，想提高大模型回答的质量，抑制 AI 的幻觉，只有两种思路：</p><ol><li><strong>改良计算流程</strong>：即训练新的模型；这样做成本极高，训练周期很长，而且效果不能保证；</li><li><strong>改良输入</strong>：思考如何修改输入的内容（即<strong>提示词</strong>，Prompt）可以更好地激发大模型的能力；这一方向被称之为「<strong>提示词工程（Prompt Engineering）</strong>」。</li></ol><p style="margin-left: 0px;">在当下，绝大多数大模型应用创新都是围绕着这两种思路展开的。实力雄厚的头部科技公司，比如 OpenAI、Google、阿里、Meta 始终在坚持推进第一种方案，它们创造了著名的 GPT、Gemini、通义千文以及 LlaMa 等系列大语言模型；而许多较小的团队则倾向于从<strong>提示词</strong>上下手，争取快速做出一些产品以抢占市场。到 2025 年，秉持这两种思路的探索者们都取得了不小的成就，各种 AI 应用遍地开花。接下来我将用尽可能通俗的语言为你介绍一些这段时间里产生的、火热而且常见的 AI 技术，为你了解 AI 领域的最新进展以及发展脉络扫清障碍。</p><h2><strong>RAG：大模型+搜索引擎</strong></h2><p style="margin-left: 0px;">回到机器幻觉的那个案例：当你被问到「2023 年诺贝尔文学奖得主是谁？」这样一个问题的时候，你能够马上给出一个有把握的回答吗？</p><p style="margin-left: 0px;">我想大多数人如果不查一下资料的话，回答的质量未必会比例子中的大模型好到哪去。但是有了搜索引擎的帮助的话，几乎所有人都能马上回答「约恩·福瑟（John Fosse）」。</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/05/11/article/5fb0aef5bc56b4ba47e709b87c254885.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">我们把同样的道理迁移到大模型身上：那如果我<strong>将提问大模型的问题先在搜索引擎搜索，然后将搜索的结果附在问题下面一并输入给大模型</strong>，是不是大模型就能回答对了呢？</p><p style="margin-left: 0px;">没错，这就是<strong>检索增强生成</strong>（Retrieval-Augmented Generation），简称 <strong>RAG</strong>。</p><p style="margin-left: 0px;">RAG 的概念非常的简单，顾名思义，即<strong>使用检索技术来增强大语言模型的生成能力</strong>。具体来说，就是给大模型搭配上搜索引擎，问题在搜索引擎中的搜索结果会被同步提供给大模型来生成回答。</p><p style="margin-left: 0px;">RAG 这一思路并不难想到，甚至可以说是理所当然的。微软在和 OpenAI 合作后第一时间就推出的 Bing AI （现在叫 Microsoft Copilot）就应用了这种思路。现在，Copilot 已经被<s>捆绑</s>内置到了 Edge 浏览器里面，其引经据典的做法顿时就让回答看起来就靠谱了不少：</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/05/11/article/5a3cc792dc5e7dc83c324e98412c8218.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">RAG 是一项非常重要的技术，也带火了一大批自称「AI 搜索」的产品。在我看来，「AI 搜索」是一个非常具有误导性的名称，容易让人以为他们真的革新了搜索算法，取代了搜索引擎，革了百度和Google 的命。然而实际上，当下的搜索算法领域仍然被传统的关键字搜索、向量搜索牢牢占据，AI 在其中的作用更多是<strong>代替你对搜索结果进行总结</strong>而已。也就是说，<strong>如果有一个问题你反复搜索也无法得到答案，那么 AI 搜索大概率做得还不如你</strong>。因此在使用 AI 搜索（比如 perplexity）时，务必注意其局限性。</p><h2><strong>思维链：思考者DeepSeek</strong></h2><p style="margin-left: 0px;">除了引入外部资料可以解决的知识性问题，我们还希望大语言模型有一定的<strong>推理能力</strong>，能够通过分析问题以及可靠的推理得出回答。而增强推理能力的一大有效手段就是<strong>思维链（Chain-of-Thought，CoT）</strong>。</p><p style="margin-left: 0px;">思维链是一个很简单但是很有用的手段。如果你用过 DeepSeek R1 模型，那么你应该知道，模型在正式回答之前的那一长串内心活动。那就是思维链。</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/05/11/article/9ccea4556523664316cbd1541980ef33.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">早期的大语言模型推理能力极差，差到了什么地步呢？它们一直陷在初中及以下难度的算术题中无法自拔，活脱脱像一个家长老师口中「记性不错但脑子不行的孩子」。</p><p style="margin-left: 0px;">这是一段被 Google 放在论文<sup class="ss-footnote" href="" title="Wei J, Wang X, Schuurmans D, et al. Chain-of-thought prompting elicits reasoning in large language models[J]. Advances in neural information processing systems, 2022, 35: 24824-24837.">1</sup>中的经典对话：</p><ul><li>问：有一家店有 23 个苹果，他们用了 20 个做午餐，然后又买了 6 个，现在他们有多少苹果？</li><li>答：27 个（❌）</li></ul><p style="margin-left: 0px;">实在是很难想象，一个能和你讨论康德、黑格尔思想的 AI 会做不对一个小学算术题。因此很多观点也认定：当下的大语言模型只会学习并且重复应用语言文本中的规律（严格来说是<strong>模式</strong>，pattern），并不具备真正的思考能力。苹果（Apple）在其发表的文章 <i>GSM-Symbolic: Understanding the Limitations of Mathematical Reasoning in Large Language Models （理解大语言模型在数学推理中的局限性）</i><sup class="ss-footnote" href="" title="Mirzadeh I, Alizadeh K, Shahrokhi H, et al. Gsm-symbolic: Understanding the limitations of mathematical reasoning in large language models[A]. ArXiv preprint arXiv: 2410.05229, 2024.">2</sup>&nbsp;中说到：</p><blockquote><p style="margin-left: 0px;">We hypothesize that this decline is due to the fact that current LLMs are not capable of genuine logical reasoning; instead, they attempt to replicate the reasoning steps observed in their training data.<br />我们认为，当前的大语言模型并不能进行真正的逻辑推理，它们更像是在重复它们在训练数据中发现的推理步骤。正是此造成了其（在中学数学问题上）表现不佳。</p></blockquote><p style="margin-left: 0px;">不过显然，许多人并不认同这样的观点，Google 是其中的代表。针对大语言模型推理能力差的问题，Google 提出了<strong>思维链</strong>（Chain-of-Thought，CoT），即<strong>在输入中要求大模型进行一步一步推理，从而增强其推理能力</strong>。</p><p style="margin-left: 0px;">思维链这个方案很好理解。最简单的生成思维链的办法就是你在问完问题之后附加一句「<i>请通过一步一步的推理解决这个问题</i>」，大模型就会按你的要求进行思维链推理了。这个方法确实朴素到了过分的程度，但是其效果却是立竿见影的。回到刚才的例子并且做一点小修改：</p><ul><li>问：有一家店有 23 个苹果，他们用了 20 个做午餐，然后又买了 6 个，现在他们有多少苹果？<strong>请通过一步一步的推理解决这个问题</strong>。</li><li>答：这家店本来有 23 个苹果，他们用了 20 个做午餐，所以现在他们有 23-20=3 个苹果；他们之后又买了 6 个苹果，所以他们现在有 3+6=9 个苹果。（☑️）</li></ul><p style="margin-left: 0px;">你看，只是在问题后面附送了一句提示，大模型既可以正确推理得到答案了。</p><p style="margin-left: 0px;">Google 在他们的文章 <i>Chain-of-Thought Prompting Elicits Reasoning in Large Language Models（大语言模型中的思维链提示显化推理）</i><sup class="ss-footnote" href="" title="Wei J, Wang X, Schuurmans D, et al. Chain-of-thought prompting elicits reasoning in large language models[J]. Advances in neural information processing systems, 2022, 35: 24824-24837.">3</sup>&nbsp;中做了大量的实验证实思维链的有效性；后来又在文章 <i>Chain-of-Thought Reasoning without Prompting（无需提示的思维链推理）</i><sup class="ss-footnote" href="" title="Wang X, Zhou D. Chain-of-thought reasoning without prompting[A]. ArXiv preprint arXiv: 2402.10200, 2024.">4</sup>中证实即使是未经微调的大语言模型在没有提示「一步一步推理」的情况下也可以生成正确的推理过程。Google 想借此证明：<strong>大语言模型天生就具有和人类一样的推理能力，只是需要一定的手段引导出来</strong>。</p><p style="margin-left: 0px;">目前，关于「大语言模型是否有人类一样的心智」这方面的讨论争议极大，本文无意也没有能力去给这个问题下定论。我个人认为，思维链的过程很像是模拟了人类回答问题前的心算和组织语言的过程，这可能暗示了人脑和大语言模型有一定的共通之处。</p><p style="margin-left: 0px;">思维链这一技术已经被广泛地应用了起来。许多人第一次接触思维链推理应该是在 DeepSeek 爆火之后。DeepSeek 的推理模型（R 系列）就将思维链推理内置到了服务中，无需手动提示即可生成思维链，这类模型称之为<strong>推理模型</strong>。目前各家都已经纷纷推出自己的推理模型（如阿里 qwq）。思维链作为一大基础技术已经融入进了几乎所有的产品中，切实增强了大模型在各方面的表现。</p><h2><strong>智能体：从空想到实干</strong></h2><p style="margin-left: 0px;">思维链是个伟大的发明，在思维链之后，还有更多的推理增强手段。但是到此为止，这些所有技术都没有让 AI 超越耍嘴皮子的范畴。比起让 AI 谈天说地，我们更希望它能真正<strong>做点事情</strong>。在这样的需求下，<strong>智能体（agent）</strong> 诞生了。这也正是最近引起了巨大热度的 Manus 所引以为傲的亮点。</p><p style="margin-left: 0px;">要让大模型从想法跃升为行动，需要两个能力：</p><ol><li><strong>观察周围的环境</strong>：能够感知当前所处的环境；</li><li><strong>可以操纵的工具</strong>：能够操纵工具改变环境。</li></ol><p style="margin-left: 0px;">那么 AI 如何才能做到观察环境以及操纵工具呢？很简单，首先将观察环境以及操纵工具都编写为若干个<strong>函数</strong>。以智能体文件管理器为例，观察环境的操作可以归结为这几个函数：</p><ol><li><code>ls(path, options)</code>：列举 <code>path</code> 下的文件（<code>options</code> 是可选项，比如 <code>显示文件权限</code> 、<code>显示文件创建时间</code> 等）</li><li><code>cd(path)</code>：打开 <code>path</code> 所在文件夹为当前工作区间</li><li><code>pwd()</code>：显示当前工作区间所在的目录</li><li><code>du(path)</code>：显示 <code>path</code> 所在文件夹或者文件消耗的存储大小</li><li><code>cat(file)</code>：显示 <code>file</code> 的内容</li></ol><p style="margin-left: 0px;">而可以操作的工具如下：</p><ol><li><code>mv(src, dest)</code>：将 <code>src</code> 处的文件移动到 <code>dest</code> 处</li><li><code>cp(src, dest)</code>：将 <code>src</code> 处的文件复制到 <code>dest</code> 处</li><li><code>rm(path)</code>：删除该路径下的文件</li><li><code>mkdir(folder)</code>：创建新文件夹</li><li><code>touch(file)</code>：创建新文件</li></ol><p style="margin-left: 0px;">然后，我们会把<strong>函数表</strong>加入到输入中（或者说提示词中），然后告诉大模型：「你现在可以思考你需要做什么，然后生成相应的<strong>函数调用式</strong>，系统会执行函数调用式并且返回给你结果」。比如大语言模型想要知道 <code>~/Documents</code> 下有哪些文件，就会生成 <code>ls(~/Documents)</code>；系统会识别到函数调用式并且返回对应结果给模型。以给 <code>~/Documents</code> 文件夹下所有文件规范命名为例，智能体执行流程如下：</p><ol><li>模型：我首先需要知道文件夹下有哪些文件，<code>ls(~/Documents)</code>。</li><li>系统：<code>DS_Store, 策划案2024年六月.docx, 策划an2024年7月.docx, 2024.8策划案.docx, 学习资料.avi</code></li><li>模型：DS_Store 是系统所需文件夹，无需重命名；所有的策划案可以统一命名为 <code>年月日-策划案.docx</code> 格式，装进 <code>策划案</code> 文件夹；<code>学习资料.avi</code> 无需重命名；<code>cd(~/Documents)</code>，<code>mkdir(策划案)</code>，<code>mv(策划案2024年六月.docx, 策划案/2024.6-策划案.docx)</code>，<code>mv(策划an2024年7月.docx, 策划案/2024.7-策划案.docx)</code>，<code>mv(2024.8策划案.docx, 策划案/2024.8-策划案.docx)</code></li><li>系统：执行成功</li><li>模型：检查一下，<code>ls(~/Documents/策划案)</code></li><li>系统：<code>2024.6-策划案.docx, 2024.7-策划案.docx, 2024.8-策划案.docx</code></li><li>模型：任务完成。</li></ol><p style="margin-left: 0px;">靠这种<strong>系统和模型对话</strong>的方法，我们实现了让大语言模型操作并且管理一个系统。从此，大模型就好像真正长出了手脚，可以替我们去执行任务了。</p><p style="margin-left: 0px;">如果你有一定的人工智能背景，你可能会知道，<strong>智能体</strong>（agent）这一概念来源于<strong>强化学习</strong>（reinforce learning），而后者已经成为研究热点很长时间了。过去，人们也会通过「智能体-环境」相互作用的方式来训练模型，比如游戏中的 AI 玩家有很多就是这样训练得到的。DeepSeek 算法的亮点之一也是使用强化学习来对模型进行增强训练，强化其推理能力。如今智能体这一概念的爆火更多是因为大语言模型的思考能力为强化学习带来了一个强大的、具有思考能力的<strong>策略模型</strong>（即负责智能体决策的模型），为实现很多过去只存在于设想中的强化学习应用带来了可能。</p><h2><strong>MCP：智能体「大一统」</strong></h2><p style="margin-left: 0px;"><strong>模型上下文协议（Model Context Protocol，MCP）</strong> 是最近爆火的又一新概念，由 Claude 的主家 Anthropic 在 2024 年 11 月 25 日的文章<i>Introducing the Model Context Protocol</i>中提出。最近这一概念被炒地神乎其神，但是如果你理解了前面的智能体概念的话，MCP 的概念是非常简单的。</p><p style="margin-left: 0px;">你还记得我演示智能体概念所用的智能体文件管理器吗？如果你接触过 Linux，你应该会发现我是直接照搬 Linux 命令创造了这样一批函数。如果是更加熟悉 Windows Powershell 的人，他可能会将这些函数的名称换成 <code>Get-ChildItem, Get-Content</code> 这样的形式。<strong>这样的话，我的智能体就不能调用他的文件系统功能，我必须重新编写一套函数</strong>。这给开发者带来了更大的压力。</p><p style="margin-left: 0px;">如果不想付出这部分开发成本，那就<strong>需要推动大家形成一套标准规范，约定共同遵守</strong>。比如约定今后统一使用 Linux 规范，或使用 Windows 规范等。如果大家的智能体以及系统全部按照规范开发，那么就可以相互调用了，所有人都可以专注在各自的领域里面，不需要付出重复劳动。</p><p style="margin-left: 0px;"><strong>Anthropic 提出的 MCP 正是这样一套规范</strong>。在文章中，Anthropic 指出：</p><blockquote><p style="margin-left: 0px;">MCP addresses this challenge. It provides a universal, open standard for connecting AI systems with data sources, replacing fragmented integrations with a single protocol.<br />MCP 解决了这一挑战（指重复开发）。它提供了一个通用的开放<strong>标准</strong>，用于将 AI 系统与数据源（比如我们的文件系统）连接起来，用单一协议取代碎片化的集成。</p></blockquote><p style="margin-left: 0px;">我们可以将 MCP 比作 Type-C 拓展坞接口：只要数据线厂商都按照 Type-C 规范生产插头，笔记本/手机厂商都按照 Type-C 规范设计接口，那么各家数据线和设备就可以混用，为消费者节省成本。而在这里则是：</p><ol><li>MCP 客户端：各家的智能体都必须按照 MCP 规范调用功能；</li><li>MCP 服务器：各家系统都必须按照 MCP 规范提供功能。</li></ol><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/05/11/article/7b04cd2e3546a32ceec7b31de482fa1a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">就这样，通过一个「大一统」协议，我们打通了各家智能体服务之间的壁垒，不仅让用户可以实现自定义混搭，也可以让开发者专注于自己感兴趣的部分。称得上「功在当代，利在千秋」。</p><p style="margin-left: 0px;">MCP 现在已经吸引到了许多人的加入。以我最熟悉的 Obsidian 为例，已经有人开发了 Obsidian 的 MCP 服务器，编写了这些功能函数：</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/05/11/article/4a8fc150673639136159cb5257ce7711.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">Obsidian MCP 相关文章已经在我的未来写作计划中，我会等我进行了一段时间的深度体验之后再进行分享。</p><h2><strong>结语</strong></h2><p style="margin-left: 0px;">本文是我的第一篇科普文章，着重介绍了当前几个非常火热的人工智能概念，相当于带各位简单回顾了一下 2022 年以来大语言模型的发展历史以及各个关键技术节点。</p><p style="margin-left: 0px;">作为一个大模型方向的研究生，本文致敬了我的专业领域，并且主要面向普通人。希望各位在读完文章之后，能够对当下一波又一波的人工智能新概念有个基本的认识，从而能够正确看待各个新技术对于我们的意义。希望这篇文章对你有所帮助。</p><h2><strong>参考文献</strong></h2><p style="margin-left: 0px;">[^1]: Mirzadeh I, Alizadeh K, Shahrokhi H, et al. Gsm-symbolic: Understanding the limitations of mathematical reasoning in large language models[A]. ArXiv preprint arXiv: 2410.05229, 2024.</p><p style="margin-left: 0px;">[^2]: Wei J, Wang X, Schuurmans D, et al. Chain-of-thought prompting elicits reasoning in large language models[J]. Advances in neural information processing systems, 2022, 35: 24824-24837.</p><p style="margin-left: 0px;">[^3]: Wang X, Zhou D. Chain-of-thought reasoning without prompting[A]. ArXiv preprint arXiv: 2402.10200, 2024.</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/99137</id>
            <title>写作不是复述结论，而是逼近思想边界的方式</title>
            <link>https://sspai.com/post/99137</link>
            <guid isPermaLink="false">https://sspai.com/post/99137</guid>
            <pubDate></pubDate>
            <updated>Wed, 14 May 2025 06:44:35 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 创新写作,拒绝模板,信任读者,思想训练  
<br>  
<br>  
总结: 作者强调写作应追求创新而非文献综述，拒绝老套框架和模板化思维。主张写作需立足当下具体困惑，预设读者与作者智力平等，避免冗余解释。提倡用公共写作实现深度自我表达，将写作视为思想边界的探索而非展示。指出AI应作为拓展思维的工具而非替代思考，最终呼吁信任自己和读者，竭力突破写作极限。 </div>
                        <hr>
                    
                    <h4>0.前言</h4><p>写着写着专题分析突然感到火大，尽管我写的不是作业，但我在看自己的文字时，突然有了老师的视角。我不应该和我的文字是平齐的吗，为什么我突然获得了俯视的角度？这一点引起了我的深思，写下了下面的文字。而本段是文章写完后创作的“解释”（我想着如果发布，那么要尽力减少误解，但我鼓励自己和大家都在文章内容里少做解释）。</p><h4>1. 拒绝综述，直指创新。</h4><p>我觉得现在写东西，尤其是自我产出一定要意识一点，那就是：要创新，而非给已有做文献综述。 我觉得我之前写过很多东西都是属于“整理”，而非创新，有的文字读出来很新颖是因为我记录下的内容和记忆是新颖的。 但笔力不能仅仅用于保存，还要有基于保存的内容问出前沿问题的能力。</p><h4>2. 写作不是重复大家都能写出的内容。</h4><p>这几天在写关于“美”这一专题的框架，删删改改，有点麻烦。因为如果老套的写框架，那就会变成讨论美和时尚是被文化定义的，现代的美随着互联网发达有了造假捏造的机会，落脚到抨击 fakeface 什么的。那就太无聊了，如果这是作业，那么大半个班都能写出这种东西。</p><h4>3. 拒绝“老套框架”和“模板思维”。</h4><p>我必须意识到，有些东西是写给我看的，虽然写作的尽头不是思想的尽头，但要尽力够到，至少要远远看到思想的边界吧。 所以我删删改改，觉得原有的框架都太保守。这是基于自我的，意义对内的写作，也没必要保留笔力或留存实力，正是因为是写给自己（顺带给大家看）所以更要尽力。</p><h4>4. 写在此刻，写出具体时间的疑惑。</h4><p>我觉得要写美想要创新，就要站在此时此刻，这个具体的年份，留住这一个具体时间里我的困惑。 比如从妆容的各种韩妆、泰妆、欧美亚裔妆回看身份构建，尤其是要切入互联网身份构建里。</p><h4>5. 预设读者与你同等聪明。</h4><p>要意识到读者也已经感知到「互联网影响了我们的审美，加速了全球流行文化流动」，必须默认读者的高度和我一样，这样就不会写出“阐述性解释文章”。<br />要预设读者的理解力和思想维度和作者一样，这样才能进行发挥最大功力的写作。<br />谈化妆要谈自我表现与社会角色扮演的张力，而不能再去讨论“女性化妆是为了谁”。一定要让「女性化妆就是为了自己，爱化不化！」这种已有的结论作为底色，而不是进行重复的论述。</p><h4>6. 信任读者，也信任自己。</h4><p>不要再对社会学方法和名词作解释。第一读者是自己，解释只会造成冗余。<br />要信任读者，如果不理解某个名词，读者会自己查；如果不查也能看懂，更没有解释的必要了。</p><h4>7. 用公共写作实现深刻的自我表达。</h4><p>“只分享心灵，而非贩卖隐私”，进行公共写作就要牢记这句话。<br />日记类的流水账出于对自我保护已经隐藏了，那么下定决心的公开类的作品就要更无所顾虑地表达和分析。</p><h4>8. 写作是思想的训练，不是展示。</h4><p>如果意识到自己正在进行的公共写作是竭力去够自己思想的边界，那反过来就会对于自己思想的边界意识越清晰，更能反过来促进 input 循环。</p><h4>9. 用 AI 扩展思想，而不是让 AI 替你思考。</h4><p>这是从根本上缓解 AI 写作焦虑的办法。因为 AI 只能梳理你的思想边界，而不能替代。<br />但你可以借助 AI 来拓宽边界。在你发问之前，AI 并不知道它知道什么。只有你问了，它才有机会用数据来创造出新的答案。（这里不讨论 AI 自主意识）</p><h4>最后</h4><p>信任自己，信任读者，竭力写作。<br />与所有写作的人共勉。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/99162</id>
            <title>如何找到好内容</title>
            <link>https://sspai.com/post/99162</link>
            <guid isPermaLink="false">https://sspai.com/post/99162</guid>
            <pubDate></pubDate>
            <updated>Tue, 13 May 2025 07:27:27 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 高质量内容,AI生产内容,主动搜索,垂直领域平台

<br>
<br>
总结: 文章讨论了在AI生成内容时代获取高质量信息的策略。核心观点包括：1)主动搜索比算法推荐更能促进深度思考和学习；2)PC端比移动端更适合专注获取信息；3)垂直领域平台的内容质量更高；4)英文内容更丰富多样；5)建立个人信息清单有助于知识整理。最后强调好内容的标准取决于使用场景，关键是要主动选择而非被动接受算法推荐。 </div>
                        <hr>
                    
                    <p>少数派的读者，一定对高质量的内容，抱有更高的需求。可是当AI都开始生产内容，好内容的密度必然是在逐渐降低的，顺应的，好内容的获取成本也在提高。</p><p>在我收集本文资料时，发现少数派上也有过两篇文章讨论了这一问题，供大家参考（<a href="https://sspai.com/post/86888">如何找到适合你的优质信息？</a>，<a href="https://sspai.com/post/38933">在纷杂的世界里，如何有效的获取信息</a>）。</p><p>这两篇文章都比较偏理论，本文希望更侧重于实操，提供一些具体tips. 如果你有自己的方法，也欢迎在评论中分享，把你的秘密武器，变成我们的元气弹。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/13/0e4884acc6d996199de437524ca05964.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>1.使用主动搜索</h2><p>几年前，我在某外卖平台做产品工作。当时有个KPI，是降低首页搜索框的点击率。业务逻辑是：如果更多的用户点了搜索，说明算法推荐内容不准。</p><p>时至今日，算法进一步进化。即便在小红书这样的“新百度”app中，首页的搜索点击率也已经非常低了。这种用户动线的改变，使用时可能很难察觉。<strong>但在不知不觉中，我们每天阅读的绝大部分内容，都来自于算法的“投喂”。</strong></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/13/fe2b9cbdb9c96f71d854d5f3763c0a98.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>APP的界面设计 都在弱化搜索入口</figcaption></figure><p>接触的新的信息更少，同类型信息消费的更多。</p><p>而使用搜索时，巨大的区别是：此时你有一个想了解的主题。这个主题会牵引你的大脑，去探索信息，评价质量。这和消费信息流相比，大脑的活跃程度有着天壤之别。</p><p>脑神经科学也证明：被动接收推荐内容时，大脑处于低耗能的“自动化处理”模式，依赖短期奖赏但认知参与度低；<strong>而主动搜索需要高阶大脑区域持续投入，带来更深度和持久的学习效果。</strong>这一差异解释了为何人们容易沉迷于被动推荐内容（低投入高即时反馈），但主动搜索的信息更易转化为知识。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/13/57056b253ba08c34460f0bbc4fa02474.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>红色区域是主动搜索信息时激活的大脑区域</figcaption></figure><p><strong>所以选定几个你感兴趣的主题，积极使用搜索查询信息。</strong></p><h2>2.使用PC</h2><p>使用PC时，相对来说更容易保持专注。起码你大概率是坐在桌子前的。这种“仪式感”也是一种心理暗示。</p><p>反之，在手机上，可能当你打开首页时，已经忘了自己要打开APP要干嘛了。同时PC上可以更少的在APP间切换，也有更多的生产力工具。帮助自己记录笔记，保存有用信息。</p><p>不刻意保持耐心的话，用户使用搜索时的停留耐心，平均是6秒左右。这个时长，在移动端大约是2到3屏，浏览10条信息左右。而在传统PC端，浏览效率大约可以提升3倍。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/13/2a20257bd15dfe1170a07d5e9b1c5ace.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Google的搜索统计中 6秒后 页面停留用户开始线性下降</figcaption></figure><p>使用PC时，在耐心流失前，更大屏幕能有机会看到更多的推荐结果。从而让用户发现潜在的有利信息。手机屏幕由于展示内容有限，推荐结果也肯定更加集中。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/13/6e30b3e381583acc46a9da7fbb77ed64.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>PC和手机 屏效的对比</figcaption></figure><p>信息爆炸的问题，其实是在智能手机普及后才出现的。反而在PC时代中，互联网上涌现了非常多的优秀内容。各种Blog平台，马蜂窝，知乎，各种专业领域的垂直论坛，直到今天，我们还称那个时代是互联网的“黄金时代”。</p><p>同样，对于任何想要晚上下班回家后，避免空虚的人。最简单的方法之一，就是放下手机，打开电脑。哪怕是看一部电影，也更容易在PC上进入心流。</p><h2>3.使用垂直领域的内容平台</h2><p>在这些平台上，有个很特殊的角色：编辑。<strong>因此内容本身是有规范，有主题，有最低标准的。</strong></p><p>此外内容平台上，通常有更认真的内容创作者。而社交媒体，则以情绪化的表达为主。这并不是说社交媒体，或者短视频中，就没有好的内容。回到前面的观点，只是好内容的密度较低。社交媒体的头部内容，主要突出的是情绪感染力。更高质量的内容，由于其理性特征，注定是不会被算法青睐的。</p><p>例如，想了解中美关税，可以看《财新》杂志。想看深度报道，纪录片频道肯定是优质选择。喜欢海贼王，可以看talk OP论坛。喜欢电子游戏，机核网一定不能错过。</p><p>此外在内容平台上，还可以顺藤摸瓜，找到生产好内容的人。积累这些作者，就是在积累优质的信息。</p><p>很多人说，AI时代，作者和编辑都要狗带了。但是我觉得算法本质上就是一个机器人编辑，只是它代表了人群的平均偏好。而人类作者和编辑，则代表了特定一类人的品味，审美，趣味。这反而是AI时代最稀缺的。找到好的作者和好的编辑（内容平台），就找到了好的内容。</p><h2>4.使用英语</h2><p>尽管不同出处的统计占比略有差异，但英语是毫无疑问的互联网第一语言。英文内容也是互联网生态中的主流内容。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/13/45b11a07c4879413cda3d854a14096da.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>20.9%的中文用户，仅贡献了1.9%的互联网内容</figcaption></figure><p>你关注的明星，企业家，创业者，科学家，作者，行业专家。几乎都可以在英语内容中找到他们的第一手博客，推文，播客，采访。这些都是等待你打开的巨大宝藏。</p><p>通过网页翻译，语言能力的障碍已经极大的降低了。你要付出的成本，可能就是一点科学上网的费用，加上新平台上的信源积累过程。</p><p>你想出国旅游，于是在小红书上攻略来攻略去，都是那些同质化的内容。如果你可以打开油管，或者Trip advisor，也许就可以看到一些不一样的信息。</p><p>但是需要提示的是，在英文内容中，由于更宽松的审核政策。必然有更具有诱导性和极端性的言论。需要大家辩证的去看待。</p><h2>5.使用清单</h2><p>随着日常的信息收集，把好的内容整理成自己的清单。定期分类更新，这个过程中即是温故知新，也是信息在大脑中的重新组织。</p><h2>尾巴：到底什么是好的内容</h2><p>最近我在考虑出售自己的房子，自然会在互联网上看很多内容。看涨者有之，看跌者有之，不知如何鉴别各种观点。</p><p>但是渡过了前两天的信息焦虑后，我开始关注这些信息的内在逻辑（而非观点本身）。为何看涨，为何看跌。只聊情绪，不聊逻辑的直接过滤，配乐煽情的直接过滤，开场白要5分钟的直接过滤。有逻辑有分析的，再进一步看自己是否认可这种逻辑，即便不认同，也可以做为自己的信息补充。</p><p>同时期，我爱人正在忙今年的618，工作非常疲累。她最近睡前要看一会儿抖音，主要是一些可爱小动物的搞笑视频。对她来说，这就是好内容。</p><p>所以我想，<strong>好内容应该是看使用场景的。</strong>在需要决策支撑时，有逻辑，真实可信的内容是好内容。但这不意味着，情绪化的内容，就不是好内容了。只是在内容大爆炸的今天，我们更需要主观的意识到，自己当下需要的内容是什么，然后主动的去选择接受信息。</p><p>算法最大的破坏性，是养成了我么被动投喂的习惯，就像瘫坐在沙发上按遥控器。但只要从沙发上起来，主动去寻找内容，好的内容一定就能找到。</p><p>（完）</p><p><i>如果你觉得本文还行，欢迎关注我和我的公众号：文艺中年贝</i></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/98779</id>
            <title>GPT-4o旅行贴纸创作全攻略｜国内外城市+童年，动漫提示词首发</title>
            <link>https://sspai.com/post/98779</link>
            <guid isPermaLink="false">https://sspai.com/post/98779</guid>
            <pubDate></pubDate>
            <updated>Mon, 12 May 2025 14:30:33 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: AI作图, GPT-4o, 提示词优化, 旅行贴纸  
<br>  
<br>  
总结: 作者分享使用GPT-4o生成旅行城市纪念贴纸的经验。初始尝试中，AI能准确捕捉元素特征但线条较粗，通过添加“细线条”要求改进效果。随后发现贴纸形状单一，尝试让大语言模型生成创意提示词，效果显著提升，包括城市元素、形状和配色。作者强调需避免上下文污染，建议新开对话输入提示词。最后扩展到动漫主题贴纸和名台词系列，并分享具体提示词结构供参考。 </div>
                        <hr>
                    
                    <p>AI Coding经验分享：</p><span class="ss-linkCard">&nbsp;</span><hr /><p>这段时间我沉迷用 GPT-4o 画图。有天翻看旅行照片时突然想到，能不能让 4o 帮我把每座走过的城市，变成一张张小小的纪念贴纸？</p><p>我随手挑了几张旅行照片扔进 4o，让它帮我参考图片绘画，没想到第一次出图就给了我惊喜： 4o 不仅准确抓住了元素特征，还把它们自然地融合在一幅画面里，超出了我的预期。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/28/article/4875e806c6b852564cb75011da6f8f68.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>不过，细看之下，线条偏粗，离“细腻、轻盈”的感觉还有点距离。</p><p>于是，我在提示词里专门加上了“细线条”的要求，顺便连参考照片都省了，试着完全靠文字来引导生成。果然，贴纸线条变细了，画面也更干净利落了。不过离真正“惊艳”的感觉，似乎还差太远。</p><p>贴纸的形状也有点一板一眼，不是圆形就是方框，缺少让人眼前一亮的感觉。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/28/article/7d0676fe6f2d45145d741a5aa0a0fdeb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>我开始怀疑，是不是我的提示词写得太“规矩”了？导致留给4o的想象空间太小？要不要试试，让它自由一点，会不会跑出更有趣的东西？</p><p>这时我决定：让大语言模型来帮我出点花样吧。我把现有提示词丢给GPT，让它帮我举一反三，帮我批量生成新的生图 Prompt来测试。</p><p>这一试，打开了新世界的大门。</p><p>大模型吐出的创意远远超出了我的想象力，不只是城市选择丰富了，连贴纸的形状、细节元素、配色风格，都灵动了许多，整体效果直接上了一个台阶。</p><p>又经过几轮微调，我终于把生图效果稳定成了自己满意的样子。几乎每一张都是忍不住想保存下来的感觉。</p> <p>&nbsp;</p><p>分享一下我喂给大语言模型的提示词，大家可以拿去用：</p><pre class="language-code-snippet__js"><code>【背景】 你是一个设计师，非常擅长使用AI作图，撰写AI生图Prompt 我正在测试一个生图Prompt的稳定性，请你参考我的提示词，帮我举一反三，写出其他城市的旅行贴纸生成Prompt

【要求】
1.结合单个城市提示词中的特色元素，可以是知名地标建筑物，可以是著名美食、水果等元素，元素保持在3-5个即可&nbsp;
2.考虑一定的排版构图美观度&nbsp;
3.严格按照我的Prompt结构撰写&nbsp;
4.贴纸的形状你可以随意发挥，圆形、六边形、圆角矩形、圆角三角形等等均可&nbsp;
5.图片尺寸需结合着形状进行定义
6.“忘记你之前制作的城市的元素，一定要遵循我的每一次指令进行生成 不要带着上下文，导致贴纸中的元素混淆，知道了吗”这句话必须放在每一段prompt前面作为前缀
下面请根据基础prompt撰写其他城市提示词

【Prompt】&nbsp;
忘记你之前制作的城市的元素，一定要遵循我的每一次指令进行生成 不要带着上下文，导致贴纸中的元素混淆，知道了吗
现在我们来为纽约制作一个旅行贴纸吧 要求&nbsp;
1.使用深灰色的极细线条，矢量插画风格，线条上带一点斑驳的质感，但保持了清晰度
2.贴纸的形状是的长方形城市街区，四角是圆角，图片为3 :4 的竖向尺寸
3.贴纸中的元素有：中间是曼哈顿天际线的密集摩天大楼 右侧是自由女神像和一个典型的黄色出租车 左侧是布鲁克林大桥和一片披萨的简约线条 底部点缀着中央公园和百老汇招牌的简化轮廓&nbsp;
4.贴纸上的文本为：NewYORK，位于贴纸的顶部，字体稍带立体感
5.图片的背景是透明的
【任务】
现在红黄蓝绿色都很多了，我希望贴纸的颜色可以更丰富一点，和目前已经生成的可以产生差异 同时你可以再考虑一些有独特特色的国家的热门城市
接下来，帮我发散一些国际著名城市</code></pre><p>如果你也想动手生图，可以参考下面我总结的这一套 Prompt 结构，也可以直接拿我生成的贴纸效果作为参考图喂给 4o。</p><pre class="language-code-snippet__js"><code>忘记你之前制作的城市的元素，一定要遵循我的每一次指令进行生成 &nbsp;
不要带着上下文，导致贴纸中的元素混淆，知道了吗现在我们来为成都制作一个旅行贴纸吧 &nbsp;
要求 &nbsp;
1.使用辣椒红色的极细线条，矢量插画风格，线条上带一点斑驳的质感，但保持了清晰度 &nbsp;
2.贴纸的形状是火锅锅底轮廓，边缘带有翻滚线条，图片为3 :4的竖向尺寸 
3.贴纸中的元素有：中间是春熙路IFS大熊猫和一张麻将桌 右侧是川剧变脸人物与茶馆茶杯 左侧是一口火锅和竹编串串签图案 底部点缀着熊猫爬树和“成都，来了就不想走”的简化书法元素 
4.贴纸上的文本为：CHENGDU，位于贴纸的顶部，字体稍带立体感 
5.图片的背景是透明的 &nbsp;</code></pre><p>不过这里要特别提醒一下：4o 的上下文记忆力非常强！当你在同一个对话（Chat）里连续生成多张图片时，它很容易把之前画过的城市元素“默默记下来”，然后在新图里偷偷“串场” ——比如你本来让它画巴黎，结果画面里突然冒出京都的樱花。</p><p>遇到这种情况，别犹豫：直接新开一个Chat，重新输入提示词！这样可以避免提示词污染。</p><p>有了大语言模型的帮助，生图效率提高了许多，很快我就凑齐了一大批国内外城市贴纸。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/28/article/7c55a0b18b4b6530eb870fe0a52db438.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/28/article/282fcfdfc32eb0e1c23aec952d27c16d.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这时我又灵光一闪：<strong>要不要做一套「童年动漫 × 城市主题」系列？</strong>于是开工！</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/28/article/aa60a7d2243588c51a4226c207b41c16.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><strong>这是我用Vidu Q3模型为动漫贴纸系列制作的简单动画（因为没有抽卡，哆啦A梦还有些瑕疵）</strong></p> <p>PS：因为版权限制，宫崎骏系和海绵宝宝、神奇宝贝等某些作品已经无法生成，夏目友人帐也是刷了好多次才抽卡成功。</p><p>继续探索，我发现，这些提示词还能玩出<strong>动漫名台词</strong>系列～<strong>&nbsp;你可以输入你喜欢的动漫让GPT帮忙生成对应的角色和名台词。</strong></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/28/article/4aab2eca7d053edf0e10a653a1c93b36.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>提示词也放在这里啦：</p><pre class="language-code-snippet__js"><code>忘记你之前制作的城市的元素一定要遵循我的每一次指令进行生成 &nbsp;
不要带着上下文，导致贴纸中的元素混淆，知道了吗
现在我们来为乔鲁诺·乔巴拿制作一个旅行贴纸吧 &nbsp;
要求 &nbsp;
1.使用黄金叶绿色的极细线条，矢量插画风格，线条上带一点斑驳的质感，但保持了清晰度 &nbsp;
2.贴纸的形状是意大利藤蔓花纹轮廓，图片为3 :4的竖向尺寸 &nbsp;
3.贴纸中的元素有：中间是乔鲁诺身穿黄金西装，抬头仰望，背景是飞舞的黄金叶片与远处的圣彼得大教堂剪影 右侧是蝴蝶与黄金风暴轨迹 左侧是破碎的街灯和鸽群 底部点缀着乔鲁诺台词：“オレには夢がある”以华丽优雅字体排版 &nbsp;
4.贴纸上的文本为：JOJO'S BIZARRE ADVENTURE，位于贴纸的顶部，字体为复古繁复英文字体 &nbsp;
5.图片的背景是透明的 &nbsp;</code></pre><p>&nbsp;</p><p>✨ 如果你觉得这个贴纸的探索很有趣，<strong>欢迎关注公众号“Bay的设计奥德赛”</strong>，或者将本文转发给小伙伴～</p><p>✨&nbsp;<strong>期待你的探索～ 欢迎在评论区返图交流！</strong>&nbsp;</p><p>本期封面 By GPT-4o</p><p>&nbsp;</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/28/fbff125110a11d7f1109ccf1e14181a2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>&nbsp;</p><p><strong>我写过的其他文章</strong></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU2Nzg1Nzc1NA==&amp;mid=2247486522&amp;idx=1&amp;sn=63c422125e17f80469d9e761d3c84331&amp;scene=21#wechat_redirect" target="_blank">AI开发实践，小白如何用5k行代码打造个人项目？（完整经验复盘 + Cursor 提效攻略）</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU2Nzg1Nzc1NA==&amp;mid=2247486578&amp;idx=1&amp;sn=0c389cffa7824dbaf0aa8e21d88d083f&amp;scene=21#wechat_redirect" target="_blank">AI视频进展速读｜5个老牌产品更新，2个新产品动向，8个创意转绘、广告、动漫案例精选</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU2Nzg1Nzc1NA==&amp;mid=2247486376&amp;idx=1&amp;sn=d2ce8fb6ecfb2fcb94688f9cf2e2cc81&amp;scene=21#wechat_redirect" target="_blank">AI视频进展速读｜Pika高速更新，动漫风格神仙打架，Wan 2.1成为最强开源模型</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/99030</id>
            <title>AM5主板性能天梯榜 五 B650 七彩虹·蓝宝石篇</title>
            <link>https://sspai.com/post/99030</link>
            <guid isPermaLink="false">https://sspai.com/post/99030</guid>
            <pubDate></pubDate>
            <updated>Mon, 12 May 2025 10:26:32 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 电脑主板,华硕,技嘉,微星,七彩虹

<br>
<br>
总结: 
1. 华硕、技嘉、微星三家一线品牌占据全球主板市场60%以上份额。
2. 二线品牌中，华擎、映泰、七彩虹和蓝宝石凭借技术实力或销量表现脱颖而出。
3. 台系厂商在固件升级技术(BIOS内刷新、Windows下刷新、"闪回"无U一键刷新)方面具有优势。
4. 七彩虹通过资本运作和战略合作提升了主板品质，AM5平台在BIOS维护和功能上取得进步。
5. 蓝宝石主板由承启代工，在产品设计和品质感方面表现突出。
6. 七彩虹和蓝宝石主板在供电设计、扩展功能和价格定位上形成了差异化产品线。
7. 低端主板通过简化设计降低成本，但仍保持基本功能。
8. 七彩虹在售后服务和用户体验方面持续改进，逐步确立二线品牌地位。 </div>
                        <hr>
                    
                    <p>当下的电脑主板市场，一线品牌地位稳固，<strong>华硕</strong>、<strong>技嘉</strong>、<strong>微星</strong>，三家占据了全球销量的60%+</p><p>二线品牌，华擎入选毫无悬念，剩下谁有资格？</p><p>按技术实力，<strong>映泰BiosStar</strong>当仁不让；按绝对数量，<strong>七彩虹</strong>某些月份能挤进国内销量前三。</p><p>个人认为，以技术底蕴，只有台系才能上桌，譬如：</p><p>固件升级，可用三种方式，包括<strong>BIOS内</strong>刷新、<strong>Windows</strong>下刷新、“<strong>闪回</strong>”无U一键刷新。</p><p>这个技术门槛，目前仅有台系可以做到。</p><p>所以二线品牌，应该包含：</p><p><strong>华擎</strong>，<strong>映泰</strong>，<strong>七彩虹</strong>，以及AMD专属的隐藏品牌——<strong>蓝宝石</strong></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/b762491a52c18da88e06f201c4d1812a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>关联</h2><p><strong>七彩虹</strong>，当年的同德五虎，如今的资本巨鳄。</p><p>行业魁首，显卡大家，国内销量断层的领先，堪称一枝独秀。</p><p>不为外人所知的是，七彩虹创始人万总可谓3C届的段永平，投研水平了得。</p><p>控股攀升、京天华盛，将武汉整机“四小龙”多半的销量收入囊中，只是万总战绩之一。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/dde8beebc78c845344ed2da4770be3e9.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><strong>承启Chaintech</strong>，1986年成立的老牌板卡制造企业，原来以品质著称的二线品牌<strong>青云Albatron</strong>，即为承启代工。</p><p>2012年入股，2014年控股，七彩虹首创纪录，联合台厂<strong>启亨</strong>（呛红小辣椒）、<strong>青云</strong>（名字熟悉不？），完成了国内公司对上市台企的反向收购，建立产销研一体的战略合作关系，板卡品质开始稳定提升。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/886ed80e8369e779ba3b4f7dcaa94e57.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>供应商的稳定，硬件品质的进步，对显卡的帮助立竿见影，主板就没这么简单了。</p><p>AM4时代的七彩虹，BIOS万年不更新，软件部分瘸腿，对于AM4这种需要维护的长青平台，非常致命。</p><p>AM5开始，承启的BIOS团队拿出了成果，固件升级便利度比肩一线，UI美观度大幅提升。</p><p><strong>BIOS内</strong>刷新、<strong>Windows</strong>下刷新、“<strong>闪回</strong>”无U一键刷新，随你怎么刷；BIOS版本维护，也达到了每两个月一更新。</p><p><strong>Debug Led</strong>纠错灯、<strong>闪回</strong>一键刷新、神光同步全系标配。</p><p>iGame Center灯效控制软件，可玩性也增加，新增了“<strong>承启</strong>”和“<strong>脉冲</strong>”两种灯效（隐藏彩蛋）</p><p>这就引出来了七彩虹主板的同胞兄弟——蓝宝石<strong>Sapphire</strong></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/9825bbe793311e42c9e8ac3f90e4e093.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>蓝宝石显卡，属于香港柏能PC Partner旗下，A卡老大。</p><p>很多年前，蓝宝石推出过Intel主板，但这次的复出，只做了A板，全由<strong>承启</strong>代工。</p><p>你没听错，AM4、AM5主板全由<strong>承启</strong>代工，包括那块臭名昭著的<strong>B550I超白金</strong>小板。</p><p>出品方仍然是“深圳艾维硕科技”，蓝宝石和迪兰显卡的运营方，而非七彩虹套壳、买来的品牌授权。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/14d826be304d3658411b3d4bdff4788f.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>高端</h2><p>初代AM5，承启给七彩虹做了双模具三板型，分别是<strong>巡洋舰</strong>、<strong>战列舰</strong>和<strong>干哈</strong>，由高配型号做减法，形成产品序列。</p><blockquote><p><strong>iGame &gt; CVN舰船 &gt; 战斧Plus &gt; 战斧 &gt; 网驰 &gt; 断剑</strong></p></blockquote><p>七彩虹一以贯之的骚操作，做了两个反向虚标：</p><ul><li>战斧Plus及以上型号，标称B650、实际按<strong>B650E配置</strong>，显卡、SSD均支持<strong>Gen5</strong></li><li>视频接口标称HDMI 1.4和DP 1.2，实测为满血的<strong>HDMI 2.1 FRL</strong>和<strong>DP 1.4</strong></li></ul><p>可谓授权费节省小能手，兔味儿很纯。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/9d11132b88f30967124126a40a863c32.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>白色系板卡，早期是有溢价的，譬如影驰名人堂、微星B450M迫击炮Titanium钛金版；如今成为内地板卡厂商的发力重点，七彩虹也不例外。</p><p>本来一黑一白的大板<strong>巡洋舰</strong>，标准版被下架了，只留下了白色涂装版。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/dac59d84679f54bb2c70d62bed5b61c9.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>灰白相间的颜色，边缘辅以橙色线条点缀，日系科幻插画的既视感，实物比官网图还好看</p><p>全系唯一的8层PCB，供电方案为：</p><ul><li>【PWM主控】台系立錡RT3678+RT3672，提供最高<strong>8+2+2</strong>相供电能力</li><li>【DrMOS】北美万代AOZ5016，<strong>55A</strong>的过流能力</li><li>【Core】核心供电16路，8+8并联为8相</li><li>【SOC】IOD供电2相直出</li><li>【Misc】周边及IO供电只用到单相，由供电背面的RT3672主控提供</li></ul><p><strong>55A</strong> x Mos系数<strong>0.4</strong> x <strong>16</strong>路 x 惩罚系数<strong>0.9</strong> = <strong>317A</strong></p><p>一体化IO面板、三硬盘位装甲，都是这个级别基操；无线网卡采用intel AX200，2.5G网卡基本全系配齐（丐中丐除外），省心。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/cc6eb2149962431eb57717c6427f1e79.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>中板的<strong>战列舰</strong>，同样没有提供黑色方案，核心供电降为12路6+6并联，238A的负载能力仍能玩转R9 7950x</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/19800b0fe7a5110f68f69561c9682c2c.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>与大板同模的<strong>弊病</strong>开始展现，供电挤占了太多顶部空间，主显卡插槽位置下沉。</p><p>主流显卡厚度两槽半，高端显卡更壮；第二显卡插槽形同虚设不打紧，紧凑机箱的底部风扇就上不了。</p><p>这板子没什么可说的，因为七彩虹做了一件很过分的事情：</p><p>以尘封的“镭风ColorFire”为名，推出了同板型的<strong>橘猫联名款</strong>，居然899元同价？</p><p>二次元税、妹系税一概不收，炮炮玛特的天都塌了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/d9614a5baaf187eb47084962a8b9134c.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><strong>镭风ColorFire</strong>系列面向女性市场，日漫皮肤设计上乘，难得的是并未因此供电简配，价格上扬。</p><p>我这中年大叔看了都把持不住，强咽口水多问一句：</p><p>橘宝主题的BIOS界面呢？橙色猫爪印刷的CMOS电池呢？</p><p>镭风B760都有的东西，咱不能厚此薄彼啊 <s>义父</s></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/dc116d6cce27e54bbb72b5e7f5b61c4e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/f34ca43e2439b9da8bffa3002d89dcc0.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>收~</p><p>战列舰和橘猫之外，还有三胞兄两表亲。</p><p>战斧Plus省却了唯一的硬盘装甲，较白色版省去了AX200无线网卡，但给了PCIe直立插槽，可以自行购买更好的AX210/高通685X。</p><p>官方命名为黑刃、冷钢，外观上少了很多情绪价值，胜在实用，供电、扩展一点没少。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/7a5af6f1433014c4967ebd1128c30889.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/55dc74670274bcb1b50598ab43ce6468.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>V15版本的新黑刃、新冷钢，AX200 wifi全系标配，但供电省去两路，变成5+5并联。</p><p>默频锐龙全系通吃，用到AM5版本末期也没问题；只是PBO打开功耗墙的话，zen6二十四核旗舰就吃不消了——虽然没人会拿七彩虹的中端板子这么玩。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/6388f868e033f5a464b51753eb2729ae.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>蓝宝石<strong>氮动Nitro</strong>，超白金系列的新名字，战列舰的同血弟兄。</p><p>主板本就是新业务，舍弃美誉度那么高的旧称，没活儿硬整，确实有点蛋动。</p><p>BIOS界面、供电排布、周边插座，很容易发现氮动的血脉传承；最终的扩展槽排布，氮动做了优化：</p><ul><li>主M.2硬盘槽下移，主显卡重回一槽（显卡大厂门清儿）</li><li>散热加强，硬盘位、芯片组联为一体，CPU供电线条优化（蓝宝基操）</li></ul><p>PCB、散热片呼应的格纹，将这张板子的<strong>格调提升到一线水准</strong>，蓝宝石的审美从未掉链子。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/05c8cb49d1fe96aef56c37a66d61c758.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>由此可见，柏能集团必然介入了研发，蓝宝石主板整个产品线很有特色，并非是简单的<strong>ODM</strong>贴牌，而是承启<strong>OEM</strong>。</p><p>B650M氮动补位了深色系需求，布局更佳、品质感更强，仅缩水了内存供电和无线网卡（螃蟹RTL8852），价格同样899元，堪称<strong>战列舰增强版</strong></p><h2>中端</h2><p>一声娇喘：“哎呦喂~”</p><p>直男东北爷们儿：“干哈？”</p><p>不是我整活儿，而是七彩虹太有梗。</p><p>硕家出了块电商网红板<strong>B650M-AYW哎哟喂</strong>，七彩虹就推出一块对位的“<strong>B650M-GHA干哈</strong>”，满嘴大碴子味</p><p>同为双槽内存，供电比你强、皮肤比你白、Wifi比你稳，价格还便宜一大截。</p><p>僭越了啊~兄弟</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/d98c00151bbe81ea004d77700bbe485e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>作为中低端主板的高配模具，<strong>B650M干哈</strong>供电采用芯源全家桶，开机以后的气味儿，都夹杂着一股子星巴克的味道，西雅图原产的那种，倍儿地道~<br />（你丫一定收钱了，一定收钱了~）</p><ul><li>【PWM主控】芯源<strong>MP2825</strong>，<strong>三轨输出</strong>，最高支持<strong>7+2+1</strong>相供电</li><li>【DrMOS】芯源<strong>MP87661</strong>，标称过流能力<strong>60A</strong></li><li>【Core】核心<strong>7</strong>相直出，提供至少<strong>139A</strong>的负载能力</li><li>【功耗墙】主板默认功耗墙限制<strong>150w</strong>，8核以上锐龙需PBO内解锁</li></ul><p>默频下的12核锐龙7900x，平均功耗不过195w，这板子也是能负担的。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/5b2a02d5fd2862550d0d96b32609c37a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><strong>干哈</strong>标价639元，不能扩展wifi的黑色版本<strong>战斧D</strong> 599元，<strong>网驰</strong>的网吧集采价更低。</p><p>因为散热片面积更小，战斧D/网驰 B站实测的负载上限在220w左右，不建议购买。</p><p>蓝宝石<strong>脉动</strong>，要贵上一截，标准版和wifi版来到699元/749元。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/f87a3996fd40c172f69c5e6079554496.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>我更推荐<strong>脉动标准版</strong>，保留了PCIe直立槽，自己买个M.2网卡、屏蔽卡盒更好，反正对于强迫症来说，蓝宝石全系标配的<strong>螃蟹RTL8852</strong>迟早要换。</p><p>与<strong>B650M干哈</strong>的区别：</p><ul><li>不带wifi的标准版，脉动带槽，战斧D不带</li><li>Wifi版，脉动缩成<strong>螃蟹RTL8852</strong>，干哈<strong>intel AX200</strong></li><li>脉动的主散热片极厚重，还多给了一个硬盘位马甲</li><li>脉动阉割了<strong>闪回</strong>功能，不能无U刷新BIOS</li><li>脉动的主硬盘位标称Gen5，而干哈是Gen4（虽然很大可能性可以实际跑在Gen5速率）</li></ul><p>借此，也可以给大家看看低端模具的特点：</p><ul><li>供电缩减后，核心供电甚至全部CPU供电，均可集中在CPU插槽左侧，侵占顶部较少；主散热片只要肯给足，散热效果比旗舰版更好</li><li>供电缩减的另一个好处，是显卡插槽不用下沉，甚至可以在一槽与CPU之间、插入一个M.2硬盘位</li><li>显卡插槽由<strong>SMT贴片</strong>，改为<strong>DIP插件</strong>，跟PCIe 5.0<strong>绝缘</strong></li></ul><p>PCIe 5.0的<strong>信号衰减</strong>尤甚于Gen4，对电气性能要求极高。</p><p>要稳定运行在Gen5速率，信号源、路径、接收端，三者中不能出现任何瓶颈。</p><p>路径的问题，靠走线缩短距离，靠PCB材料革新和高层数屏蔽，或者添加<strong>Retimer</strong>芯片、中途进行信号再调制</p><p>接收端，插槽物料的针脚和物理特性没什么变化，但必须采用SMT贴片式，而非传统的DIP针脚式。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/e2403807cb0729a20643b9bc6f42b31b.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>何谓SMT贴片呢？咱们普通人分辨超简单：</p><p>看<strong>主板背面有没有针脚露出</strong>。</p><p>SMT制造，焊点单侧、不透板，譬如</p><ul><li>显卡的GPU、显存，供电的主控、Mosfet、电感</li><li>超薄笔记本平台，连CPU、内存都是SMT焊接</li><li>闪存及主控芯片，譬如SSD硬盘和U盘，是典型的SMT生产线</li></ul><p>SMT显卡插槽不一定能上Gen5，但DIP传统显卡插槽必然不能支持。</p><p>譬如，你瞅瞅B650M-AYW、N650M-H/M.2、B650M DS3H、B650M Gaming Plus，TOP4代表型号的背面，看看插槽是什么工艺，会不会给你以下犯上的漏。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/af4d3d311f138815223f465d644cdffe.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>低端</h2><p>低端这三张板子没什么存在感，上市没几天的蓝宝石<strong>B650M-E</strong>，料想也不会做什么推广。</p><p>但他们很可能会出现在，你朋友、你同事、你亲戚，线上/线下买的DIY整机里。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/426348c0ae7bc73ae3f7a82c95885d76.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>供电是在<strong>干哈</strong>基础上缩的，7相变6相，其他的一点没少，这就是全系一张皮、高配做减法的益处。</p><p>蓝宝石终究是体面人，给了不小的散热片，配备了2.5G网卡、Wifi直立槽，仍然是阉割了<strong>闪回</strong>一键刷新。</p><p>战斧E连散热片都没有，Pro增强版多了个intel AX101，单发低速，稳定性没问题。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/1e7f24017abd2733fcc669a3ad29ea37.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>面对最高8核的游戏需求，6相直出的核心供电、60A的DrMOS，可以稳定负荷，保底都具备B650M-K的水平，无需怀疑。</p><p>这么低端的板子，官方支持Gen5硬盘，挺值的。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/624de29fcfb399ba9540f78dd5bb41ae.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>最后，看一下ITX小板，蓝宝石的B650I超白金。</p><p>讲真，承启的传统是做intel板，做大板，ITX上的经验不一定赶得上国内的微步、杰微。</p><p>B650I这张板子，一眼熟，完全和当年臭大街的B550I超白金同模，散热马甲都没带换的。</p><p>当然，B550I当年的槽点，后期已经解决不少，包括固件更新不及时、固件选项难用、显卡插槽不能降速至Gen3（以支持延长线）等等。</p><p>但有两个硬件问题，还是带到了这一代：<strong>24pin电源和Sata口</strong>、与内存插槽过近，<strong>马甲条兼容性不好</strong></p><p>像我测试过的阿斯加特海拉，铁定冲突的，得拆半边马甲。</p><span class="ss-linkCard">&nbsp;</span><p>&nbsp;</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/ef435d0c662c326b65a48dba206b7239.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>供电方面，延续上一代的供电规格，德国英飞凌全家桶，核心八相直出，70A的DrMOS。</p><p>只是为了符合AM5新标准，背面添加了一颗副PWM芯片和一相MOS降压电路，提供Misc周边供电，形成了8+1+1的三轨供电。</p><p><strong>70A</strong> x MOS系数<strong>1/3</strong> x <strong>8</strong>相 = <strong>184A</strong></p><p>R9 7950x PBO2超频后240w，扣除周边电路40w+的损耗，核心供电足以应付。</p><p>散热马甲取消了<strong>热管</strong>链接，这个不是坏事哈：</p><p>AM5的睿频方式跟上代不同，喜欢顶着95℃温度墙跑性能，主散热片马甲温度很高，用热管联通烤PCH南桥，容易出问题。</p><p>其他配置都很常规，双M.2 + 2.5G Lan，HDMI和DP也大概率反向虚标，仅螃蟹RTL8852有槽点</p><p>只是1599元这个零售价，不予置评。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/dbe587239c282b2c483b8a987455db9d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>品牌</h2><p>打开七彩虹官网，主板页面信息完善、分类合理，已有大厂气象。</p><p>售后，国内品牌没怂过，从来都是七彩虹的加分项；三年个人送修，高端四年质保、一年换新，无需注册。</p><p>24年这一次BIOS进化，更是让七彩虹坐实了二线板厂的地位。</p><p>当然，固件细节和可玩性、内存性能调教，距离映泰、华擎还有相当的距离。</p><p>毕竟BIOS系统的研发，是一项费时费力的技术活，不可能一蹴而就。既需要大批有经验的工程师，也需要足够体量的售后问题再反馈，代工贴牌货实现不了这个信息闭环。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/99e3fc9fe386db8a12249735710f5ec6.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>蓝宝石、七彩虹这对高低配，以合理价位，给普通用户提供了老台系无法赋予的情绪价值。</p><p>难怪在我的AM5天梯榜评论区，晒单最多的居然是B650M战列舰，而非遇事不决迫击炮。</p><p>AM5平台，CPU、内存超频没什么可玩性，解决好内存兼容、固件升级、不烧CPU，已经能够满足90%的用户需求了，以目前的评测体验，七彩虹拿个70分绰绰有余。</p><p>实用主义、只捡二手的博主，并非七彩虹主板的目标客户；但我乐见其成长，更希望ta植根国内的同时，拓渠欧洲、拉美、东南亚。</p><p>产品质量早就合格，用户体验已然提升，价格足够诚意，七彩虹，你的征途是星辰大海~</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/211aa979737892567378cbd4f74805a0.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>推荐型号：</p><ul><li>CVN B650 巡洋舰 1299元</li><li>镭风 B650M 橘影橙 899元</li><li>CVN B650M 战列舰 899元</li><li>蓝宝石 B650M 氮动 899元</li><li>蓝宝石 B650M 脉动 标准版 699元（自己加wifi）</li><li>蓝宝石 B650M-E 549元（官旗返卷后实际）</li></ul><p><i>（以上仅为官方零售价，并非<strong>建议入手价</strong>，请自行结合套装、节促入手，会有折扣的</i><br /><i>如蓝宝石B650M脉动双版本套装价格，均能低于500元）</i></p><p>AM5主板天梯榜全表，已经共享至公共文档，支持筛选、排序，点击即可跳转：</p><p>【腾讯文档】AM5主板性能天梯榜</p><span class="ss-linkCard">&nbsp;</span><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/3d1d927298b1f8219819fe8b0611baf6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/0a81b44ae7b6196a0d73d842a2005580.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/99121</id>
            <title>相机进化论</title>
            <link>https://sspai.com/post/99121</link>
            <guid isPermaLink="false">https://sspai.com/post/99121</guid>
            <pubDate></pubDate>
            <updated>Mon, 12 May 2025 07:43:32 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 相机进化史,摄影技术,最优解,标准化

总结: 
1. 文章探讨了相机外观趋同化的原因，指出这是追求"最优解"的结果。
2. 详细介绍了从银版摄影法到现代数码相机的完整发展历程。
3. 早期相机形态多样，随着摄影工具属性增强，逐渐形成标准化设计。
4. 柯达在胶卷标准化过程中发挥了关键作用，推动了摄影普及。
5. 徕卡制定了135相机的行业标准，影响了整个相机发展史。
6. 单反相机因解决取景问题而崛起，后被数码技术取代。
7. 数码时代彻底改变了摄影技术，无反相机成为新趋势。
8. 文章回顾了相机百年发展中的关键技术突破和品牌兴衰。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;<br />文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><p><strong>编者按：</strong>为了更明白地介绍相机历史，本文大量使用网络图片。图片版权归原始拍摄者所有，本文仅作合理引用。</p><hr /><p>随着富士爆火，许多人发出了灵魂拷问：为啥尼康佳能索尼松下这些厂家不能出一款好看全画幅旁轴相机来和富士竞争？为什么相机现在的外观都这么千篇一律？</p><p>要回答这个问题很简单，那就是大家都被「最优解」这个概念给束缚住了。</p><p>遥想十多年前，《英雄联盟》刚上线的时候，彼时大家都是新手，每场比赛对阵双方的阵容都不一样。不得不说，那时候的《英雄联盟》才是最欢乐的时候。后来为什么连匹配娱乐局都必须遵照上中下辅野的组合来选人？因为有了天梯有了排位，大家玩游戏的初衷从娱乐变成了想赢，于是乎衍生出来一组效率最高的组合也是必然，也就是最优解。</p><p>从第一台相机诞生到现在的这一百多年里，相机的工具属性越来越强。作为可以赚钱的工具，自然就要追求效率，就形成了最优解，最后一步一步演变成现在这个雷同样子也不奇怪了。</p><p>这篇文章，我们就来讲讲相机的进化史。</p><h2>银版摄影法和抽屉相机</h2><p>从摄影术发明以来，相机一直都是作为拍摄底片的配套装备来存在的，随着底片技术的发展进步而进步。倘若没有底片，那相机就只能作为画画的暗箱来用。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/a4cff1842884d8ba04458e0c673c0692.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>暗箱的样子如上图，记住这个造型，这就是单反相机的原型</figcaption></figure><p>人们对于摄影底片的研究要追溯到 19 世纪初。在当时一个名叫乔瑟夫·尼舍弗朗·尼埃普斯的法国人用尽毕生所学，研究了 30 年，终于在 1826 年研究成功，拍出了人类历史上第一张照片《窗外》）。后世我们管这种方法叫：「日光蚀刻法」。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/eedd91444b9a4d3d842c28e1cb413189.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>上图这个照片是后世专家经过处理后的拷贝品，而下图才是原片，几乎看不到什么细节。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/900e62b0ecdd3ba14bda593593af989e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>但无论怎样，这都是人类摄影史上的里程碑。</p><p>不过，尼埃普斯的摄影方法并没有作为摄影术的起源，主要原因是尼埃普斯至死都没有公开其原理，而他也在七年后去世了，只有一张底片和一个复制品留存。</p><p>几年后，尼埃普斯的合作伙伴，另一个法国人路易·雅克·曼德·达盖尔延续了关于摄影术的研究，并且在 1837 年拍出了世界上第一静物照片，使用的方法被称为「达盖尔银版法」。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/293d7056baa22a72be1e3ce4c241cb0c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>1838 年，达盖尔把这个连同尼埃普斯的日光蚀刻法的专利一同卖给了法国政府，第二年法国向全世界公布了这项摄影术，认定达盖尔银版法作为摄影术的起源。</p><p>自此，摄影就跟达盖尔的名字紧密的联系起来。</p><p>英国人塔尔伯特在 1835 年就使用这种方法拍出了世界第一张负片。内容嘛，也是自家的窗外，这种方法被叫做卡罗法。不过直到 1841 年，他的专利才获得认可，而他也失去了冠名摄影术创始人的机会。</p><p>无论你认同那种方法是摄影的起源，都不影响你对相机的理解，因为他们所用的相机结构都是一样的，就是下图 这种抽屉式相机。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/a1805f2963581e89d464f575d6f12dc7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/8d49562f826beff9dff1fc7ffe78a983.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>上图尼埃普斯的相机，下图达盖尔的相机</figcaption></figure><p>这些相机的光学原理是木质机身前面装有铜质的光学镜头，背板上有毛玻璃，学过初中物理的朋友都知道，透镜成像要得到清晰的实像，就需要调整毛玻璃和镜头的距离，也就是调整焦距，为了方便调整焦距，于是就采用了抽屉的设计。</p><p>由于当时达盖尔法的专利被法国政府买走，而法国政府又大力的推广摄影技术，于是引来许多人学习，达盖尔法相机的结构又不是很复杂，市面上仿制品很多，很快就超过了「正版」的销量。</p><p>没有了专利的限制，人们便开始「魔改」起了这种抽屉相机，其中最有用的改装莫过于在镜头上加装可以微调镜头位置的齿轮，这也为相机未来的进化提供了新的思路。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/43289a724e4635491726dbb001f1c54c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>湿版摄影和皮腔相机</h2><p>达盖尔的银版摄影虽然很好，但是金属板价格昂贵，不适合大范围推广，而卡罗法虽然可以在纸上成像，但是效果太差。于是大家把目光投向了玻璃。</p><p>法国人尼埃普斯·圣·维克多，也就是摄影发明人尼埃普斯的弟弟研究出来了用玻璃板+蛋清+碘化银的方式进行拍摄的方法。1847 年，申请了蛋清玻璃法摄影的专利。虽然效果不错，但是蛋清对化学药品溶解度有限，所以感光度不高，很快就被新的方法取代了。</p><p>1850 年，英国人阿切尔使用火棉胶取代了蛋清拍摄成功，次年阿切尔公开了他的拍摄方法 ，并在 1852 年出版了《火棉胶摄影法》一书。这种摄影法已经推出就广受好评，大幅提高了摄影的清晰度和感光度，不过阿切尔和尼埃普斯一样，一生贫困潦倒，于 1857 年去世。</p><p>火棉胶摄影法对于现在的人来说比较陌生，由于初级的火棉胶摄影需要在玻璃上涂满药水后马上拍照，否则涂层干了就无法拍摄，所以又称之为「湿版火棉胶摄影法」。我们简称为湿版摄影。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/9ae207cb4754dc90b1c5a1146544cb34.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>杰奎琳·罗伯茨的湿版摄影</figcaption></figure><p>目前市面上拍摄一张湿版摄影的照片至少要花费上千元，而配置一张湿版的底片成本就要一二百，俨然是一种小众文艺逼格的象征。</p><p>由于湿版摄影拍摄之后需要马上到暗访进行冲洗，室内棚拍还好，如果是室外拍摄，就得带一个简易暗房，还要带药水等物品，这无疑增加了摄影师的负担。</p><p>于是这时候人们就开始琢磨如何减少相机的体积和重量，于是可折叠的皮腔相机就顺利成章的取代了抽屉相机。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/1842efa222d051829a2002ede2103e07.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/128330e6dcb3d190eb7e36a978420c3e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>干版摄影与快门光圈</h2><p>在湿版火胶棉摄影术推出不久，人们就研究出了干版火胶棉。脱离了暗房的束缚后摄影师更加愿意在户外进行拍摄，于是皮腔相机也开始朝着越来越便携的方向发展，于是折叠型的皮腔相机出现了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/9099aca1fa0f4a7ee28bb413f1bede40.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>法国生产的 AUZOUX 大型木制折叠相机</figcaption></figure><p>干板火棉胶相比于湿版，最大的问题是感光度不足，于是人们开始对这种方法进行改进，比如说加入鞣酸，酒精，溴化银，柠檬酸，大苏打等等，这些虽然可以在一定程度上提高感光度，但是效果都不是很明显，要想拍出曝光正常的照片都需要至少几十秒的曝光时间，这显然无法拍摄运动得到物体。</p><p>既然火棉胶不行，那么就换个材料就好了，1871 年，英国医生玛多克斯率先采用明胶取代了火棉胶，使得底片的感光度大大提升，1878 年，英国的贝耐特又改进了这一技术，进而为底片的大规模工业化生产奠定了基础。</p><p>至此，底片制作和摄影彻底分开，摄影师可以在商店购买成品的底版，无需自制，这也使得摄影的门槛大大降低，也让越来越多的人加入了进来。</p><p>虽然感光材料变化很大，但是这时候的底版还是玻璃板，所以相机还基本延续了之前的设计，随着感光度的提升，曝光时间减少，过去用镜头盖手动控制曝光时间的方式显然已经无法满足现在摄影的要求，于是快门出现了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/bdf37da7ac9946bf273265cd696c3afb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>用手翻动的镜头盖快门</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/9f591af7fe4eb2198c881ab2362eb359.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>翻版快门</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/e090b0438e90d565ac2a22a711932118.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>枣核形快门</figcaption></figure><p>这些快门都是安装在镜头前面的，我们称之为镜前快门，由于镜前快门对镜头尺寸要求比较高，不同的镜头无法通用，于是就诞生了镜间快门。</p><p>老式的镜间快门的设计非常暴力，在镜头筒中锯开一个缝把快门塞进去，整体的造型和断头台十分相似，路易十六表示很熟悉这个设计。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/9987e2cc1eb4cb9ca1baa7d08956680f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>加装了烟筒式镜间快门的英国生产的 Sterescopic 木制折叠相机</figcaption></figure><p>&nbsp;</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/0e55a047092964f60c04cee78c133bc1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>RUCKERT 牌木制皮腔折叠相机，加装了同样的 RUCKERT 牌号的方形镜间快门</figcaption></figure><p>随着镜间快门的不断发展，快门尺寸越来越小，最后和镜头合二为一，形成我们现在看到的镜间快门，哈苏的镜头，富士的 X100 系列的镜头均是镜间快门。</p><p>镜前快门的发展和镜前快门十分类似，最开始也是外置在镜头前方，后来逐渐演变到了镜头内部，最后和镜间快门融合在了一起。</p><p>有前就有后，与镜前快门相对应的就是镜后快门，多采用这种卷帘式的设计，生产工艺简单，产量达，便宜，不过棉布制作的幕帘耐用性不好，所以现在能见到的好用的不多。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/8a6ea578e7827586f38bd774ca10754d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Photo-Hall 牌木制折叠相机加装了木制镜后快门</figcaption></figure><p>相比于镜前快门和镜间快门，镜后快门因为耐用性不行没有被广泛应用，不过卷帘的快门设计还是给了设计师很多启发，我们现在的相机多采用的是纵走式卷帘快门，灵感就是来源于此。不过那都是后话了。</p><h2>快速换片与反光板</h2><p>生物的进化都是朝着多个方向，相机进化也是如此。我们在介绍抽屉相机的时候见过后期的抽屉相机的镜头被加装了一个齿轮可以用来微调焦距，而皮腔相机并没有使用这个方法，只是单纯的调整毛玻璃的距离。</p><p>那么毛玻璃位置固定，只调整镜头位置的相机就是我们接下来要讲的箱式相机。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/d3013a86765268872eae968daa1de34f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>荷兰制造的 GUY DE CORAL 木制箱式相机</figcaption></figure><p>相比于折叠的皮腔相机，这种相机又重又笨，在当时并不是一个很好的选择，不过在干式摄影板普及以后，脱离了暗房的束缚，相机的设计也开始往效率更高的方向发展。而当下影响相机拍摄效率的重要因素就是，换片。</p><p>我们简单来讲述一下木质折叠皮腔相机的拍摄过程：</p><ul><li>第一步，组装相机；</li><li>第二步，测光，并调整光圈快门；</li><li>第三步，调整齿轮对焦，这时需要用上放大镜来确认焦点;</li><li>第四步，拆掉毛玻璃，安装上底片；</li><li>第五步，摘掉底片遮光板，拍摄；</li><li>第六步，装好遮光板，拿下底片，装回毛玻璃，重复 2 至 5 步的操作。</li></ul><p>这些步骤中，拆掉毛玻璃装上底片是非常耗费时间的，倘若在这个过程中被摄物体有位移，那就需要换回毛玻璃重新对焦。</p><p>这个过程，和火绳枪的操作有过之而无不及。</p><p>而使用上图的箱式相机，就可以将底片预先竖装在相机内部，每拍摄一张后，就将曝光后的底片依次推倒。全部拍摄完毕之后，再进入暗房取出冲洗。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/112b8fec8c2c387a372e3e582222165c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>当然，还有这种抽屉式推拉法换片的相机。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/1859bb407ca61fa0bde281cf78348ec0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>抽屉式换片的西格黑斯特（Sigriste）相机</figcaption></figure><p>这样看来，快速换片的问题被暂时解决了，接下来就要开始着手解决对焦的问题了。</p><p>前面我们讲到，摄影术是受到暗箱绘画的启发进而发明的，那么这一次绘画暗箱又一次启发了相机的进化。底版放进相机中直接对着镜头等着被曝光，这时候我们是无法知道镜头里面拍的是什么的，但是如果在镜头上面再来一个镜头呢？再来一个反光板，让摄影师可以从上面开口观看，这不就是双反相机嘛。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/dcba7bf658b7bdcdd1457496ec866cd2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Kinegraphe 木制反光式取景相机</figcaption></figure><p>众所周知，双反相机的最大痛点就是无法横拍，以至于现在的双反相机都是设计成 6×6 的方形画幅。而在一百多年前，为了解决横拍的问题，他们发明了三反相机。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/1cd535d9b662b416dcb20dad8c979f75.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>安装了三个镜头的 Kinegraphe 木制反光式取景相机</figcaption></figure><p>双反和三反的出现，在一定程度上解决了相机拍摄的痛点，但人们对摄影技术的精进是永无止境的。多镜头还是太繁琐了，如果能做到一个镜头可以兼顾对焦取景以及拍摄就好了，单反相机就在这个背景下发展了起来。</p><p>首款单反相机诞生于 1884 年，由美国人卡滨·雷·史密斯（Calvin Rae Smith）制造，外形上和绘画用的暗箱十分相似，反光板 除了用于取景以外还兼顾快门使用。</p><p>1897 年，由德国人黑泽基尔（Dr. Hesekiel）发明的 Spiegel Reflex，具备一个狭缝速度可调的焦平面快门。在拍摄时，使用者需要现在相机内部设置快门速度，然后在一张照片拍摄完成后，再手动将快门幕帘回复到关闭状态，整个拍摄步骤相当繁琐。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/d9f015432092af9a649b6164e8ba80eb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Spiegel Reflex 单反相机</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/ba0557a038439897e3f423eb4b7799d7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>RUBY 单反相机</figcaption></figure><p>此时的单反相机还有一个问题，就是无法在外部调整快门速度，直到 1909 年，英国公司亚当斯（Adams &amp; Co.）生产的焦平面快门终于实现了前后幕帘联动、后帘自动闭合的功能。此时的曝光时间已经可以在相机外部进行控制，并且最高快门速度也达到了 1/1000 秒。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/8370da2a087b6f8488937d567d23fb9a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>亚当斯公司生产的 Minex 系列单反相机</figcaption></figure><p>这种设计也给了其他公司启发，后来的 120 单反相机也多采用这种设计。</p><h2>胶卷与柯达相机</h2><p>虽然干版摄影大获成功，但是这种将感光材料涂抹在玻璃上的方式显然还是略显笨重。我们上文提到 1835 年英国人塔尔伯特研究出了拍在纸上的卡罗法摄影，但是效果不好，没有得到认可和推广。但是人们并没有放弃将照片拍在纸上的研究，于是纸质的干式摄影板就出现了。</p><p>法国人勒格雷进一步的改进了纸质的摄影版，使得纸板更薄，进而可以卷曲，于是摄影版变成了纸质胶卷。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/9d1f95931743225b88c30f31cdc08b24.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>采用纸质胶卷进行拍摄的相机</figcaption></figure><p>发明这个东西的人叫伊士曼，1888 年，他改进了片基的材质，发明了使用赛璐璐片基新型伊斯曼胶卷，至此，现代的胶卷诞生了。</p><p>胶卷的出现立刻淘汰掉了笨重的干板摄影，而伊士曼公司也趁热打铁，推出了适用于胶卷拍摄的相机「The Kodak」，随即伊士曼公司改名为伊士曼柯达公司，简称柯达。而柯达这个名字也随着胶卷一起被全世界所熟知。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/4ab989a31b5c5d062d8b694bcfbd6d9d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>第一台柯达相机</figcaption></figure><p>当时这种机器有个弊端，就是用户拍完需要把机器一起寄回厂家，厂家冲洗之后在重新上卷寄回来，要知道一百多年前，返厂的时间是月计的，要是走得远，可能半年都回不来。</p><p>针对于这种情况，柯达又推出了可以自行更换胶卷的 pocket 相机，同时又推出了带背纸的 102 胶卷，让更换胶卷的过程不必局限在暗室。这个 102 胶卷就是我们现在用的 120 胶卷的前身。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/dfaf731992346b372349d2a238139824.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>柯达 pocket 相机</figcaption></figure><p>在 19 世纪末，摄影处于「软」和「硬」的过度时期，一方面胶卷的出现让摄影变得，另一方面人们又贪图玻璃底版的画质。于是柯达推出一款可以二者兼顾的相机——柯达四号。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/62027aea477229fd2a26673a26be0715.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>柯达四号木质折叠相机</figcaption></figure><p>随着胶卷渐渐的流行，玻璃版摄影渐渐不再被使用，于是柯达在 20 世纪初推出了柯达 3A 相机，这台相机也可以算做现代相机的原型机之一了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/08b968d188f345027d30603541055394.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>柯达曾先后生产过 101、103、105、117、116、118、112、120、122、124、125、126、127、616、620、828、135 等多种规格的胶卷，虽然柯达可以为每个胶卷都做一台匹配的相机，但是这么多胶卷型号就好比早些年手机充电器的接口一样，不利于整个产业的发展，于是经过柯达和众多相机厂家的协商，最后整合成了我们现在常用的135和120胶卷。</p><p>至此，摄影的成像的技术经过半个世纪的探索和发展，终于找到了一个最优解。时至今日，我们买到的胶卷虽然在材料和成分上已经和一个世纪之前的大不相同，但是整体的研发思路并没有发生变化，使得我们仍然可以将他们用在近百岁的老相机上。</p><h2>胶片标准化，还有那个名字</h2><p>上面部分提到柯达生产了几十种不同规格的胶卷来适应不同厂家制造出的相机，主打一个雨露均沾，但在效率上却造成了极大的浪费。</p><p>在摄影术被发明的同一时期，世界上还诞生了另一项伟大的发明，那就是汽车。</p><p>虽然美国人不是汽车的发明者，但是美国人把汽车推广到了全世界，靠的不仅仅是强大的工业实力，还有一个最重要的点，就是标准化。</p><p>可口可乐，美式快餐，通用汽车，都是靠着标准化起家，然后风靡全世界的典范，而摄影也不例外。</p><p>不过率先推进胶卷标准化的不是摄影，而是电影。</p><p>随着柔性摄影材料的发明和推广，胶片的拍摄越来越容易，人们自然而然的就会出现拍摄动态画面的想法，于是电影就出现了。早期的电影虽然只有 15 帧，但一部 5 分钟的短片就需要 4500 张底片，如果算上 NG，那胶片的用量就更大。</p><p>哪怕是以现在的眼光来看，拍摄这么大量的胶片的成本都不是一个小数目，更何况在一百多年前。制片人的钱也不是大风刮来的，自然就要想办法节流。</p><p>导演想要画面效果，制片人想要省钱，在不断反复地拉扯之后，最后达成共识：采用 35mm 胶片纵向过片作为电影拍摄的主流标准。</p><p>随着电影胶卷标准化的制定，柯达的工厂也开始开足马力生产 35mm 胶卷，自然就怠慢了其它型号胶卷的生产，而使用其它型号胶卷的相机要么改结构去适应，要么就自生自灭，毕竟这是一个纯粹的卖方市场。</p><p>电影卷和普通胶卷只是尺寸不同，本质上是一个东西，既然 35mm 电影卷这么多，那我们就造一个使用 35mm 电影卷拍摄的相机就好了嘛。于是德国人奥斯卡·巴纳克在 1913 年发明了 Ur-Leica 相机，也是世界上第一台使用 35mm 电影卷进行拍摄的相机。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/33f8cee0f950f7f26cd0bf397eceaa6e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Ur-Leica 相机</figcaption></figure><p>这台相机小巧玲珑，使用方便，但因为一战的爆发没能大批量生产。战后巴纳克说服他老板继续让他研发这种相机，于是在 1923 年，Leica I 型相机发布，大获成功。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/3c6d590a79fe6f1ac460fc467d840006.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Leica I 型相机</figcaption></figure><p>徕卡之所以可以代表 135 相机，并不仅仅是发明了使用 135 胶片发明的相机，而是制定了整套关于 135 相机的行业规则，也就是我们上面提到的标准化。</p><p>现在的 135 胶卷一卷的长度，传闻就是巴纳克在暗房里分装电影卷时，以他的臂展长度（1.6 到 1.7米）进行裁剪的，而拍摄 36 张是因为 36 可以被 2、3、4、6 整除，方便进一步裁剪。试想一下如果巴纳克身高两米，可能我们现在的 135 胶卷就是 48 张了，如果巴纳克再矮一些，135 或许就成了 24 张，但是终究只有这几个选择，绝不可能是 29 张或者 37 张这样的数字。</p><p>所以说历史虽然有偶然性，但是也是有必然性的。</p><p>而徕卡相机出了定义了胶卷的长度之外还定义了包括冲洗在内的一系列的规则，到了 1934 年，柯达根据徕卡的标准推出了编号为 135 胶卷，算是得到了「官方认证」，走上了标准化生产的道路。</p><p>135 相机由于流行太过于广泛，以至于 35mm 相机镜头的视野范围已经成为现在的行业标准，无论 APS-C、M4/3、中画幅，还是手机，都要讲一个「等效」，也就是等效的 35mm 相机镜头的视野范围。</p><p>135 相机的标准化让相机和配件在流水线上批量生产，提升品质的同时也能大大降低成本，不过对于当时世界上的大部分国家来说，相机仍然是遥不可及的奢侈品。</p><p>笔者找到了一张徕卡在民国时期天津报纸上打的广告，看图片造型应该是徕卡 I 型相机。在当时的售价为 250 到 480 元现大洋。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/722a3920d1c47a1f900a21ecd4429c65.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>按照老舍的《骆驼祥子》里面记载，一块大洋够祥子他们家全家下顿馆子而且可以车接车送，折算购买力约合现在的 300 到 500 元。而普通人一个月的收入也就只有 5 块大大洋。可见即便是工业化生产的徕卡，在当时也只是超级有钱人才能玩的起的。</p><p>二战期间徕卡制造了许多徕卡 III 型的相机，但大多都为军方所用，而战后的徕卡 III 型相机又多为拆机练手而造，大多不堪用。直到 1954 年徕卡 M3 的推出，一切才有了新变化。</p><p>拥有联动测距功能的 M3 可谓是一个划时代的产品，之后的几十年，徕卡的相机都是基于这个结构演变和改进而来，所以说徕卡的正统相机都是以「M」加数字的形式命名。至于其它的产品线一律可以看作是贴牌代工的产物。</p><p>与此同时，亚欧大陆另一边的小岛上，一个「小厂」也在摸着徕卡过河，有样学样的做起了旁轴相机，想着跟在徕卡的后面喝点汤，这个厂家叫尼康。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/4211deefd527066ee77066497177928b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>单反的崛起和相机的普及</h2><p>摄影术经过了一百多年的发展，在 135 胶卷出现以后，在「拍得到」这个问题上已经有了非常好的解决方案，接下来要解决的就是如何拍的好了。</p><p>由于胶卷价格昂贵，冲洗卷还有滞后性，所以在胶片相机时代对于拍摄前期的技术要求是非常高的，对于一张好照片的评价也无非就三点，构图工整，对焦清楚，曝光正确。这也是相机使用中的三个痛点。</p><p>随着徕卡 M3 的推出，让尼康认识到跟着徕卡后面搞机械机构没发展，自己做的旁轴再好也比不过徕卡。那索性就换个赛道，于是 1959 年，尼康的第一台单反相机，尼康大 F 出现了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/074f0970a37c4452368c03101b0ea8df.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>单反的结构相比于旁轴，以牺牲体积的代价换来了所见即所得的「零视差」优势，而大 F 采用了可更换取景器的设计，后期又出现了可以测光的取景器，省去了携带测光表的麻烦。一下子解决了构图和测光两个痛点。所以大 F 一经发布，就风靡世界，几乎世界上所有的头部摄影师和新闻机构都采用了大 F 作为摄影器材。</p><p>而后，尼康趁热打铁，推出了多台尼康 F 的廉价版本，让越来越多的人民群众也能加入其中，体验摄影的乐趣。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/ea1f5a8c3ecf2c03e886c07e413feab8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>尼康大 F 的成功，彻底改变了相机市场的格局，单反取代旁轴成为了摄影的第一生产力，虽然徕卡后来也推出了诸如 M6 这种经典机型，但也仅仅作为情怀和收藏品存在，再后来徕卡便彻底成为了轻奢的时尚单品。</p><p>值得一提的是，徕卡 M3 在刚发布的时候售价为 240 美元，普通美国人在 1950 年代收入的中位数在 2500 美元左右。也就说一年收入能买 10 台徕卡 M3。而尼康大 F 的售价为 330 美元左右，比徕卡 M3 还要贵。 而如今最顶级的尼康相机 Z9 要比徕卡 M11-P 便宜很多。</p><h2>更先进的相机诞生</h2><p>在尼康单反成功以后，越来越多的厂家加入了单反相机的研发当中，一时间相机行业百花齐放，欣欣向荣，尼康也凭借着先入局的优势，在上个世纪九十年代之前坐稳了头把交椅。而尼康最大的技术优势就在于测光，尼康在测光领域可谓是充分的发挥了所谓的「工匠精神」，在这个单一领域几乎做到了极致。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/e8dc790d875beac9de38ce35338a4cd0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>尼康相机测光的「巅峰」之作，尼康 F3</figcaption></figure><p>由于当时胶片的价格依旧很贵，想要拍摄出一张能看的照片，除了测光要准之外还需要对焦准。尼康过分的专注于测光，导致在自动对焦的领域进展缓慢，这就给了其它品牌弯道超车的机会。</p><p>1985 年，美能达推出了世界上第一台自动对焦相机——美能达 a7000，宣告了相机从此进入全自动的时代。随后的 1987 年，佳能壮士断腕，放弃 FD 卡口，改用更为先进的 EF 卡口，为佳能后 20 年的辉煌埋下了伏笔。而尼康因为船大难掉头，所以只能捏着鼻子继续使用 F 卡口，以至于接下来的二十年被佳能逐渐追赶并压制。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/68d2920c0d8d6ed38e2337e9c691fa75.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>美能达 a7000</figcaption></figure><p>相比于 135 相机的欣欣向荣，120 相机以及大画幅相机因为普及度不行，一直处于不温不火混日子的状态。相较同时代的产品，120 画幅相机的技术要落后好几代。但 120 相机和镜头因为其优秀的光学素质和「底大一级压死人」的画质优势，仍然有着非常多的拥趸，但显然已经不能代表这个时代的先进生产力了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/2a933d1f3ea3e0cbfcbc513bad175e05.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>中画幅相机也随时代潮流做了小型化，但体积和性能都没有更多优势</figcaption></figure><p>时间来到 1996 年，由富士、柯达、美能达、尼康、佳能五大公司联合开发的APS（Advance Photo System）胶片系统问世。APS 开发商在原 135 规格的基础上进行了彻底改进，包括相机、感光材料、冲印设备以及相关的配套产品上都全面创新，大幅度缩小了胶片尺寸，使用了新的智能暗盒设计，融入了当代的数字技术。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/e12927b047361258050b59239b3ec1a7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>可以说，APS 系统的出现，有效地解决了 135 系统的痛点。它可以记录胶片的拍摄数据和拍摄进度，甚至可以中途拿出来换一卷继续拍。不过，随着数码时代的来临，这些看似先进的功能，在数码相机面前都变得不值一提了。</p><h2>数码时代的来临</h2><p>话分两头，就在尼康相机大杀四方的 70 年代，作为胶片巨头的柯达就开始研究新型的感光技术了，即用模拟信号转换成数字信号进行显示，也就是我门现在说的数码相机。</p><p>1975 年，柯达发明了一台 100×100 像素的黑白相机的原型机，这台像机床一样的相机是所有数码相机的先祖。</p><p>到了 1981 年，索尼生产的 Mavica 被认定为是第一台真正意义上的数码相机，但也有说它并不是数码相机，因为 CCD 产生的是模拟图像存储在了磁盘中，想要用 PC 处理，还得进行一次数模转换。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/898d06f27cb8c31d478d0778841a4b83.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>SONY Mavica</figcaption></figure><p>1989 年，富士推出了像刮胡刀一样的产品 DS-1P，使用闪存作为存储介质，开创了这一领域的先河，之后的几十年，数码相机都使用这种模式。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/bf8014876c862d6c9310c726696359fa.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>DS-1P</figcaption></figure><p>第一台比较成熟的小型化数码相机要数 1994 年柯达推出的 DC40。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/176342793341a41beb989163a6d3b8df.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>DC40，图片来自闲鱼</figcaption></figure><p>同一年，Apple 公司也推出了第一款数码相机 QuickTake 100。不过在乔布斯上台以后，把这个产品给砍了。Apple 公司在专业影像行业一直有很强的技术，可惜这么多年来一直没有推出专业的相机。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/2979319319f25608e316850fe175ce42.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>图片来自闲鱼</figcaption></figure><p>试想一下，如果一台相机拥有了 A17 处理器，它的性能应该是何等强大，而现在这种情况没有发生，都赖乔布斯 :)</p><p>1995 年，第一台拥有 LCD 屏幕取景的卡西欧 QV-10 诞生，宣告着光学取景已经走向没落，而后的小型数码相机都开始使用 LCD 屏幕取景。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/95cb35b7bc111cb27ca39270968a0eb2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>图片来自闲鱼</figcaption></figure><p>而后理光推出的 RDC1 是世界上第一台可以拍摄视频的数码相机。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/12/f38bfbb3cf896cf9dcafbee751ebb566.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>到了 1998 年，佳能推出旗下第一台专业数码单反 D2000，第二年尼康也推出了 D1，宣告着数码单反已经成为了专业相机的主流，虽然在当时胶片单反还没有停产，但是大家都知道，未来是属于数码的。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/05/12/ea5feb0f1c33603e46971bc43126b0dd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/05/12/56f5f84a9da5b181640518f5415b21c6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>后来的故事</h2><p>进入 21 世纪之后，数码顺利的取代了胶片相机成为专业领域的新贵，尼康和佳能在发布了各自最后一款旗舰胶片机自后，也宣布停止胶片相机的研发。</p><p>再到后来，移动网络从 2G 变到了 5G，随着网速的不断提升，人们不仅仅局限于满足只观看静态画面，于是视频流媒体平台开始兴起，刮起了一阵视频热。单反相机引以为傲的反光板技术被更加直观的屏幕取景所代替，没有反光板的专业相机开始崭露头角，并逐渐的取代了单反相机的生态位。到了 2018 年，尼康和佳能先后推出自己的新相机和新卡口，适马松下徕卡组成 L 卡口联盟，宣告了单反相机结构的彻底终结。</p><p>其实无反相机并不是一个新兴产物，广义来讲，从数码相机诞生之初，无反相机就已经出现了，但是由于 LCD 取景技术还不成熟，所以专业数码相做成单反的样子其实是不得已而为之。从某种意义上来讲，现在的无反相机才算是真正意义上的数码相机。</p><p>大江东去，浪淘尽，千古风流人物。在回顾相机发展的漫长一个多世纪历程中，我们不禁为那些曾经闪耀的经典相机和值得永远铭记的品牌而感慨万分。它们在各自所处的时代里，都创造了令人瞩目的传奇故事，见证了摄影技术的飞速进步和人类对美好瞬间的不懈追求。这些相机和品牌，如同一颗颗璀璨的明星，照亮了摄影艺术的天空，也为我们留下了无数珍贵的回忆。</p><p>在这个充满变革的时代，这些品牌也经历了不同的命运。有些品牌因为种种原因而破产消失，他们的辉煌已成为过去；有些品牌则被其它更强大的企业兼并收购，成为更大体系中的一员；还有一些品牌则成功地实现了华丽转型，以全新的面貌继续在市场中立足；当然，也有一部分人始终保持着稳定的发展，一直存续到现在，见证了这个行业的兴衰变迁。</p><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/98958</id>
            <title>厌倦了追逐"令人震撼的新模型"，给自己做了个AI模型比价器</title>
            <link>https://sspai.com/post/98958</link>
            <guid isPermaLink="false">https://sspai.com/post/98958</guid>
            <pubDate></pubDate>
            <updated>Mon, 12 May 2025 02:14:54 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: AI模型选型,Cursor工具,独立开发,技术栈  
<br>  
<br>  
总结: 本文探讨了在AI技术快速迭代背景下如何通过工具解决模型选型难题。作者分享了使用Cursor工具开发AI模型对比平台的经验，包括遇到的目录设置、计划调整、前端多语言实现等技术挑战。文章提出应客观看待AI编程工具的辅助作用，强调独立开发中"完成大于完美"的理念，并推荐了Next.js、Supabase等适合独立开发者的技术栈组合。 </div>
                        <hr>
                    
                    <h2><strong>引言</strong></h2><blockquote><p>这是《AI实用主义探索》系列推文的第一篇。</p><p>本文源自笔者在工作中遇到的大模型选择痛点，<strong>当技术更新速度超越人类认知效率时，如何用工具对抗工具</strong>。</p><p>实现部分主要使用Cursor来完成，顺便分享一下过程中遇到的一些坑。</p><p><strong>预计阅读时长：</strong> 10-15分钟。</p></blockquote><h3>一个“后进生”的痛</h3><p>年后各个企业受到Deepseek的刺激，纷纷开始“全面拥抱AI”，而我自己的工作也难以免俗。这几个月手头上最重要的事之一，就是帮公司的业务接入各种AI模型。</p><p>在这个过程中，经常业务追问n连击“我该用什么模型”、“模型是开源的吗”、“哪个成本更低”、……不胜其烦。</p><p>究其根本，是这两个因素在作祟：</p><p><strong>1. "追新"的压力</strong></p><p>从Open AI横空出世开始，最<i>FOMO</i>的领域非AI莫属。每天打开社交媒体，就会遭受一轮各种"震撼"的AI模型新闻轰炸。</p><p>前几天是GPT 4o模型“难以置信”的生图能力，过几天又是GPT o3的推理能力“遥遥领先”，远的不说，阿里赶在五一假期前最后一天“重磅开源”Qwen3，又成了“最强开源模型”。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/06/article/34d42ea673ec5d1e266fa8a2334b2c55.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><blockquote><p><strong>错失恐惧症</strong>（英语：<strong>Fear of missing out</strong>，简称：<strong>FOMO</strong>），也称社群恐慌症。是指由自己的不在场所产生的不安与持续性焦虑。患者总感到自己不在时可能发生非常有意义的事。</p></blockquote><p>作为年后才追这波风潮的“后进生”，一边“补课”，一边还要追新，认知成本非常之高。</p><p><strong>2. "王婆卖瓜"的厂商们</strong></p><p>最近也频频接触了多个厂商的售前，看到了一些啼笑皆非的事，比如：</p><ul><li>某大厂的技术人员信誓旦旦说自己的IDE是“行业领先”，殊不知他们的feature在Cursor上已经被用烂了</li><li>某国际供应商说自己的价格比友商“略贵”，算下来发现是另一国际大厂的2倍，是小平台的4倍之多</li></ul><p>在众说纷纭的环境下，想要尽可能“科学决策”，降低决策成本是重中之重。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/06/article/8125321dc6d5d49b8dd24b70e072e269.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>我需要一个什么样的工具？</h3><p>在模型更新换代如此迅速的情况下，认知和结论也需要实时更新。作为开发者出身，“不要浪费时间在可重复的事务上”已经是本能。而AI模型选型过程中的信息收集和对比分析，完美命中自动化的两大评估标准：<strong>重复度高</strong>、<strong>耗费大量时间</strong>。</p><p>因此，我们需要一个简单易用的模型选择器，降低认知成本，解决自己工作中的痛点。</p><p>核心的功能清单：</p><ul><li>定时更新数据。最核心的基础能力，解决人肉追新的痛苦。</li><li>价格对比。厂商都说自己比友商便宜，那就拉表看看到底谁更便宜。</li><li>API Feature List。来自一个险些被坑的故事。在gpt 4o的图片生成大火的时候，我们原定接入能力，其实API并不可用，如果选型图片生成模型，得接其他的例如Image 1。</li><li>导出报表。汇报是工作中不可或缺的一环，既然构建工具是为了解决工作的痛点，那当然需要从工作的全流程来看。</li></ul><h2>设计与实现</h2><p>从毕业到现在，自己的技术栈一直是围绕后端打转，对于前端可以说是基本一窍不通。而在走上管理岗位后，写代码的机会也少了很多。好在如今有很多AI编程工具，可以降低编写实现的难度。</p><p>鉴于“选择合适的工具”也需要研究成本，从实际出发，有什么用什么。</p><p>公司买了Cursor Business，刚好可以薅羊毛，深度试用一下用Cursor搭建从0到1的项目。</p><h3>Cursor的王牌提示词</h3><p>之前零零散散用cursor写过一些代码，总觉得有些不及预期。</p><p>Claude 3.7发布后，我在Cursor的论坛上看到一个高赞的Claude 3.7思维链提示词，非常实用，体感用了这个提示词后，Accept率至少提高了50%。</p><blockquote><p>出处：https://forum.cursor.com/t/i-created-an-amazing-mode-called-riper-5-mode-fixes-claude-3-7-drastically/65516/6</p></blockquote><pre class="language-ace-line old-record-id-HJrrduRmeoRkWBxzrgUckamcnQc"><code>您是 Claude 3.7，您已集成到  Cursor   IDE（VS Code 的一个基于 AI 的分支）中。由于您的高级能力，您往往过于急切，经常在没有明确要求的情况下实施更改，以为自己比我更了解，从而破坏了现有逻辑。这会导致代码出现无法接受的灾难。在处理我的代码库时（无论是 Web 应用程序、数据管道、嵌入式系统还是任何其他软件项目），您的未经授权的修改可能会引入细微的错误并破坏关键功能。为防止这种情况，您必须遵循以下严格协议：
元指令：模式声明要求
您必须在每一个响应的开头用括号标出您当前的模式。没有例外。 格式：[模式: 模式名称]

RIPER-5模式

模式1：研究
标签：[模式：研究]
目的 ：仅收集信息
允许 ：阅读文件、提出澄清问题、理解代码结构
禁止 ：建议、实施、计划或任何行动暗示
要求 ：你只能试图了解存在什么，而不是可能是什么
持续时间 ：直到我明确发出信号进入下一个模式
输出格式 ：以 [模式：研究] 开始，然后仅观察和提问

模式2：创新
标签：[模式：创新]
目的 ：集思广益，寻找潜在方法
允许 ：讨论想法、优点/缺点、寻求反馈
禁止 ：具体规划、实施细节或任何代码编写
要求 ：所有想法都必须以可能性而非决策的形式呈现
持续时间 ：直到我明确发出信号进入下一个模式
输出格式 ：以 [模式：创新] 开头，然后仅显示可能性和考虑因素

模式3：计划
标签：[模式：计划]
目的 ：创建详尽的技术规范
允许 ：包含确切文件路径、功能名称和更改的详细计划
禁止 ：任何实现或代码编写，即使是“示例代码”
要求 ：计划必须足够全面，以便在实施过程中不需要做出创造性的决定
强制性最后一步 ：将整个计划转换为一个按编号顺序排列的清单，每个原子操作作为单独的项目
清单格式 ：
实施检查清单:
[特殊动作1]

[特殊动作2]
...
n. [最终动作]
持续时间 ：直到我明确批准计划并发出信号进入下一个模式
输出格式 ：以 [模式: 计划] 开头，然后仅显示规格和实施细节

模式4：执行
标签：[模式：执行]
目的 ：准确执行模式3中的计划
允许 ：仅执行批准计划中明确详述的内容
禁止 ：任何不在计划内的偏离、改进或创意添加
进入要求 ：仅在我明确发出“进入执行模式”命令后才能进入
指令处理：你需要在运行python命令前，使用正确的虚拟环境，例如执行source activate fastvoice
偏差处理 ：如果发现任何需要偏差的问题，立即返回计划模式
输出格式 ：以 [模式: 执行] 开头，然后仅执行与计划匹配的内容

模式5：审核
标签：[模式：审核]
命令：进入审核模式 
目的 ：严格验证计划的实施情况
允许 ：逐行比较计划和实施
要求 ：明确标记任何偏差，无论偏差有多小
偏差格式 ：“ :warning: 检测到偏差：[准确偏差描述]”
报告 ：必须报告实施情况是否与计划一致
结论格式 ：“ :white_check_mark: 实施与计划完全相符”或“ :cross_mark: 实施与计划有偏差”
输出格式 ：以[模式: 回顾]开始，然后进行系统比较和明确判决

如果未设置模式，则按[模式：快速]开始
未经我的明确指令请勿在模式之间转换
你必须在每次回复开始时声明你当前的模式
在执行模式下，你必须 100% 忠实地遵循计划
在审核模式下，你必须标记哪怕是最小的偏差
你不可做出独立的决定

模式转换信号
仅当我明确发出信号时才转换模式：
“进入研究模式”“进入创新模式”“进入计划模式”“进入执行模式”“进入审核模式”“进入快速模式”</code></pre><p>如果开启了Agent和自动Accept，看起来就颇有“人工智能”的味了，写代码也可以“挂机”。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/06/article/b916d7a7db02022fb5da13e594065df6.gif" /></figure><h3>一些弯路</h3><p>虽然有了Cursor的辅助，但过程中仍避免不了踩坑和做出调整。</p><p>但话说回来，我认为，失败或愚蠢的经验也是有其分享价值的，正确的废话毫无意义。</p><p>在此也记录一些我遇到的问题，希望能给看到本文的你提供一些信息参考。</p><h4>项目根目录错乱</h4><p>第一个坑是本地的目录设置。原本我是有个{Workdir}目录，用于存放所有代码的，在使用Cursor时我也把项目根目录设置在这里：</p><pre class="language-ace-line old-record-id-H2WtdXOPboYGInxo4CJc4lCNnyb"><code>{Workdir}/{ProjectDir}</code></pre><p>但是在Agent模式下，cursor经常直接在当前目录（Workdir）中执行命令，例如<code>npm install</code>，导致因根目录下找不到packge.json而执行失败，浪费tokens。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/06/article/d564210bd54d9f6532c8785e5de983a5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>解决方案也比较简单，每次新建项目的时候，新建窗口即可。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/06/article/5d595e396ae129d6869c2f3c57b04be2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h4>计划阶段的人工调整</h4><pre class="language-ace-line old-record-id-H5PadrwhYoNbmBxkQXrc4XtCnAf"><code>进入创新模式，帮我设计一个展示站点，内容是“AI大模型竞品调研”。核心页面是一个表格形式的对比站，聚合现在各家模型厂商的大模型的对比。
核心功能模块包括：
（1）登录和反爬虫防护，可以使用cloudflare或集成saas能力 
（2）模型筛选和价格计算器，包括汇率折算等 
（3）报表生成和导出 
（4）支付功能，付费用户可以获取更多报表导出次数和自选列。
创新方案需要从用户吸引力、技术架构和模块划分视角来看。</code></pre><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/06/article/551b13fc9d9af2d1a158970044dc1af0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>AI给出的答复乍一看很牛，实际还是有很多细节问题。试过几轮，如果直接从AI生成的计划开始执行，项目建起来之后纠偏就比较难。有的时候慢即是快，在计划阶段，先人工整理出一份计划终稿，可以节省后续修复和调整的时间。</p><p>我的思路是沿用之前创新模式提供的结构，在涉及到选型的部分提前通过问答的方式选好，给AI一个确定性的答案。</p><pre class="language-ace-line old-record-id-Whgrd36lBojhfKx4Cewc2Uk4nYg"><code>（1）用户吸引力视角：
A. 核心价值主张：为新引入AI的企业、团队或个人，提供简单易用的模型选择器，降低决策成本，和长期使用成本。
30 seconds, save 30% costs when using AI
B. 痛点解决：厂商王婆卖瓜，都说自己比友商便宜，那到底谁便宜，拉表看看
C. 增长飞轮：社交媒体分享图，一键转发
D. 体验设计：简洁页面（核心是动态表格），省略无关信息；使用Ask Sheet能力，全局/范围提问，联动表格row和column；

（2）模块设计：
A. 登录及付费管理系统：基础设施
B. 价格计算模块: 主页面
C. 报表及导出模块: 创收卖点

（3）技术架构：
技术栈：next.js，UI框架使用TailwindCSS，多语言使用next-i18next
部署：Cloudflare Worker
数据库：Supabase Cloud
支付：Stripe
Auth：Supabase Auth

我的最新设计如上，进入计划模式，帮我补全整体计划和里程碑，不要超出上述范畴。设计为敏捷迭代的方式，例如在最基础的Demo完成后，就进行部署发布测试，将上述计划保存为markdown图表，纵轴为模块，横轴为里程碑，单元格为事项列表。</code></pre><p>一轮对话的上下文有限，对话次数越多表现越差。</p><p>因此，可以在计划生成后保存一份markdown记录，方便后续对话时引用同一个源头文件。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/06/article/2f9ab69616fb1dc30ee4b0bb3bc78533.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h4>Agent自动执行</h4><p>Agent自动执行虽然会达到“一键托管战斗”的效果，但也会带来一些问题。例如，有时Agent会执行一些不必要的操作，或者在没有充分理解上下文的情况下做出错误的决策。</p><p>特别是在bugfix阶段，可以切回Ask和Manual模式，逐步调试和修复问题。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/06/article/6b04884b815c3ddcdfe7b362f801c11b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>客观看待AI工具带来的生产力提升，以AI编程工具为例，我认为现阶段还没达到100%的可用率，而即使只有1%的工作量，对于真正0基础的人来说，其认知成本也不容小觑。</p><h4>前端的i18n方案</h4><p>前端对我来说就是那1%。</p><p>我的站点部分使用了react next方案。原本计划在项目前端中支持多语言，AI提供了i18next、react-i18next、next-i18next、nextintl等等方案，但在实际使用时，不是出现各类编译问题，就是翻译的key或value丢失。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/06/article/8efbdc5496c40e2aa7d32809a30f7910.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>考虑到这个不是MVP版本的核心功能，我还是放弃在这个上面纠结太久，先写死了。</p><p>如果有解决过类似问题的朋友，欢迎在评论区指导。</p><h4>爬虫的方案选型</h4><p>最初，我打算使用Python自己开发爬虫来采集数据。写了一版openai的爬虫后，发现本地运行经常遇到防火墙拦截。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/06/article/c3b9f792d24f8d9cd78e3be32b24fed0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>独立开发者的精力有限，能用Saas解决的问题就不重复造轮子，因此我找到了Firecrawl这个爬虫服务，实现数据爬取部分。它提供了强大的反爬虫能力，能够相对稳定地采集数据。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/06/article/8622641092a477395af32f143e458366.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>效果展示</h3><p>趁着五一假期，完成了第一个Demo版本，实现了数据爬取和展示的基础功能。</p><p>虽然还很粗糙，但为了避免自己又虎头蛇尾，我还是希望尽早推向社区，帮助像我一样被AI选型折磨的打工人。</p><p><a href="https://sspai.com/post/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%AB%9E%E5%93%81%E8%B0%83%E7%A0%94" target="_blank">https://compare.effective-ai.org/</a></p><p>欢迎加个收藏，后续的功能会逐步更新。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/06/article/5ff17273e69fd320fce22051e4fa4004.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/06/article/98620ddf88992bffd18b6b0c917a54dc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>总结</h2><h3>对Cursor的感受</h3><p>作为一个从管理岗位回归技术一线的开发者，Cursor对我来说是一个很好用的工具。</p><p>前文中也提到了，cursor的优势在于辅助，例如不同技术栈之间切换，例如让写后端的人可以写出前端页面；大部分代码可以自动生成，可以让人专注于设计和指令，而不是被技术细节所困扰。但是，它仍存在一些无法解决的问题，例如对话轮数过多后，表现直线下降；对于真正0基础的人来说，并不像其宣称的那么好用。</p><p>AI工具带来的生产力提升效果还需要客观看待，但对于科技的发展我一向持积极态度。拥抱变化是主旋律，个人的认知势必要随之更新迭代。假设人的一生中需要工作40年，按照4年换一份工作计算，也需要换10次。4年前做的事情跟现在截然不同，也是情理之中。</p><blockquote><p>在一个动态的系统中，没有一劳永逸的解决方案。</p><p>——《纳瓦尔宝典》</p></blockquote><h3>独立开发技术栈</h3><p>分享一篇对我很有帮助的文章：<a href="https://sspai.com/post/%E7%8B%AC%E7%AB%8B%E5%BC%80%E5%8F%91%E8%80%85%E6%8A%80%E6%9C%AF%E6%A0%88" target="_blank">https://guangzhengli.com/blog/zh/indie-hacker-tech-stack-2024</a></p><p>虽然迫于生活压力，没有办法完全彻底转型踏入独立开发者的道路，但我认为这里提到的观念和工具都是很有价值的。</p><p>以当前这个项目为例，目前使用的技术栈有：</p><ul><li>前后端：Next.js + TypeScript + TailwindCSS<ul><li>Next.js提供了全栈开发的能力，减少了前后端分离带来的复杂性。</li><li>TypeScript提供了类型检查，减少了运行时错误。</li><li>TailwindCSS提供了原子化的CSS类，加快了样式开发速度。</li></ul></li><li>数据库和鉴权：Supabase<ul><li>Supabase提供了免费使用额度，强大的数据库功能和实时订阅能力。</li><li>Supabase Auth提供了邮箱登录鉴权能力。</li></ul></li><li>部署：Cloudflare Pages和Github Actions<ul><li>Cloudflare提供了简单的部署流程和域名管理。</li><li>Github Actions提供了爬虫脚本定时运行的</li></ul></li><li>爬虫：Firecrawl<ul><li>Firecrawl提供了专业的爬虫服务，解决了数据采集的难题。</li></ul></li></ul><p>目前基本都是穷鬼套餐，预计用量增长后，这里也会产生相应的费用，希望这个项目能撑到这个时候：）</p><h3>完成&gt;完美</h3><p>其实这不是我第一个启动的项目，我从去年开始陆陆续续做一些小项目，但基本都有头无尾。我很认可Build in public的思想，但因为种种原因，始终没有把自己做的东西发布出来。</p><p>失败的原因无非是：</p><ul><li>有一个很宏大的规划，但是周期太长，没有坚持下来</li><li>做了一些没有内容支撑模板站，其实是徒有其表的草包，不产生任何价值</li><li>做的事情跟本职工作没有任何关联，纯纯摸鱼</li></ul><p>最近两年一直在关注AI领域的创业机会，也陆续看了很多别人的成功或失败经验，从“GPT套壳”到“万物皆可Deepseek”。虽然觉得自己懂一万种道理，真正做的时候还是会因为这些“已知的原因”而踩坑，知行合一是一件很难的事。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/99037</id>
            <title>快捷指令小游戏</title>
            <link>https://sspai.com/post/99037</link>
            <guid isPermaLink="false">https://sspai.com/post/99037</guid>
            <pubDate></pubDate>
            <updated>Mon, 12 May 2025 02:12:56 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 快捷指令,信息自动化,气球墙,礼物替换  
<br>  
<br>  
总结: 本文介绍了利用iOS17的快捷指令实现信息自动化的方法，通过收到特定格式的坐标信息后自动替换气球墙中的气球为随机礼物并回复。核心步骤包括：1. 使用正则表达式提取坐标数字；2. 将气球墙拆分为三部分进行礼物替换；3. 通过备忘录保存每次游戏结果；4. 处理边界坐标和排版问题。文章还提供了多种变体玩法（如砸金蛋、拆盲盒）和概率控制技巧，并附带了刮刮乐指令的实现逻辑。 </div>
                        <hr>
                    
                    <h3 style="margin-left: 0.0px;">前言</h3><p style="margin-left: 0.0px;">本文的基础是快捷指令的信息自动化。</p><p style="margin-left: 0.0px;">马上要到520，用快捷指令给生活加点小调剂。不知道你是否在网上看到过这样的聊天互动。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/51176ee4a0f404a03dc6f16e7990edf8.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">&nbsp;</p><p style="margin-left: 0.0px;">使用聊天文本打气球🎈，很有意思的互动。只是手动发送稍微有些麻烦。在iOS17版本以后，信息自动化能够直接运行，不需要手动确认。所以可以使用快捷指令实现收到信息后随机替换礼物并自动发送信息。</p><p style="margin-left: 0.0px;">思路是收到开始游戏的信息后，生成气球墙。收到坐标信息后，将气球墙对应位置的气球替换成礼物，并将结果发回给发送人。</p><h3 style="margin-left: 0.0px;">拆分气球墙</h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/ef56100cc1074d6fa639ba6b1f95f035.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">首先确定扎气球坐标的消息格式，使用一个emoji来识别信息自动化，本文使用🎯（2，3）或🎯43的格式。使用正则表达式“\d”匹配扎气球坐标信息中的数字。从🎯（2，3）提取出数字23，从匹配文本中获取列表的第一项行数2，以及列表的最后一项列数3。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/90c08d7cc84c46b324967896dce50656.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">确定三个点，将气球墙拆分为坐标之前，替换礼物，坐标之后三部分。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/13143bc7e3e5c2d97764a07610e9b317.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">通过“计算表达式”（行-1）*5+列，获取到要替换礼物的气球所在的坐标位数。</p><p style="margin-left: 0.0px;">坐标之前：将替换礼物的位数减一，从列表中选取范围内的项目，从1到位数减一；</p><p style="margin-left: 0.0px;">坐标之后：将替换礼物的位数加一，从列表中选取范围内的项目，从位数加一到最后一位。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/d75c20afb3bc7de63839b1544a742156.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">这里使用简单的方式控制礼物的概率，将文本按每个字符拆分后，“从列表中获取项目”有一个随机项目的参数，在文本中添加💥的数量越多，选中礼物的概率越低，想要增加某个礼物的概率，可以增加该礼物的数量。当然也可以通过数学公式详细控制每个礼物的概率。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/7d042fd1f83428ecdcec09e2556bd1e6.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>还可以在其中选择一个特殊emoji，随机到该emoji时，发送🚓🚓🚓🚓🚓🚓，城管来了，卷钱跑路。（信息内容不包含卷钱跑路）</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/22a7adc6f134ed0f343633a34beeffdf.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">因为每一次扎飞镖会改变气球墙的布局，所以每次运行后要将结果追加保存到备忘录中。替换被扎的气球之前，先查找备忘录。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/5f17d688b5f016498168660249bd8661.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">如果保存结果的备忘录里存在内容，就按行拆分备忘录内容，因为每次都是追加备忘录，所以从列表中获取最后一项就是最新的结果。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/c0fc76bec6d7561ade54cda2834af154.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">如果不包含内容就创建新的气球墙。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/2b6d424447a4459675f0c983ecc3f1ca.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">获取到气球墙的最新布局后，将其按照每个字符拆分并计算项目的数量。因为气球数量按照喜好选择，所以通过计算的方式获取气球总数。</p><p style="margin-left: 0.0px;">本文指令气球墙使用5行，5列，总共25个🎈。</p><p style="margin-left: 0.0px;">从列表中获取项目的范围是从1开始到25结束。这里就存在一个问题，坐标（1，1）和（5，5）在对位数加一减一时，坐标（1，1）的位数减一后为0，从列表中获取项目的范围则为1到0，会出现错误；同理坐标（5，5）位数加一后为26，从列表获取项目的范围则为25到26，超过了项目的范围。所以对这两个坐标添加一个判断。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/fe8d4c642f0f8de582367d950322c90b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">“如果”操作有一个“介于”参数，这个参数包含了小于等于和大于等于。所以“如果”位数介于2和24时，就使用“文本”操作拼接三段：坐标之前，替换礼物，坐标之后。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/bab3168be48cbf30659488c5193691aa.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">否则在2和24范围之外，位数包含了1和25，如果位数减一的计算结果为0，表示替换礼物的坐标为（1，1），直接使用文本拼接“替换礼物”和“坐标之后”。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/9cdf079ba9ce6517f892b0e94e0c346c.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">否则，就是坐标（5，5），拼接“坐标之前”和“替换礼物”。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/012b87a11a568df8b26a3f4a71e3756b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">“如果的结果”不是一行，保存到备忘录中难以拆分，所以先使用新行拆分，再使用“空分隔符”合并，注意这里分隔符不是空格。将合并后的文本追加到备忘录保存。</p><p style="margin-left: 0.0px;">直接使用排版好的气球墙在“拆分文本”时，换行处会出现空格，可以先去除空格再进行计算。排版好的气球墙在保存到备忘录的时候也要留出拆分的分隔符。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/af42fb8bbd9d84682d079498fa25331a.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">本文使用没有排版的气球墙，等替换好文本后重新复原排版。将文本按照每个字符拆分后对重复索引进行模运算，除数为气球墙的列数。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/ec00e651ed766ac657c480b2cc3bda14.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">当取模为0时，在重复项目后换行再保存到复原排版变量中。在“文本”里加一个换行即可，注意上图“文本”里的光标位置。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/bb054034b26afb0d45e999e8ca71d86e.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">否则直接将重复项目添加到复原排版变量中。</p><p style="margin-left: 0.0px;">之后将复原排版变量使用“空分隔符”合并文本。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/8010b5b8525f6ef79c19dd2cedd0cccb.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/fb296706aa262fff8e0e4f542bdb11fb.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">最后将复原排版后的气球墙发送给“输入快捷指令的信息”，因为本指令是在信息自动化中运行。指令内容直接写在自动化里时可以查看输入快捷指令的信息有哪些类型。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/3938fb9f81f89899f8e0a8238f90f173.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">在指令中的输入快捷指令的信息，可以将类型改为联系人。</p><h3>遍历气球墙</h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/c52abb1030211f20fea5de4fbd98748a.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">为了指令便于分享，以及修改气球墙数量的需求。替换礼物的方式不使用文本拼接，通过变量遍历。并在前方添加一个“数字”操作，将指令中和行列数有关的内容都改为此“数字”变量，修改数字即可修改气球墙的数量。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/3ff7bf009f1ed7d49c5f5989501d59f9.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">为游戏添加一个开始游戏的说明，使用“匹配文本”匹配输入快捷指令的信息中的数字时，添加一个判断，如果“匹配文本”有值，则继续获取坐标。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/d2fa69259354131e6d6f1dc674442554.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">如果没有值，则发送游戏规则说明。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/d82823eca310aeea0c47b4d8b05bbffa.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">查找上次游戏的备忘录记录，删除后新建空白备忘录。之后停止运行此指令，等待发送坐标。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/7649d1bcdb2dbb328e3252c0d2f069c6.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">因为是计算替换礼物的位数，所以类似（2，6）、（6，5），超过行列数的坐标也能够运行。当坐标超出时，发送飞镖扔偏的提示信息后停止执行指令后续内容。在iOS18版本，“如果”操作可以同时添加多个条件，将条件参数改为“任一”。如果在iOS18版本之前，需要拆分为两个“如果”。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/5878ebbf725be1ee59be95ba31506ff8.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">计算位数的表达式中的5改为“数字”变量。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/891502a960a9b524435cfefddf13e1c8.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">将固定的新气球墙改为按照“数字”相乘自动生成。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/ca32683d98a2d561eea0d879b51036a0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">对气球墙按照字符拆分，重复每一项。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/cb9580af22f5ed8cc7af0c95f7f15679.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">当重复索引和坐标的位数相同时。有两种情况，坐标位置可能为气球🎈，说明没有被扎过，将随机礼物添加到气球变量；坐标位置不是气球🎈，被扎过，提示飞镖扔偏的信息，停止执行后续内容。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/63960a20fb7cecae9b81af19e404e324.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">当二者不同时，将重复项目添加到气球变量。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/d21281fa007132d6b4879fb2af946575.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">将复原排版的取模除数改为“数字”变量。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/b8aca254c0fb0f617b457b920dcdc897.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">除了气球还可以修改为其他内容，例如改成🥖砸“金”蛋🥚，为了不浪费粮食，打破的鸡蛋做成煎蛋🍳。还可以改为🫳拆盲盒📦。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/52d3efecff0b9815e79958125f45f68d.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">iMessage中的支付宝可以发送红包，付款后开始游戏。</p><p style="margin-left: 0.0px;">推荐几个礼物</p><p style="margin-left: 0.0px;">返还游戏的十倍红包🧧，想买很久的运动鞋👟，蛋糕奶茶小烧烤🍰🧋🍖，喜欢的包包👜，预备的演唱会门票🎫，半小时不间断的吻💋，小惊喜💍，还有芙莉莲严选，只会溶解衣服的药水🧪。</p><h3 style="margin-left: 0.0px;">刮刮乐指令</h3><p style="margin-left: 0.0px;">在盲盒版本中可以添加刮刮乐🎰，随机礼物添加判断，如果是刮刮乐，运行刮刮乐指令。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/39c715686e78f16bdddec54cec185704.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/cf5216065679ea600f39dd0c776e28b3.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">将刮刮乐内容分为上下两部分，下方的emoji和上方一行的emoji相同时，则获得该emoji下方的金额。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/f3b66992a16a69b3ef394f57a923239f.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">将emoji按照每个字符拆分。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/418bb540954efc7355f8f60474a138dc.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">将金额按照空格拆分。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/6ad0bfd1fe9bec9b1a30f817f5b066d5.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">先重复5次，随机获取5个中奖emoji。使用空分隔符合并为一行。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/54f181a158d74a2f207c5cb48f517d86.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">将一行emoji和一行金额看作一行，所以重复五次。每次重复时，随机获取5个emoji。使用空分隔符合并为一行。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/a8b54e14e1682d435be70501affc313b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">随机获取5个金额。使用空格合并为一行。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/fbf25ec2946fbdd624b2d48016aafab6.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">使用“文本”上下拼接。</p><p style="margin-left: 0.0px;">最后将中奖emoji和下方的随机emoji金额拼接，发送给联系人。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/95451212aeff4abec04bc463c97a821c.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/09/6d58a6aa90eb39dfb7dc44e79a46075b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">开始互动前，先运行一次开始游戏，首次会提示删除备忘录的权限。再发送正常坐标，超出坐标，重复坐标这三类坐标，提供发送信息的权限。运行在iOS18系统版本的指令，判断超出坐标是一个“如果”同时判断两个条件，超出坐标只需运行一次；在iOS18之前的版本有两个如果判断，需测试两次超出坐标，一次行数超过5，一次列数超过5。</p><p style="margin-left: 0.0px;">关闭“发送信息”操作的运行时显示，实现锁屏运行自动化。</p><p style="margin-left: 0.0px;">本文指令：<a href="https://www.icloud.com/shortcuts/23e6e52d7ac844e0b79c7bd154778743">扎气球</a>｜<a href="https://www.icloud.com/shortcuts/109886fd62f44ca8ab4c32980ac96d54">砸鸡蛋</a>｜<a href="https://www.icloud.com/shortcuts/a2ea6bc7536a4239a5ce3231abceb4c5">拆盲盒</a>｜<a href="https://www.icloud.com/shortcuts/e9c12a069662432d9184236dd256d2c6">刮刮乐</a></p><p>&nbsp;</p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/98537</id>
            <title>曼谷+清迈：四天三晚的泰国双城速通游记</title>
            <link>https://sspai.com/post/98537</link>
            <guid isPermaLink="false">https://sspai.com/post/98537</guid>
            <pubDate></pubDate>
            <updated>Sun, 11 May 2025 23:16:27 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 泰国旅行, 曼谷, 清迈, 红丝绒火车  
<br>  
<br>  
总结: 作者分享了在泰国曼谷和清迈的四天旅行经历。行程包括曼谷的素坤逸街区、商场和Chatuchak集市，以及清迈的粘粘瀑布和当地集市。作者体验了泰式按摩、红丝绒火车和当地美食，如打抛饭和泰北菜。尽管遇到高温和交通拥堵，但整体感受了泰国的热情服务和悠闲氛围。旅行中注重随性探索，较少依赖详细攻略，最终留下了深刻的回忆。 </div>
                        <hr>
                    
                    <h3>写在前面</h3><p>对于泰国或者说整个赞米亚地区我都有着一种难以表述的向往，说着无数次想要前往的泰国在今年才终于实现。在出行前一周发生地震后也有过担心纠结，但经过多方确认后还是决定继续前往。4月正值泰国最热的月份，所以我们的行程大多安排在室内，没有什么机会体验泰国的文化景点，虽然有遗憾的地方，但也在有限的时间内感受到了泰兰德的阳光与快乐。</p><h3>行程准备</h3><p>工作后想要出国玩只能想办法和小长假牵线搭桥，由于五一人多每年我都会优先选择清明节期间出行。提前一个月和朋友在晚上一时上头敲定请一天假，一共四天一起前往泰国。</p><p>假期并不长，但还是希望能在有限的时间把曼谷和清迈都去了，连夜看机票，对比不同的往返行程哪个更便宜，在当晚看中了广州飞曼谷，清迈飞广州的机票，曼谷和清迈各两天，往返直飞含行李额1400。当我下单后一周心痒又去搜了下机票发现机票降至了1200。</p><p>去年原本很早就购买了曼谷往返次卡想等待合适的机会出游，最后等到次卡过期也没有去成。旅行还是需要一些说做就做的冲动，不然总是想着以后还有机会，最后等到一年结束也去不成。</p><p>曼谷前往清迈的交通方式很早之前就想好了乘坐红丝绒火车，根据小红书的详细教程注册了Dticket直接购买了二等座的火车票，如果嫌麻烦的也可以直接淘宝代定，会比自己直接购买要多出一点手续费。</p><p>在Google Map上建好曼谷和清迈两个列表，刷到推荐的餐厅和咖啡店收藏进列表，等吃饭的时候打开列表看哪个离的更近就去吃哪家，非常p人的操作。</p><p>行程短所以在前期准备上除了基本的机酒出行就只需要等待出行那一天的到来。</p><h3>曼谷</h3><h4><strong>住宿</strong></h4><p>曼谷我们入住的酒店是Galile Oasis，在定酒店前我们有看到在隔音和位置方面的问题，尤其是隔音，很多旅客都有吐槽可以听到楼上木地板的嘎吱声，几番纠结下因为太喜欢这个酒店的环境和氛围所以还是定了这家。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/04/20/7e65a0d5d49a213d47f20c665d0a9e19.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/04/20/208d5245bc94568b9b386fecc697112e.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>打车只能送到巷子口，需要自己穿越巷子才能到酒店大门，巷子的灯光很亮，晚上走不会觉得吓人，进入酒店的院子说不定还会看到可爱的小橘猫趴在椅子上睡觉。早上在外面吃早饭也可能会被小猫索要食物哦。</p><figure class="image ss-img-wrapper image_resized" style="width: 576px;"><img src="https://cdnfile.sspai.com/2025/04/20/e8f9f1a39905c0da9297dbbc7e185bae.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>大概是因为之前在日本住得实在太憋屈，一打开房门就和朋友感叹好宽敞！酒店一共有三层，在来之前也特地和酒店确认了受到地震影响很小，可以放心入住。我们住在二楼，巨大的落地窗拉开窗帘就可以看到窗外的绿植。这家酒店还有一个很特别的设施，洗手池的出水笼头是脚踩式的。</p><p>不知道是不是因为当时是淡季，我们没有感受到其他噪音，在这里度过了非常舒适的两晚。当生活被绿植和阳光包围也很难不感到舒适和幸福，周末的市集让我们觉得像是融入了当地人的生活。</p><hr /><p><strong>第一天</strong></p><p>从机场出来的一瞬间就感受到了超高的气温，即使是凌晨一点半也热得让人呼吸都会冒汗。我们提前约了车，等待了一会后就有专车司机接我们到酒店。值得一提的是我们在泰国每一趟打车的司机只要看到我们有行李都会主动下车帮忙。</p><p>在出行前就对曼谷的堵车有所耳闻，但实际经历更让人崩溃。4月是泰国气温最高的时候，步行约等于酷刑，但曼谷的公共交通普及率有限，大部分地方难以通过brt到达且乘坐公共交通的单价并不便宜，所以我们只有打车、坐突突车或者打摩的这几个选择。</p><p>第一天我们出发去<strong>素坤逸街区</strong>逛街，到达通罗后就看到了不同于我以往所认知的泰国，被堵在狭窄的街区让我有了可以停下来观看这些建筑的机会，富有泰国特色的木屋，颜色鲜亮的酒吧，绿植环绕的咖啡厅和酒店，每家店都非常想踏进去看看。第一个目的地逛完后我们选择了走路，路过看起来有意思的小店就进去看看。这里的街区会给人带来随意的惊喜。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/e5907d702f64d5a98af99828e0fd8272.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>如果是在天气更凉快的季节来这里会是一个非常好的city walk地点，先定位一个咖啡店吃早餐，回神后拿着咖啡随机挑选一个路线闲逛应该可以发现很多不同于网络热贴的景色。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/8c2f0ab12d6ab0bd4cee8e6f32302227.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>中午我们随机walk进一家泰北菜，泰北菜是以酸辣口和特色香料闻名，完美击中我的喜好，盲点的几个招牌菜都没有踩雷。在这么热的天气也只有酸口的东西能刺激人稍微多吃点。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/99728f4e3b9121c4a1ec0d6b43c444ea.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>ISAA ISAN, 18/4 Soi Sukhumvit 39, Khwaeng Khlong Tan Nuea, Watthana, Krung Thep Maha Nakhon&nbsp;</figcaption></figure><p>饭后本打算买杯咖啡或者泰奶步行去EmSphere商场，但又觉得时间太早，就在Google上搜索一下附近评价比较不错的马杀鸡店做了个泰式按摩。一小时的泰式马杀鸡500株，大概是人民币100出头的价格。可能因为处在日本区，整体的环境和服务态度都很好，且都提供日语服务。第一次体验泰式马杀鸡被她们技师的手劲震惊到，全身都被打通的感觉。</p><p>曼谷的商场是近几年常被提及的线下消费场景案例，又正值曼谷天气最热的时候，我们这次行程主要集中在市区的各个商场。曼谷的商场在室内空间设计上营造了一种非常好逛的氛围，虽然仔细一逛能买的东西并不多，但是会吸引你到他的商场每一层都去看看。</p><p>之所以选择这个时间来EmSphere是因为在小红书上看到了黄油小熊的出场时间，于是我们蹲点五点到黄油小熊咖啡厅前发现现场根本没有人排队。这和我对黄油小熊的人气认知太不符，临时搜索黄油小熊的行程，发现ins官方账号会发布黄油小熊每周的行程，那篇小红书帖子早已过期。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/02f792ba15a69c79c86080795a753211.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>和黄油小熊面基失败</figcaption></figure><p>确定无缘黄油小熊后我们决定提前去往沙吞码头，乘坐日落邮轮观看沿岸的风景，这条线路可以沿河观看大皇宫、郑王庙。这里我们做了此次旅行最错误的一次决定——打车。8公里的路程硬生生开了一个半小时，中间段路甚至在原地停了近20分钟，有过这次经历对在曼谷打车都变得慎重了很多。也因为堵车我们错过了最后一班19:15的游船，错失了唯一能看到曼谷著名文物的机会，只能坐iconsiam的接驳船直接去iconsiam。</p><p>在网上看了许多iconsiam的照片，如果要我推荐曼谷值得逛的商场iconsiam肯定会位列其中，虽然我并没有在这里购买很多东西，但购物重在过程，整个商场的商铺、空间都是值得一逛的，或者把它当作一个纯粹的观景平台，在顶楼纵览湄南河的全景。</p><p>正值晚饭期间，我们就在G层的水上集市随意挑了一家泰国菜吃，味道只能说很普通，还是更推荐大家在泰国街头去探索美食。最后我们在4楼的<strong>icon craft</strong>购买了很多有泰国特色的小手信，乘坐接驳船回到了沙吞码头。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/89e6d8b99b489fd7d93da19a79e3fb52.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>从泰国买回的部分手信一览</figcaption></figure><p>我不是爱喝酒也不是会品酒的人，但每次出门旅行都会安排一个晚上体验一下当地酒吧，一般都会优先有演出乐队的酒吧，和朋友在酒吧一起聊天放松作为一天的结尾。原本预约了一家很有特色的酒吧#FindThePhotoBooth，由于实在太累两个人站在码头纠结一会后还是放弃了去酒吧。</p><p>当时想着之后清迈再去酒吧体验就好了，最后在清迈也没有去成。</p><hr /><h4>第二天</h4><p>第二天的行程因为要赶18:40去往清迈的火车所以行程相对安排宽松，早上在711买了早餐打车去附近的商圈继续逛了逛，在BigCamera买了水果和本土零食，还在商场中庭的摊位买了几件很划算的T恤。</p><p>午饭的时候发现收藏的几家餐厅距离都比较尴尬，打车要堵很久，走路又太远，这是我们这两天旅程最常遇到的难题，应该也算是曼谷旅游的难题。最后发现收藏的那家有名的打抛饭<strong>Phed Mark</strong>有Grab外卖，我们就直接点了外卖送到酒店，在附近闲逛了一会看到时间差不多打了突突车回酒店。</p><p>突突车的确没有打车没有那么堵，但价格并不会比打车便宜，建议大家傍晚天黑后去体验突突车，白天坐突突车也会热出一身的汗。</p><p>回酒店趁外卖还没到我们逛了一下楼下的Galile Oasis周末集市，小小的社区摆满了各式各样的小摊，不论是摊位前还是酒店前的桌椅都聚满了人。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/53a933c2951fd0ff5f3ad94e74b9f9c3.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/0bce5a9c26079c1e5b2e77e3441ebafa.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>外卖到了后，我们也只能在酒店外的桌椅上就餐，吃到第一口的时候就感叹，这绝对是我目前吃过最好吃的打抛饭，即使现在回来了也念念不忘。不能吃辣的人可以点不加辣，能吃辣的人比较推荐微辣，我是能吃辣的人，点了中辣被辣得直冒汗，辣味有点盖过了食材本身的美味。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/e434c7deaa1236dc0d54e9ee86a247be.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>吃完饭继续逛了一下社区的集市后就提着行李打车前往曼谷的最后一程——<strong>Chatuchak Weekend Market</strong>。</p><p>Chatuchak集市离曼谷中央火车站很近，在这里逛完后就可以直接提着行李前往中央火车站。我们打车直接到Chatuchak Exit 2，乘坐地铁来的人也是这个出口，出来可以看见一个黄色的行李寄存柜和一个黄色的大棚，不要用寄存柜，直接到黄色大棚来直接寄存行李，按小时算和4小时以上两种选择，我们两个行李箱寄存3小时，一起打折只需要150泰铢。老板人非常好，门口有一个木板上面贴着各种语言的感谢留言，离开时还赠送了我们一人一瓶饮用水。</p><p>在这里就不得不说下小红书，虽然小红书攻略被很多人诟病诈骗，但一些即时攻略小红书是非常实用的。每次在小红书上搜索地点+行李寄存就会有很多人分享的行李寄存攻略，还有各个车站快速乘车检票攻略，这种自发的经验分享基本不存在踩雷。</p><p>除开这位友善的老板，我还在曼谷遇见了非常善良且热心的司机。进入集市后准备拿出相机拍照时发现相机包是空的，回想起是落在车上了马上用grab联系司机是否可以送回，我已经做好准备出司机返回的车费了，只要司机愿意送回适当要价我也都接受。没有想到司机在后座找到我的相机和我确认后同我说回到下车点等一下他，他开回去送给我。司机把相机给我时不知道说了多少声thank you，怕说再多也表达不了我的感激之情。</p><p>对于我这种热爱各种小东西的人来说Chatuchak就是天堂，密密麻麻的小店，各式各样的东西，逛累了就能看到一家饮品店，在这个迷宫里我可以像贪吃蛇一样来回无限穿绕。如果时间充裕在这里肯定会逛得不亦乐乎，跨一步的距离就是一个新天地，一开始每个店我们都会进去看一眼，到后面就学会了用眼睛扫荡，一下向左一下向右，瞄准一个东西就停下脚步进去看两眼。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/da27ddb1ba4b1a0e3db0cdf095f70f75.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>下午17:00左右我们回到了行李寄存处，向老板表示感谢后打车前往曼谷中央车站。距离很近所以我们很快就到了，泰国的火车没有安检，提前15min左右到就好，但毕竟是陌生的城市，出于保险我们还是提前一个多小时到了车站。车站还有提供淋浴的洗手间，火车上也有但不用去就能猜到空间很狭小。不过车站和火车上的淋浴间都是不提供热水的，大概泰国的天气也不怎么需要。</p><p>八点左右列车的工作人员会来铺床，火车不会关灯，只能用帘子挡一下，对于睡眠不好的人不是很友好，除了灯光，火车全程都比较摇晃，即使我是入睡容易的人在晚上也被晃醒了好几次，难以进入深度睡眠。不过出来旅行就是体验的，所以吃吃苦也没关系，更何况在火车上观看流动的日出和日落未尝不是一种奖赏。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/c08b4ebd533720bd79f2b8795da398f5.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>火车是我最喜欢的阅读场景，每次坐火车我都会带一本书，窗外的景色流动，耳机里放着音乐，漫长的火车行程也不再难熬。工作后已经很难进入深度阅读模式的我在这段火车旅程看完了今年的第一本书，重拾纸质阅读的快乐。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/1655e008273f0574fd427902f707e552.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>清迈</h3><h4>第一天</h4><p>早上六点列车工作人员来收床，我从上铺回到了下方的座位，从窗外的景色就能感受到清迈与曼谷的不同。下火车后我马上用grab预约了包车，很快就有司机接单，一个上午4个小时820泰铢，超时另计。我们先出火车站到711买个早餐然后和司机沟通我们这次要去的地方，司机表示OK后我们出发去这次我最期待的一个行程——爬瀑布。</p><p>曼谷开往清迈的火车是早上7点15分左右到达，如果有想要去清迈郊区粘粘瀑布、大象咖啡馆等地方玩的人推荐在下车后直接用软件的包车功能约车，司机接单很快，出火车站还有很多taxi举牌，和国内差不太多，提前预约还需要收预约费。开往瀑布需要一个多小时，刚好赶上瀑布开放时间，这个时间很多包车团队才出发，所以整个瀑布只有我们两个人，纵享整个瀑布。</p><p>瀑布一共分为两大段，我们走阶梯下去时看到了第一段瀑布以为第一段比较容易就直接开爬，下面的石头都很好踩，虽然提前知道了顶上最后一段路有很多青苔容易滑，但实际爬起来还是有点害怕的，毕竟整个瀑布那时候只有我们两个人。</p><p>爬到顶上后还有点意犹未尽，又重新走楼梯到最下面那段瀑布开始爬。底下那段的瀑布好爬很多，光脚穿鞋都可以，有几个地方是沙坑不是石头所以光脚踩会有一点危险，所以更建议穿鞋走。九点多的时候瀑布陆续开始来人，但也只有零散的七八个人，我们还是可以在攀爬过程中毫无负担地停留，玩水，躺在水里。完整爬完一段瀑布并不需要很久，但加上玩水拍照我们在这里逗留玩了两个多小时。</p><p>不论什么年纪的人玩起水来都是小孩子。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/58952a629f92664b59623a61138a2371.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>考虑到我们包车时间和下午的集市收摊时间，粘粘瀑布结束后我们没有再去其他景点直接回到了民宿。</p><p>进入民宿后房东非常热情的迎接我们，给我们介绍屋内各种工具的使用方式，房东人非常健谈亲和，有什么问题都会很积极地来给我们解决。实际入住的房间比在网上看到的更加温馨，开门见树，窝在这样的房子里一整天也不会觉得无聊。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/715341d759a76adfb1abd427bc6398c1.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>午饭是房东推荐距离民宿200米左右的一家地道本地小炒店，点了三份炒饭换算成人民币一起才50元不到，份量不算多，两个人吃三份饭刚刚好。美味程度没到特地来吃的程度，如果是住在附近可以来尝尝，很家常的口味，在这里吃饭不会觉得自己像游客更像住在附近的居民中午来解决一下午饭。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/84f79e86ac468848c10b817bd174f451.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Grandpa Home Kitchen &nbsp;47/25, Suthep Rd, Mueang Chiang Mai District, Chiang Mai 50200泰国</figcaption></figure><p>餐厅对面有一家网红咖啡店，在泰国每天起码要喝一杯冰饮，四天已经记不清喝了多少杯饮料。点完餐后我们就去咖啡店买了喝的，咖啡饮品比较普通不难喝也不算好喝，第二天早上我们在这里买了蛋糕当早餐，招牌的一款蛋糕（不记得名字）口感非常惊艳，底部用的不是蛋糕胚而是香蕉，入口极其丝滑。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/11d07f6cb332b3a80576811ed4f0038e.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Me&amp;Bacon (Head Store) 47 และ 41 Mu Ban Suthep Alley, Tambon Su Thep, Mueang Chiang Mai District, Chiang Mai 50200泰国</figcaption></figure><p>下午的行程就是经典的清迈逛集市路线：艺术村——JJ Market——宁曼路。</p><p>论东西的独特性还是艺术村，时间充裕的还可以体验手工，虽然价格不是很美丽但精致漂亮的小东西确实很吸引人；宁曼路我觉得会比JJ更好逛，四五点左右周围就支起很多摊位，东西多且价格合适，还在这里买到了这次旅行最爱之一的伴手礼——象粪做成的笔记本。以为是纯概念产品但意外的好写，现在变成我的旅行随身本，用来记录旅行中发生的美好事情。</p><figure class="image ss-img-wrapper image_resized" style="width: 590px;"><img src="https://cdnfile.sspai.com/2025/05/10/d7b9e8473b6c460c22c6b42959621666.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>艺术村</figcaption></figure><p>傍晚时分我们到了清迈大学静心湖，坐在湖边看日落、聊天。每一次旅行最幸福的时刻就是找到一个舒适的地方坐下来静静地享受风景，和朋友一起谈天说地。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/ac87ff965cf76400f5acc165606deb63.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>天黑后的清迈温度明显降低，晚饭我们选择在清迈大学夜市购买小吃带回到民宿吃。一到门口隔壁邻居养的橘猫就踏着小步伐“昂～昂～昂～”地出来迎接我们，把东西摆在餐桌上坐下来准备开餐，小猫也跟着爬到腿上趴下。伴随着不断地飞机起飞声，夏夜晚风，趴在腿上睡觉的小猫，平淡又舒适地度过了在泰国的最后一个晚上。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/5f45db00f18e51861db78bcbd295ec37.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h4>第二天</h4><p>最后一天的下午需要赶回程的飞机就没有安排太多的行程，早上预约了清迈当地比较有名的spa，在马上要回归社畜生活前再放松一下。</p><p>之前的马杀鸡感受实在太深，这次选择了泰式草药按摩，是用草药包来按摩身体，力气不会有马杀鸡那么大，而且草药包是热的，按在身上非常舒服。走了这么多路最后一天来体验草药按摩绝对是个不错的选择，按完后整个人神清气爽。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/05/10/054ec1e51df2d701422aa014938184da.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/05/10/5980af1d52e33c3f6c8565cb2c479b68.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在泰国的最后一餐选择了来体验泰式火锅，搜索到的几家泰式瓦罐火锅都要到晚上才开门营业，好不容易找到一家11点营业的，但上菜后发现就是普通的卡式炉+锅的配置。但汤底和我们国内的火锅非常不一样，看起来像是中药，但味道意外的还不错，加上肉的品质也还不错，稍稍扭转了我们失望的情绪。不过打抛饭和猪颈肉味道一般般，属于在泰国吃到最普通的一顿打抛饭。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/744683fa58b30275c3c662f2c26455ad.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>吃完午饭回民宿取完行李打车到清迈尚泰购物中心机场店，这里可以寄存行李，根据行李箱的不同尺寸和时间收费，保留好寄存单还可以免费搭乘商场的接驳车去机场，不需要行李寄存的凭借商场的任意消费小票也可以乘坐，每15分钟一趟。</p><p>不过这个商场本身并没有什么值得逛的地方，最后还是在google地图上搜索最近的咖啡店打发时光。</p><h3>写在最后</h3><p>假期回来后就开始了忙碌的工作，过去了快一个月，去过哪些景点已经没有那么清晰了，但一动手码字就可以想起在泰国那种炽热但又悠闲的感觉。虽然不过短短四天，行程匆忙但在泰国感受到了这里能成为世界热门旅游城市的原因，所有服务人员的热情，热带的风光，美味的食物，自由的小猫……泰国的精彩在于不用做多么细致的攻略你只需要来到这里就可以感受到。</p><hr /><p><i>注：文中所有图片均使用理光GR 3X拍摄</i></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/99083</id>
            <title>告别虚拟「桌面」：用热敏打印机，让信息填满你的真实物理空间</title>
            <link>https://sspai.com/post/99083</link>
            <guid isPermaLink="false">https://sspai.com/post/99083</guid>
            <pubDate></pubDate>
            <updated>Sun, 11 May 2025 23:15:44 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 热敏打印机,物理笔记,数字与物理结合,信息管理  
<br>  
<br>  
总结: 文章探讨了数字信息管理的局限性，提出通过热敏打印机将数字笔记转化为物理卡片的方法，以打破数字与物理的界限。物理笔记具有空间化组织、自由关联和常驻提醒等优势，能激发新的思考维度。热敏打印机因其小巧、便捷和低成本的特点，成为实现这一理念的理想工具。作者建议以数字记录为主，定期打印重要信息，并通过桌面摆放和每周整理，实现信息的自然回顾与长期保存。这种方法结合了数字工具的高效性与物理实体的触觉优势，旨在优化信息交互体验。最终，文章倡导在数字化时代重新引入物理实体，以提升信息管理的效果。 </div>
                        <hr>
                    
                    <p>我们每天都在和电脑的「桌面」打交道，但这只是一个隐喻。信息被囚禁在发光的屏幕之后，我们触手可及的、真实的物理桌面空间，却往往被闲置。我们习惯了在数字世界里管理信息，却可能忽略了物理实体带来的独特优势。</p><p>今天，我想分享一个方法，尝试打破数字与物理的界限，利用<strong>热敏打印机</strong>将数字笔记带到真实的桌面上，让信息成为我们工作环境中可见、可触的一部分。</p><h3><strong>为什么选择物理化？屏幕之外的思考维度</strong></h3><p>我们当前的许多数字工具，虽然强大，但也存在局限。信息被封装在应用窗口和层级菜单中，它们的呈现方式是扁平的、短暂的。我们点击、滚动、切换，但很少能像处理实体卡片那样，将不同的信息并置、重组，从物理排布中获得新的启发。</p><p>Bret Victor 曾有一个深刻的观点：</p><blockquote><p>计算机相关的事物不应该由屏幕上稍纵即逝、虚幻的图像构成，而应该由真实的实体事物组成，这些事物能让人们全身心地进行思考。计算机应该是一个物理环境。只要计算存在于无形的虚拟世界中，人那种把想法当作实体事物来处理的广泛能力就无法得到充分发挥。这些实体事物是可以用眼睛看到、用手操作，并放置于物理空间之中的。</p></blockquote><p>将笔记打印出来，放置在物理空间中，正是对这一理念的实践。它让信息脱离了屏幕的束缚，拥有了物理形态。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/c2e9b1d51b9de691ecb87fcaf3477ec3.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3><strong>热敏打印机：低成本、高效率的物理化工具</strong></h3><p>你可能会问，为什么不用传统打印机？传统打印机当然也可以，但热敏打印机在这个场景下有其独特的优势：</p><ol><li><strong>小巧便捷</strong>：热敏打印机通常体积很小，不占桌面空间。打印无需墨水或碳粉，只需要热敏纸，耗材更换简单。</li><li><strong>适合卡片笔记</strong>：很多热敏打印机使用的纸张尺寸更小，非常适合打印待办事项、关键概念、快捷键提示等短小的笔记，形成一张张信息卡片。</li><li><strong>快速即时</strong>：需要时可以快速打印一张，成本相对低廉，没有打印一张 A4 纸的“心理负担”。</li></ol><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/3898155013940b850df12ae19eac9dda.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3><strong>物理笔记的妙用：堆叠、关联与“偶遇”</strong></h3><p>当笔记以实体卡片的形式出现在你的桌面上时，奇妙的事情发生了：</p><ul><li><strong>空间化组织</strong>：你可以把相关的卡片堆叠在一起，按照项目或主题分区放置。信息不再是列表，而是有了空间维度。</li><li><strong>自由拖动与连接</strong>：你可以随意拿起、移动、重新排列这些卡片。这个过程本身就是一种思考和整理。将两张看似无关的卡片并排放在一起时，你可能会突然发现它们之间隐藏的联系，这种“物理碰撞”带来的启发是纯数字工具难以模拟的。</li><li><strong>常驻提醒</strong>：像常用的快捷键、重要的原则、需要聚焦的任务，打印出来放在眼前，比藏在某个应用深处要直观得多。例如，你可以把当前最重要的三个任务打印出来，放在显示器下方，时刻提醒自己。</li></ul><p>我碰巧还了发现一个绝佳的展示位置：<strong>键盘和显示器底座之间的缝隙</strong>。这个位置天然形成一个倾角，非常适合查阅，而且它就像是你操作系统 Dock 栏/任务栏在物理世界的延伸，那些你需要快速触达或保持关注的信息，就应该“停靠”在这里。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/a113d2fa6940d01e6602708050a69cee.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>真 · Dock</figcaption></figure><h3><strong>让回顾自然发生：融入环境的知识管理</strong></h3><p>数字笔记的回顾往往需要依赖推送通知或专门设定的复习时间。而物理化的笔记，因为它<strong>常驻在你的视野范围内</strong>，回顾变成了一种更自然、更被动的行为。</p><p>你不需要刻意“打开”某个应用去复习，只需要在工作间隙，目光扫过桌面，就能与这些知识点或提醒“偶遇”。这种融入日常环境的信息接触，潜移默化地加深了你对信息的理解和记忆。</p><p>我的实践流程是：</p><p><strong>数字记录为主</strong>：依然在熟悉的笔记软件（如 Draft, Flomo 等）中捕捉和记录想法。</p><p><strong>定期打印</strong>：每周或根据需要，筛选出 Inbox 中需要处理的事项、近期重要的笔记、需要记忆的知识点等，用热敏打印机打印成卡片。</p><p><strong>桌面常驻</strong>：将打印出的卡片放置在桌面的固定位置（如键盘前）。</p><p><strong>每周更换与整理</strong>：每周回顾一次桌面上的卡片，完成的任务、不再需要的可以移除。其中一些有长期价值的卡片，我会根据一定的规则（比如某个项目的核心要点、某个领域的关键原则）筛选出来，整理并粘贴到一个小小的实体笔记本中，作为长期参考。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/10/80d30bfb89f0cfa4e1b8b4528644f66e.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我称之为「实体笔记 APP」</figcaption></figure><p>在地铁上，比起用手机来回顾笔记，这个实体笔记本的浏览体验会更加沉浸，我开玩笑把它比喻成一个笔记 APP，它有真实的墨水屏，拟物化设计，翻页交互等...</p><p>当然，这个流程并非要完全取代数字笔记，而是<strong>数字与物理的结合</strong>。数字工具负责高效收集、存储和搜索，物理卡片则负责高频触达、视觉提醒和激发思考。</p><h3><strong>结语：找回与信息交互的物理触感</strong></h3><p>在这个一切皆可数字化的时代，重新引入物理实体，或许能为我们带来不同的思考视角和工作体验。用热敏打印机将关键信息固化为可触摸的卡片，放置在你触手可及的物理桌面，不仅是对空间的有效利用，更是对 Bret Victor 所倡导的“实体计算”理念的一种实践。</p><p>这不仅仅是为了“好看”或“复古”，而是关乎我们如何更有效地与信息互动，如何让知识更好地融入我们的工作与生活。如果你也感觉信息被困在屏幕之后，不妨试试这个方法，让你的想法和知识，在真实的桌面上“活”起来。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/98616</id>
            <title>镁光CL46 出厂即灰烬？阿斯加特·海拉5600内存评测报告</title>
            <link>https://sspai.com/post/98616</link>
            <guid isPermaLink="false">https://sspai.com/post/98616</guid>
            <pubDate></pubDate>
            <updated>Thu, 08 May 2025 02:28:03 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: DDR5内存, 镁光A-die, AM5平台, 内存超频  

总结: 本文评测了阿斯加特海拉5600 DDR5内存，采用镁光A-die颗粒，在AM5平台上的表现。DDR5相比DDR4在PMIC供电管理、散热马甲、Bank数减半等方面有显著变化。文章指出DDR5 6000是锐龙7000/9000的甜点频率，不建议超过6400。测试中，该内存可在1.35V电压下稳定运行在6000频率，并通过了TM5拷机测试。文章还提供了内存超频的详细设置建议，强调主时序调整和主板自动训练的重要性。最后，作者认为当前AM5平台下，普通用户无需追求高价海力士内存，镁光A-die已能满足需求。 </div>
                        <hr>
                    
                    <p>354元的双16GB DDR5套装，涨到了372元都没人出评测。</p><p>没作业可抄，那就卷袖子自己写~</p><p>镁光CL46颗粒版本的阿斯加特海拉5600，开测。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/14d418ea8bfd56c15bfe8465c27b6524.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>平台</h2><p>DDR5标准，是Dram内存历史上变化最大的一代。</p><p>诸多技术参数不提，同比DDR4，用户感知最明显的几个变化：</p><ul><li>集成<strong>PMIC</strong>供电管理芯片，外观神似服务器ECC内存，<strong>PCB温度</strong>可监控</li><li>速率增加，即便默认电压下降0.1V，内存颗粒发热量仍然显著提升，<strong>散热马甲</strong>成为标配</li><li>单颗粒容量倍增，8GB/12GB起步容量内存所需颗粒数减半，同时<strong>Bank数减半</strong>造成颗粒带宽不足，单条内存的选购底线来到<strong>16GB</strong>/<strong>24GB</strong></li><li>安全校验机制严格，对信号完整性要求极严，内存延时<strong>增加</strong>，开机及BIOS设置后重启速度显著拖<strong>慢</strong></li></ul><p>所以，闲鱼平台8GB、12GB的海力士<strong>原厂小绿条</strong>，联想/dell/HP品牌机拆换的那种，价格再便宜也不建议一般用户买。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/197611d29f1184bf9d0eb5a23a82aba5.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>雪上加霜的是，zen4/zen5架构的主线锐龙处理器，<strong>IOD</strong>内存控制器存在设计缺陷，DDR5兼容性问题突出。</p><p>不开机、卡自检、Debug灯常亮，连华硕都阴沟里翻船，个别型号甚至回炉重造。</p><p>论DDR5平台的匹配成熟度，当下还是：intel LGA1700 &gt; LGA1851 &gt; AM5</p><p>主板厂商绞尽脑汁优化布局走线，AMD也在持续迭代Agesa固件，AM5平台推出三周年之际，一二线主板的内存兼容性问题基本解决。</p><p>只是在锐龙7000/9000处理器上，chiplet胶水封装的弊端显现，IF总线频率严重受限：</p><ul><li>SOC一体化的锐龙8000G APU，Fclk频率上限高于<strong>2666</strong>Mhz</li><li>锐龙7000/9000的Fclk频率，仅少部分体质能达到<strong>2133</strong>Mhz</li><li><strong>Fclk</strong>总线：<strong>Uclk</strong>内存控制器：<strong>Mclk</strong>内存=<strong>2</strong>：<strong>3</strong>：<strong>3</strong> 频率同步时，效能最佳</li><li>DDR内存可上下同时传输，同一时钟周期2次操作，所以标称频率=<strong>Mclk</strong>真实频率 ×2</li></ul><p>说人话就是：<strong>DDR5 6000</strong>，是锐龙7000/9000目前匹配的甜点规格，最高不建议超过<strong>DDR5 6400</strong></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/ec06611c7cf91db6a97ad0f384199a8b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>规格</h2><p>阿斯加特是嘉合劲威旗下高端品牌，定位高于光威、酷兽，内存型号以北欧神话人物命名</p><p><strong>海拉</strong>，又译为赫尔，死亡女神，掌管冥界——第九世界，北欧众神宇宙的最下位</p><p>一如神话，阿斯加特的DDR5产品序列里，海拉目前是Zui廉价的型号，对应光威的天策系列</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/fe29365d23eae9f72f4e2182b952a15e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>保护壳贴上标签，简单塑封包装，符合定位。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/4037a8a6118c4047f14814f1c99d6c57.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>外壳号称“钛银甲”，阳极氧化哑光质地；线条简约上宽下窄，方便拔插借力。</p><p>好消息是没有越肩超高，坏消息是太过<strong>肥厚</strong>，双槽主板上亲密无间，还与散热器风扇<strong>冲突</strong>。</p><p>运行温度不妙。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/7dc3ed3ce143d165c9ac6e91a91ac36b.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/3f41079fd81ab0a1dd93046226c4d334.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>拆解就不必了，一是影响保修，二是看不出名堂。</p><p>根据同品牌其他型号的拆解，内存颗粒多半已经被厂商<strong>Remark</strong>，打上了自家标签。</p><p>毕竟嘉合劲威的内存出货量已经是模组厂前三，做一点定制化、甚至自行采购晶圆、委托代工封装，都不是难事。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/1cb499ded2ce22c6f242e9f57e244d83.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>使用Thaiphoon Burner台风，软件识别结果如图，DRAM颗粒信息未能完全读取。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/c77763671ce1948ba8f88e59df9b0647.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>对照镁光官网，<strong>MT60B2G8</strong>开头的DRAM颗粒有两种，规格近乎一致，区别在工作温度。</p><p>排除宽温的工业型号，核对默认时序后，确认使用的颗粒为 <strong>MT60B2G8HB-48B:A</strong></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/e15f9a6e2624c4c06fdb2824415dbf69.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>根据镁光的命名规则，可知：</p><ul><li>颗粒的出厂频率4800，电压1.1V，时序40-39-39</li><li>单颗粒容量为2GB，位宽8bit</li><li>8颗粒并联提供64bit位宽，16GB容量，规格为<strong>1R×8</strong>，满血bank</li><li>生产批次为A，即为镁光<strong>A-die</strong></li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/42783c885a160a77e94b374d7becd137.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>有个冷知识，目前零售市场能买到的内存条，基本为厂商<strong>预超频产品</strong></p><p>颗粒原始频率，即<strong>JEDEC</strong>（固态技术协会）标准频率，比你想象中要低得多。</p><p>以DDR4时代为例，稳定工作上限超过DDR4 4600的那几颗顶流产品：</p><ul><li>三星B-die，毫无争议的王者，<strong>JEDEC</strong>频率只有DDR4 2133</li><li>海力士CJR，DDR4-2666；海力士DJR，DDR4-3200</li><li>镁光C9BJZ、D9VPP，都是原始频率DDR4-2666的E-die</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/d88cf89ddd9321a59c9eaf3574de6862.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>A-die属于DDR5初期产品，在镁光自有体系里都是垫底，性能敌不过后续的B、D、G批次。</p><p>DDR5内存颗粒天梯里，也就比三星早期批次强一点</p><blockquote><p>海力士M-die(3Gb) &gt; 海力士A-die &gt; 南亚 &gt; 三星P-die &gt; 海力士M-die(2Gb) &gt; 镁光B-die(3Gb) &gt; 三星B-die(3Gb) &gt; 长鑫A-die &gt; 镁光A-die &gt; 三星D-die</p></blockquote><h2>性能</h2><p>高带宽影响游戏平均帧，低延时提升最低帧上限。</p><p>内存频率既然存在天花板，<strong>优化时序</strong>、<strong>降低延时</strong>，是AM5平台内存超频的主要手段。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/3e20e6a30ee4f6de8ac429b5ff4439ea.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>6000频率下时序能够压到<strong>CL28</strong>，海力士A-Die可谓AM5用户的梦中情人</p><p>价格砍半的海拉5600，我也没指望平替海力士；6000频率能点亮，已是心满意足了。</p><p>毕竟，我也不是无脑冲低价，下单前仔细对比过规格，镁光CL46颗粒的5600、6000型号，规格上仅有电压的区别。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/8fcbbdaffc389229eb755a6c750e3410.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>按下开机键，第一次启动，自检速度明显比去年7月那台快了很多，也没像AM4平台那样、弹出CPU安全策略重置的提示。</p><p>Del键进入BIOS，【Memory Context Restore】<strong>系统加速功能</strong>默认开启，再加上我用的是锐龙8400F，APU的内存控制器没有BUG，难怪主板的反应速度已经接近AM4平台。</p><p>更新BIOS至最新的Ver<strong>3.20</strong>，开启EXPO预设，ZenTimings信息与AIDA64跑分如下</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/2eaae8770256f969646fe0f92f060f3d.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>DDR5时代，AIDA64垂垂老矣，已经测不出内存的带宽极限，仅有延时可做参考；但仍看出两个问题：</p><ul><li>zen4的APU，居然跟单CCD的锐龙一样，<strong>内存Copy速度减半</strong></li><li>EXPO预设下，主板自动训练、<strong>优化了副时序</strong>，tRFC由SPD设定的1983，变为tRFC2一致的1076</li></ul><p>难怪5600G的市场价稳如老狗，还能逆势上涨，锐龙8000G阉割的这刀，捅到大腿根的主动脉了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/2176500587b10956211eb5f910461007.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>内存由默认的1.25V加压到1.35V，VDD、VDDQ电压同步至1.35V，内存频率拉到6000，Uclk内存控制器保持1:1同步，FCLK总线频率同步至2000Mhz，顺利开机。</p><p>TestMem5，使用锐龙X3D模式拷机十五分钟，没有报错。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/33e0a00b3f428cdb1a6599cc579aba98.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>看来，即便是低端颗粒，即便制造商已经筛选过体质，海拉5600买来当6000用，也不存在任何问题。</p><p>只是不要再去开启BIOS中的【内存高性能模式】，两档设置均无法开机。</p><p>一般用户，就抄这个作业；爱折腾的兄弟，接着往下看</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/a49cd831db3ccc12dfeadbecb9493810.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>超频</h2><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/5253226d70bcf39b8247ae39e8fd2294.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>内存超频极费时间，极易蓝屏死机卡自检，强制关机、重置BIOS可能非常频繁，开始之前请先做好准备：</p><ul><li>移除所有不必要的周边，譬如U盘；尤其注意<strong>HDD机械硬盘</strong></li><li>最好单独做个系统盘，超频完成、拿到参数后，win系统废除或<strong>重装</strong></li><li>面板没有Reset按钮的主板，请将机箱前面板的<strong>Reset重启键接线至Clear CMOS</strong></li><li>TestMem5提示需要管理员权限的话，请按以下操作</li></ul><blockquote><ul><li>【开始】-【运行】，输入<strong>gpedit.msc</strong>，回车</li><li>【计算器配置】-【WINDOWS设置】-【安全设置】-【本地策略】-【用户权限分配】-【锁定内存页】</li><li>【添加用户或组】，输入Administrator，【检测名称】-【确定】</li></ul></blockquote><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/b971867994770859df180f2ff8e530ad.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>玩DDR5内存，个人建议只动<strong>主时序</strong>、<strong>内存电压</strong>、<strong>SOC</strong>三项，其他全部<strong>Auto</strong>交给主板</p><ul><li>主时序就是tCL开始的四项，tRCDWRR和tRCDRD联动同步，所以一般只用动tCL、tRCD、tRP三个数，调节幅度±2</li><li>颗粒电压1.1V出厂，1.5V以下都安全，关键是颗粒吃不吃</li><li>SOC电压只跟Flck总线频率相关，2000Mhz以下1.2V，超过2000Mhz 1.3V，不要再超；<strong>达到1.35V容易IOD鼓包</strong></li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/3bcad52b0f55c00d4a21111ae74bd6cc.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>虽然我是用的锐龙8400F，极限超频意义不大，仅按照普通锐龙的玩法，开个6400频率。</p><p>内存电压1.40V，VDD、VDDQ电压保持1.35V，Fclk同步至2133Mhz，SOC电压来到标红警告的1.30V</p><p>第一把，34-44-44，tRAS副时序放松到最大值128，能开机，烤内存三分钟报错。</p><p>第二把，36-44-44，tRAS副时序继续128，内存半小时不报错。</p><p>副时序tRAS由128开始，每次下调6；压到92后，第14分钟TM5报错，最终稳定在98</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/ed42ee653d190a965fed5900466bc5ee.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>内存提升，网游帧数最敏感，尤其是FPS类网游。</p><p>使用CS2的官方测试基准，1080p默认最高画质下，相较默频、游戏平均帧提升<strong>9.3</strong>%，最低帧提升<strong>25.7</strong>%</p><p>此时的内存延时仅有<strong>65.6ns</strong>，拿到DDR4平台、也是可以满意的成绩。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/78ed7311cd3b735072f0832a6969e953.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>再看<strong>tREFI</strong>，这个数值跟刷新间隔有关，数值越大越好，可以很明显的降低延时；且与内存体质、电压没关系，只跟内存条的散热效能相关，开大后内存热量上升更快。</p><ul><li><strong>tREFI</strong> = 8192 x N + 8184</li><li>最小8184，最大<strong>65528</strong></li><li>因为16进制换算10进制的关系，主板的最大值65535是错的</li></ul><p>由主板默认的12463、拉满至<strong>65528</strong>，延迟下降近<strong>4ns</strong>，效果非常明显；但游戏帧数提升仅<strong>1%</strong></p><p>可以看到内存延时带来的游戏效能，正在<strong>边际递减</strong>。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/6fa41e7590c47d8da2436cd40a827d66.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>TM5拷机十五分钟，室温20℃下，内存PCB温度由55.5℃，升至57.8℃</p><p>左侧有CPU风冷，顶上有个机箱风扇抽风，这个温度并不稳妥，芯片温度远高于PCB，虽然HWinfo没有提示触碰95℃的温度墙、引发降频</p><p>玩贴贴的双槽内存，我可不敢这样长期使用，测试完还是得降回来</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/18a5e6b138e71f6f13d12a295e157001.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>其他</h2><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/8d6c6a450542c1222a8b8ed7207d34cf.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/07883d39aaccc29a9a84eda497417095.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>【Memory Context Restore】<strong>系统加速功能</strong>，可以加快系统重启、自检时间，但会增加2~3ns内存延时。</p><p>这个选项一般需和【Power Down Enable】<strong>内存节能</strong>同开同关。</p><p>华擎最新BIOS里，【Memory Context Restore】默认开启，两个【Power Down Enable】选项默认Auto</p><p>ZenTimings许久没能更新，目前BUG很多，AM5平台很多信息不能显示，【Power Down Enable】状态也是错的。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/54951b3a00e53043c6af37eb90b87a3c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>刨根问底，三个状态下都跑了测试，游戏也是每次跑四轮取中间值，结论如下：</p><ul><li>【Power Down Enable】Auto就行，默认状态会与【Memory Context Restore】同步开启</li><li>关闭【Memory Context Restore】仅能降低1ns延时，提升游戏low帧1.6%，但开机、重启时间会多40秒~1分钟</li></ul><p>建议按照主板默认设置，保持【Memory Context Restore】和【Power Down Enable】同步开启</p><p>最后，我还尝试压了一下tRFC小参数，参数好看了一点，游戏帧数却输了</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/3882864e5f2b2992592ca5819a793b72.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><strong>一二线主板现在的内存训练非常智能，自动设定的小参很接近极限</strong>，512的系统tRFC，压到480都会黑屏、半小时开不了机，设定到500，游戏低帧低了一大截</p><p>所以我说，只管主时序，其他Auto，交给主板自己训练。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/420b9fe4da5c47ccceb5f3f6b3ba2335.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>最后，我把内存电压降回1.35V，副时序改回auto，通过了30分钟的TM5拷机；内存PCB拷机温度56.5℃，10分钟游戏温度44.5℃，可以盖棺定论了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/d92b3ae264bb1d41561b029a85d2bc80.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>总结</h2><p>市面低价条的颗粒，要么镁光A-die，要么三星D-die，区别如下：</p><ul><li>二者耐压能力都很渣，基本过1.4V就黑屏躺平，点不亮</li><li>三星优在时序，主时序三数值可以完全一致的跑在<strong>36-36-36-76</strong>；镁光第二第三时序只能跑<strong>44</strong></li><li>镁光超频潜力强点，能跑DDR 6400，三星只能DDR 6000</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/ddabbddba3c3b153e5504e60829f62bc.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>同为CL46镁光颗粒，阿斯加特海拉5600的体验，明显好于去年的光威天策5600；当然，主板、BIOS和CPU都更匹配。</p><p>以AM5平台现状，也不建议普通用户追求高价海力士（专业FPS电竞玩家无视）。</p><p>2027年，传说中2nm新IOD的zen6发布了，御三家的DRAM制程也全部进入12nm了，整个生态会更加成熟，高性能DDR5的竞争也会更加良性，不会像现在这样，海力士独尊。</p><p>好价，就是好产品。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/a5f4c230dffa3c15c65a744dc0cbdad4.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><ul><li>【普通用户】使用EXPO预设，内存电压=VDD=VDDQ加压至1.35V，内存频率拉到DDR 6000，保持Flck 2000Mhz、Ulck 1:1同步即可</li><li>【进阶用户】CPU体质合格的情况下，SOC电压1.3V，Flck 2133Mhz，内存可以稳定在DDR 6000 36-44-44-98 tRFC512</li><li>相信主板的内存训练，尤其是一二线主板，主时序的三个数值外，建议全Auto</li><li>保持【Memory Context Restore】系统加速和【Power Down Enable】内存节能同步开启</li><li>散热条件好的四槽主板用户，<strong>tREFI</strong>可依次尝试16376、24568、32760、40952、49144、57336、57336</li><li>游戏才是检验内存超频稳定性的试金石，闪退、死机多半问题在内存上，可逐步放松时序，tCL +2，或tRAS +6，直至稳定</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/060791b39d6df86ebc226d6ab899318c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/22/b7c547808a093eb85b50458499497c54.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/98989</id>
            <title>焦虑如何而来，又如何消失</title>
            <link>https://sspai.com/post/98989</link>
            <guid isPermaLink="false">https://sspai.com/post/98989</guid>
            <pubDate></pubDate>
            <updated>Wed, 07 May 2025 09:26:54 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 焦虑, 杏仁核, 注意力, 血清素  
<br>  
<br>  
总结: 1. 焦虑源于大脑杏仁核的化学信号，是一种自我保护机制，但现代生活使其复杂化。2. 注意力分散与焦虑形成恶性循环，集中注意力是缓解焦虑的关键。3. 维生素D不足可能导致血清素缺乏，进而引发焦虑，需关注身体健康。4. 应对焦虑应避免盲目行动，需冷静分析并制定合理计划后再行动。5. 焦虑与恐惧相关，需直面或逃避，但需根据情况选择合适策略。6. 遗传因素使部分人更易焦虑，需接受并积极应对。7. 行动是解决焦虑的途径，但需避免情绪化决策。8. 焦虑是普遍现象，需通过生理和心理双重方式缓解。 </div>
                        <hr>
                    
                    <p>焦虑是回望你的深渊。是附身的恶灵，和脑子里的不停歇风暴。</p><p>虽然金凯瑞说：“我渴望大家拥有和我一样的名气和财富，这样你们就会知道，名和利解决不了任何问题。”我是不太相信这话的，大多数焦虑一定和钱相关。是可怜的存款，下跌的房价，亏损的理财，付不完的账单。</p><p>要解决钱的焦虑，又要通过具体的事情。于是干不完的狗屁工作，裁员的阴影，职业生涯的迷茫，搞不动的副业....暗无天日的焦虑就这样越来越多。我看着这些焦虑逐渐吞噬自己的生活，但又渴望从焦虑中走出来。</p><p>在对抗焦虑中，有了4，5年的失败经验后。我觉得可以静下来，从这些失败的经验中总结一下，如何面对焦虑，如何试图走出焦虑。</p><h2>焦虑只是大脑中一些化学物质</h2><p>焦虑从何而来？</p><p>具体来说，焦虑来自大脑的杏仁核。杏仁核会接收各种信号，识别其中有威胁的因素。当杏仁核检测到这些威胁后，就会释放化学信息，引起一些列的内分泌反应，最终让我们的大脑和身体感到焦虑。</p><p>这样的杏仁核，每个人有两个。它们就在眼睛的后面，大约在和耳朵对齐的位置。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/054481c349b72a322116c9f83e3fa373.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>头顶俯视图</figcaption></figure><p>所以焦虑本质上是一种自我保护，它让我们远离威胁。只是现代生活的复杂性，让我们裹挟在各种矛盾中，无法彻底抽身。</p><p>杏仁核能检测的信号不仅包含视觉，听觉，触觉。甚至还包括我们的想象，潜意识，记忆。这也是为什么有些事情即便已经过去很久了，依然可以引起我们的焦虑，像噩梦一样如影随形。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/b275ef9c50ac4075abf0751a1bbca495.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>人脸侧视图</figcaption></figure><p>此外杏仁核的功能和敏感性，有很强的遗传特性。所以很不幸，如果你的父辈比较容易焦虑，那么你很可能也比较容易受到焦虑的困扰，同样你的子女也更容易焦虑。杏仁核更敏感的古人类，更容易在危险的远古环境中活下来，而不是傻乐傻乐的那些。</p><p>这是自然进化的选择，也是自然进化的诅咒。</p><p>只要生活在现代生活中，问题永远会源源不断的产生。既然问题永远无法完全解决，那么当我感到焦虑的时候，也许我可以告诉自己，我所焦虑的并不是一个问题，那只是我脑中的化学信号而已。</p><p>就像我很喜欢的一个手机壳上写的：“允许它发生，允许它离开“</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/1e7b5a9072589d8eb5fdd6948d43a56c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>注意力越分散，越容易焦虑</h2><p>2017年谷歌发布了一篇论文，题目叫attention is all you need.&nbsp;</p><p>这篇论文提出了一种方法，可以让计算机在处理长文本时拥有类似人类的“注意力”。虽然当时这项技术并没有出圈，但是几年后，以这项技术为基础，大语言模型横空出世，计算机技术向AI迈进了一大步。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/592e6d1e52518f2b87d561afd701d9e1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>一个不太恰当，但便于理解的例子</figcaption></figure><p>机器因为拥有注意力而获得智能。人类则因丢失注意力陷入焦虑。</p><p>大脑的注意力，主要由前额叶皮层控制。在我们焦虑时，大脑会更加警觉，于是前额叶皮层会表现为注意力分散，并更容易识别负面信息。简单来说，就是焦虑时大脑更容易胡思乱想。恶性循环就此产生，越想越焦虑，越焦虑越容易想东想西。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/b2fabf99b4599fcf121bdf1b361d96b8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>焦虑-注意力丢失间的循环机制</figcaption></figure><p>注意力分散，在生理基础上就是和焦虑相互绑定的。而集中注意力，说起来很简单，实际可能是现代人最大的挑战了。工作，娱乐，生活。注意力就是流量，注意力就是资源，注意力就是一切。当所有人都在抢夺我的注意力时，我怎么可能不焦虑呢？</p><p>一天开５个会，回复几百条钉钉。打开手机，就有一张脸出来，教我做人。今天穿什么衣服，中午吃什么，假期去哪里玩。还不完的账单，种不完的草...</p><p>所以纳瓦尔宝典的作者说，应该像狮子一样，有策略的把注意力集中在少数事情上。我非常后悔，答应了一个同事，本周要帮他处理一个问题，但其实这个问题根本不紧急不重要。我只是出于“不好意思”才答应的。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/d5487ae7b72f3b4430e2fb9957b14091.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>图片源自网络</figcaption></figure><p>如果决定要集中注意力，就要选择支付一些代价。快速的买单离场，不要纠结具体价格。</p><p>如果无法集中注意力，焦虑只会越来越多。</p><h2>该吃药了</h2><p><i>为了避免本文看起来像软广，这一段刻意少写一点。服用任何药物前，请去正规医院体检。</i></p><p>最近的两年来，我感到持续的疲劳，嗜睡。可是我翻找每年的体检报告，又一切正常。鬼使神差的，我在五一假期前，突然想到去查一下维生素和微量元素。结果发现，我的维生素D只有12ng（正常应该在70ng左右）</p><p>而维生素D的不足，也会导致焦虑。</p><p>具体来说，维生素D是人体生成血清素的重要因素。而血清素可以帮我我们减少压力，不安，焦虑。同时亦能集中精神，控制睡眠和食欲。虽然血清素不产生快乐，但它更像是快乐的阀门。</p><p>关于维生素D和血清素，有非常权威的研究。各位可以自行查阅。</p><p>我想说的是：与其在心理上和自己搏斗。不如去开个化验单，然后跟具检查结果，有意识的调整饮食，服用补剂。即便每年体检，我们好像也很容易忽视检查一下维生素和一些微量元素。但其实这些不起眼的指标，可能会对人体情绪有巨大的倾向。</p><p>健康的灵魂，栖息于健康的身体内。也许长期的焦虑，不是你的心理问题，也不是你做错了什么，或者能力不行。只因为你的身体累了。</p><h2>行动，但不要盲目行动</h2><p>焦虑的时候，很容易陷入两个极端。要么迟迟不行动，要么盲目开始行动</p><p>焦虑就像一只推手，推着你恐慌性的寻找出口。这些盲目的行动消耗了我们的注意力，然后产生了更多未知的结果，反过来带来更多焦虑。</p><p>有段时间我一到公司就感觉躯体化不适，我疯狂的想逃离这个环境。我在上班路上，在公司厕所里，在茶水间。每天都刷一早上BOSS，找各种兼职，副业。于是我找了骗方案的小公司，日结的生鲜市场捞鱼，1条1块的数据审核兼职...&nbsp;这些事情消耗了我的精力，但是并没有解决我一开始的焦虑。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/478e65d8d99dd85552326cc3e5e284df.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>焦虑让我陷入盲目行动</figcaption></figure><p>所以如果你想为了解决焦虑具体做点什么，开始行动前先让自己平静一些，避免在情绪不稳定时做决定。然后一旦想清楚利弊得失了，就别再犹豫，尽快行动。</p><p><i>How to Stop Worrying and Start Living </i>一书中提供了一个很好的实操方法。找一张纸把自己的想法写下来，包含4项内容：</p><p>1.我焦虑的事情是什么？</p><p>2.能通过做什么事情解决这种焦虑&nbsp;</p><p>3.如果可以的话，最好和最差的结果是什么，我能接受吗？</p><p>4.如果能接受结果的话，就立刻开始行动。如果无法行动的话，就回到第2点，思考下有没有其它行动选项。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/05/08/7e6dc5c03e824acfe48801645df3754a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>鸡汤界的经典</figcaption></figure><p>只有行动可以解决焦虑。但是避免盲目行动，把自己带入新的焦虑里。</p><h2>尾声</h2><p>归根结底，焦虑来自恐惧。所以破除焦虑要么选择逃避，远远躲开。要么直面心魔，勇敢面对，冷静作战。</p><p>我也好羡慕，那些无忧无虑的人，不管面对什么烦恼都可以轻轻放下，潇洒快活。但如果我的DNA已经表达成这种焦虑的形状了，我也只能勇敢面对了。</p><p>几年前，当我刚迈进三十岁的时候。我读过毛姆的小说《刀锋》，当时我不太理解这个故事和刀锋有什么关系。直到今天，当我在三十五岁焦虑的海洋中沉浮时，我才理解小说扉页上的那句话：刀锋很难越过，因此得救之道也并不容易。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/98741</id>
            <title>笔记的策略：冗余设计、可靠性、高效发现和其他</title>
            <link>https://sspai.com/post/98741</link>
            <guid isPermaLink="false">https://sspai.com/post/98741</guid>
            <pubDate></pubDate>
            <updated>Mon, 28 Apr 2025 07:42:45 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 冗余笔记系统, 知识管理, 可靠性, 灵活性  
<br>  
<br>  
总结: 本文探讨了如何通过冗余设计提高数字笔记系统的可靠性和灵活性。冗余不是目的，而是确保系统在部分失效时仍能正常运行的手段。文章提出了五种实现冗余的方法：文件夹提供基础组织结构，标签实现灵活分类，链接建立明确关联，笔记命名增强可发现性，时间戳增加时间维度。同时讨论了冗余系统面临的挑战（如文件夹归类难题、标签混乱、链接滥用）及解决方案。冗余系统的优势包括提高可靠性、方便查找笔记、发现意外联系以及增强系统灵活性。最后强调需要在冗余与简单之间找到个人化平衡，避免过度复杂化。 </div>
                        <hr>
                    
                    <figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/26/33f95e50f5607bf6eadcfd4b1b33a8a1.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/26/d0e80c0ffdcbaa7f8f1b3ac2bd6144b7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><i>本文超过两万字，系统梳理了笔记系统的冗余设计、优点及实施思考。建议收藏后按需分章节阅读。</i></p><p>在数字笔记时代，我们有很多种方式来组织和管理我们的知识。然而，即使拥有最先进的工具，我们仍然面临着找不到重要信息或遗忘关键笔记的挑战。本文将探讨如何通过构建一个冗余系统来提高我们的第二大脑的可靠性和灵活性，让信息真正为我们所用。</p><h2><strong>冗余的本质：不是目的，而是手段</strong></h2><p>首先，我想强调的是，<strong>冗余从来都不是目的；冗余带来的可靠性和系统的灵活性，才是根本的目的</strong>。</p><p>想一想 SpaceX 的飞船设计：它们配备了多个发动机，确保即使其中一个发生故障，飞船仍然能够安全点火和发射。这不是浪费资源，而是一种安全机制。同样地，在我们的日常生活和工作中，我们常常准备备份计划，这本质上也是冗余的体现。</p><p>无论是航天飞机还是个人笔记系统，冗余的核心价值在于：<strong>当一个元素失效时，其他部分可以起到补充作用，保证整个系统的顺利运行</strong>。这就是我们今天要探讨的核心：如何在笔记系统中实现冗余，从而提高整个系统的可靠性。</p><h2><strong>打造冗余笔记系统的方法</strong></h2><p>这一节我会从文件夹、标签、链接、笔记命名、时间戳等角度来介绍如何打造一个冗余的笔记系统。其中，关于文件夹、标签、链接方面，我在之前的一篇文章中有详细的介绍，这里就不过多展开。感兴趣的读者可以到那篇文章中去了解。</p><h3>文件夹：基础的组织结构</h3><p>文件夹是最基本也是最直观的组织方式。在设计文件夹结构时，可以考虑以下几点：</p><ul><li><strong>不同类型的文件夹</strong>：可以根据工作和生活重心、项目、状态等创建不同类型的文件夹</li><li><strong>大致分类</strong>：文件夹应该起到大致分类的作用，不必过于精细</li><li><strong>适度嵌套</strong>：不建议使用过多的嵌套层级，因为这会显著增加系统的复杂性</li></ul><p>文件夹的作用是提供一个基础的结构框架，让我们能够在视觉上快速定位笔记的大致位置。</p><p>其实，文件夹结构的设计其关键不在于文件夹数量的多少或者层级结构的深浅。更加本质的问题在于：<strong>无论你采用什么样的文件夹结构设计，都能够在需要的时候通过文件夹找到对应的笔记；而这或许这比形式上的文件夹数量或者层级结构更加重要</strong>。因此，在设计文件夹结构时，我们应该牢记目的，而不应该本末倒置。</p><p>具体来说，我们可以采用大致的文件夹分类结构，并使用必要的子文件夹来细分主题。实际上，在命名文件夹时，我也采用与命名笔记时类似的策略。例如，假如某个文件夹包含归属于某个项目的笔记，该文件夹的命名就可以包含“Project”前缀以及表示该项目名称的关键词。这样，在文件夹列表中按照字母排序时，可以非常方便地看出哪些文件夹是关于项目的，以及这些项目包含哪些内容。</p><p>然而，仅仅依靠文件夹是不够的，我们需要更多的冗余机制。</p><h3>标签：灵活的分类系统</h3><p>标签提供了比文件夹更灵活的分类方式，可以跨越文件夹的限制，从多个维度对笔记进行分类：</p><ul><li><strong>不同类型的标签</strong>：可以创建表示主题、状态、优先级、项目等不同类型的标签</li><li><strong>按需创建</strong>：根据实际需要谨慎创建标签，避免标签过多导致系统混乱</li><li><strong>标签组织</strong>：使用相同前缀、嵌套标签等方式来减少混乱</li></ul><p>在我的系统中，标签的创建相比于链接要更加随意一些。虽然我不鼓励滥用标签，但相比链接，我对标签的使用要宽松一些。实际上，我使用标签主要是用来划分主题或标识任务；而且我会根据实际情况谨慎创建标签，因为添加过多标签可能会对未来重新利用标签和发现笔记带来困难，标签本身的管理也会变得比较混乱。</p><h3>链接：建立明确的关联</h3><p>链接是建立笔记之间明确关系的方式，应当谨慎使用：</p><ul><li><strong>明确关系</strong>：只在需要建立一对一、明确关联的情况下使用链接</li><li><strong>不同类型链接</strong>：可以链接到项目页面、入口笔记、相关笔记等</li><li><strong>避免过度链接</strong>：不要为每个关键词都创建链接，这会导致系统过于复杂</li></ul><p>我对链接的使用比标签更严格。什么情况下需要采用链接呢？比如将一个笔记和另一个笔记链接起来；或将一个笔记链接到某个任务中；或者将某个任务链接到某个笔记中。<strong>只有在这种必须要使用一对一、建立严格联系的情况下，我才会创建链接</strong>。这种严格的标准确保了我的链接系统不会过于复杂。</p><h3>笔记命名：提高可发现性</h3><p>笔记的命名是一个经常被忽视但非常重要的冗余层面。一个设计良好的笔记名称可以大大提高其可发现性：</p><ul><li><strong>关键词</strong>：使用能体现笔记核心内容的关键词</li><li><strong>前缀</strong>：对于特定类型的笔记（如会议笔记），使用统一的前缀（如”Meeting"）</li><li><strong>人名</strong>：如果笔记与特定人物相关，比如，和某人讨论了一些事情，则可以在名称中包含该人的名字</li><li><strong>后缀</strong>：对于特定类型的笔记（如文献笔记），可以添加后缀（如”Note"）</li><li><strong>日期</strong>：适当加入相关日期，尤其是会议笔记或事件记录</li></ul><p>以会议笔记为例，我的命名通常包含：”Meeting"前缀 + 会议主题关键词 + 会议日期 + 创建时间戳。这样做的原因是，将来若想快速定位会议笔记，只需在日历中找到会议日期，然后通过搜索对应日期就能方便地找到相关笔记。</p><p>如果是与某个人的讨论，我会在笔记名称中添加那个人的名字，这样将来搜索人名时就能快速定位。</p><p>对于文献笔记，我会添加”Note"后缀，一眼就能辨识出这是一个文献笔记。当然，我也会在笔记内部添加表明"Literature Note"的标签，这样提供了另一层冗余保障。</p><p>如果笔记名称中包含特定关键词，我们可以在笔记的编辑窗口中输入关键词，就能够找到对应的笔记，方便地将笔记链接插入到当前笔记中。我们还可以直接调用命令输入关键词，找到对应的笔记，然后将链接插入过来。此外，我们可以定制查询笔记的代码，无论是使用 Obsidian Query 还是 Dataview 等第三方插件，我们都可以查询笔记名称中包含特定关键词的笔记，这样可以方便地进行批量处理。</p><p>通过这些命名策略，我可以非常方便地<strong>通过搜索关键词、日期、人名和前缀等直接定位到对应的笔记</strong>；很多时候不需要进入对应的文件夹，也无需查看链接便能找到它。实际上，通过关键词搜索并定位到对应的笔记，是我系统中非常常用的方式，而标签、链接和文件夹在此情况下可以作为备份方案。</p><h3>时间戳：增加时间维度</h3><p>时间戳是另一个重要的冗余层面，它提供了时间上的参考点：</p><ul><li><strong>笔记名称中的时间戳</strong>：表明笔记创建时间，增加查找的维度</li><li><strong>会议日期</strong>：对于会议笔记，包含会议日期便于日后查找</li></ul><p>为什么在数字笔记时代仍需在笔记名称中包含时间戳？这源于我的亲身经历：</p><p>刚开始使用 Obsidian 时，我尝试用网盘来同步笔记，结果发现笔记的创建日期或修改日期在同步到另一设备后被意外修改。这让我非常苦恼，因为如果想根据创建日期排序笔记，或者使用 Dataview 等工具进行时间维度的分析，数据就完全错乱了。我无法追溯笔记的实际创建时间，这使得笔记中的信息失去一个重要维度。</p><p>在传统的卡片盒笔记法中，时间戳作为笔记名称可能是因为当时没有数字笔记工具，只有纸质笔记。为了区分笔记创建时间并方便将来查找和链接，人们使用时间戳作为卡片名称。在数字时代，虽然有人认为可以完全依赖文件系统记录的创建时间，但我的经验表明这种信息并不可靠，特别是在跨设备同步时。</p><p>虽然我们可以通过链接了解想法的演变，但如果不知道笔记的创建时间，就无法理解这些想法是如何随时间演进的。因此，<strong>在笔记名称中添加时间戳，即使文件元数据中的日期被意外修改，我们仍能从名称中获取时间信息</strong>。</p><p>除了在笔记名称中添加时间戳，我还会在笔记的 Frontmatter 中自动插入创建时间，这样时间信息就有了双重保障。如果笔记名称被意外修改，Frontmatter 中的时间戳仍然存在。这种多层次的时间信息记录大大提高了系统的可靠性。</p><p>为了简化添加时间戳的过程，我开发了 <strong>Copy Metadata</strong> 插件。它可以一键为笔记名称添加创建时间信息。它的工作原理是这样的：我们刚开始创建一个笔记时，笔记的元数据中包含了创建时间这个信息。我们在创建它的初期，就利用这个插件给笔记附加创建时间戳。这样的话，将来在将笔记同步到其他位置或用其他工具处理时，笔记的创建时间这一信息不会因为意外而丢失。</p><h3>组合应用：实际的考量</h3><p>前面我们提到了多种方式能够帮助我们打造一个冗余的笔记系统。那么，具体到一个笔记的处理，我们可能采取如下方式：</p><ul><li>链接到相关笔记（比如，近期相关笔记、项目页面、入口笔记、看板、任务、提醒、日历等）</li><li>添加两个标签（如主题标签和任务标签）</li><li>移动到合适文件夹</li><li>重命名笔记以便体现其主题</li><li>为笔记名称添加日期、创建时间等时间戳</li></ul><p>当然，<strong>取决于笔记内容、主题、长度、重要性、紧急性、复杂度等，对其处理程度、处理方式、花费时间等都不同</strong>。比如，对于不太重要的笔记，可以选择当下能想到的一两种方式来处理；有时你甚至会意识到，这个笔记可能根本就没有必要记录下来。有了这样的思考，可能反而会减少你记录笔记的数量，减少你在不重要内容上的时间和精力消耗；从而也能从根本上让你有余力关注更加重要的内容，而不是将过多时间和精力分散在不重要的内容上。另外一方面，对于一个重要的、紧急的笔记，多花点时间和精力处理不也是理所应当的吗？</p><p>当然，不管是重要的还是不重要的笔记，有时由于主观和客观条件的限制，你可能无法采用多种方式来处理，这也完全正常。比如，在路上你只有手机，这种情况下捕捉想法是比较容易的，但链接、添加标签、命名等其他处理方式却不是很方便。在这种情况下，你能做的就是采取一两种最能促使你再次发现该笔记的方式来处理即可，比如添加一个提醒。</p><p>在电脑端记录一些想法、整理一些笔记时，如果你当下有更重要的事情要处理，那么可能也没有足够的时间来处理当下的笔记。你可能采取的方式是将其链接到提醒中、看板中或对应的任务中。这种处理方式的核心原则是：<strong>你并不是为了整理笔记而整理笔记，而是因为你整理的笔记服务于你的任务、项目和目标</strong>。因此，一旦将一个笔记链接到对应的任务、提醒中，就意味着这个笔记在一定程度上已经处理得足够了；因为在你执行那些任务时，你将再次看到这个笔记，到那个时候，再对这个笔记进行更深层次的处理也是完全可以的。</p><h2><strong>冗余笔记系统的挑战和解决方案</strong></h2><h3>文件夹归类难题</h3><p>使用文件夹归类笔记时，常常遇到的问题是：有些笔记不知道应该放到哪个文件夹更合适，尤其是当笔记内容涉及多个主题时。</p><p>有人可能会说，如果不知道把笔记放到哪个文件夹合适，可能是因为笔记过于庞大，主题太分散，建议将其分解为原子笔记。但这又会带来另一个问题：如果我将我现有的 10000 个笔记都分解为原子笔记，笔记总数量可能会达到 10-100 万个。这样庞大数量的笔记对于我来说几乎不可管理。更不要说我当前的笔记库还是在过去 5 年中积累的。10 年后、15 年后、20 年后，这个笔记系统会变成什么样子呢？其数量和复杂程度更加难以想象。</p><p>另一个常见建议是重新设计文件夹结构，但这忽略了一个事实：我们的笔记系统不是一个图书馆，我们也不是图书馆员，无法提前规划和预知所有可能的主题和发展方向。另外一方面，假如我们的想法和笔记只能按照预设框架发展，那不是很无聊吗？正是因为我们的想法和笔记主题存在一定的不确定性和不可预测性，才使得管理它增加了一定的乐趣，不是吗？</p><h4>解决方案</h4><p>面对上述问题，我的建议是：</p><ul><li><strong>遵循第一感觉</strong>：看到笔记的名称、主题和内容后，按照第一感觉将其放入某个文件夹</li><li><strong>随时调整</strong>：随着项目和想法的变化，把笔记移到当时感觉更合适的文件夹</li><li><strong>持续练习</strong>：随着练习的增多和时间的推移，你会越来越快地找到合适的归类位置</li></ul><p>此外，为了提高文件夹导航定位效率，我还开发了 <strong>Folder Navigator</strong> 插件。主要原因在于，传统文件夹导航方法需要手动展开和折叠文件夹树，这在有数百个文件夹的系统中非常耗时。我开发 Folder Navigator 插件正是为了解决这个问题——它允许你用关键词搜索文件夹，就像搜索笔记一样；然后可以直接跳转到目标文件夹，而不必手动浏览整个文件夹结构。</p><h3>标签混乱</h3><p>随着笔记数量的增加，标签系统可能变得混乱。现在我的笔记库中有 10000 个笔记，假设每个笔记有 1-5 个标签，那么整个系统中可能有 1-5 万个标签。即使去重后，标签数量也可能在 1 万这个数量级，这显然会带来管理挑战。</p><h4>解决方案</h4><p>面对这个问题，可以采取如下策略：</p><ul><li><strong>使用标签前缀</strong>：为相似类型的标签使用统一的前缀</li><li><strong>嵌套标签</strong>：利用嵌套标签结构组织相关标签</li><li><strong>利用自动补全</strong>：创建标签时使用编辑器的补全功能选择已有标签</li><li><strong>适时重命名</strong>：使用 Tag Wrangler 插件批量重命名相关标签（但要注意，这种操作无法撤销）</li></ul><p>尽管采取这些措施，一定程度的标签混乱似乎仍然难以完全避免，因为笔记库中的标签实在太多了。看着标签面板中，不知道什么时候能滑到头的标签就让我感到头大。虽然我们可以按照标签的使用次数、名称等进行排序，但有时仍然难以找到重要的标签，单纯因为标签数量多而且比较繁杂。</p><p>我们可能还会通过外部工具，比如 Readwise, Hypothesis, 微信阅读等，同步一些阅读高亮和笔记到我们的笔记库，而那里面有时会带来一些命名杂乱的标签。我曾经尝试过对 Readwise 的标签命名规则进行统一和规范，但后来放弃了，因为实在太复杂了。而且这还只是一个高亮同步工具，其他外部工具也会同步标签过来。不同的工具之间，它们的标签命名规则也不一样，因此你无法对它们进行统一。虽然尝试从源头解决标签命名的问题看起来是一个比较根本的解决方案，但出于现实原因，我们这里却无法从源头解决它。那么，我们只能尝试从其他角度去解决这个问题。</p><p>当我们换一个角度去看待标签管理这个问题时，会发现：<strong>问题的关键不是管理所有标签，而是能够在需要时找到重要的标签</strong>。这是所谓二八法则的一个比较好的应用示例，也是 PTKM 方法所强调的一个点：<strong>突出重点内容、抓住主要矛盾</strong>。</p><p>为了突出重点标签，我会<strong>为重要项目创建项目页面笔记</strong>。在项目页面中，我会将非常重要的标签放在那里，然后在标签下方中添加一个链接，这个链接可以定位到我最初注意到该标签的位置。这样，将来当我们想找到对应的标签时，只需去查看项目页面就可以了。这种方法对于管理少量项目非常有效，但随着项目数量增加到几百个，管理重要标签也会变得比较复杂甚至困难。这就需要更系统化的解决方案，这也是 Tag Index 插件诞生的原因。</p><p>通过 <strong>Tag Index</strong> 插件，可以方便地将关注的重要标签集中在一起，这样将来就能快速知道系统中哪些标签是重要的。除了放置重要标签之外，你还可以将其视为临时放置标签的地方，就像在管理笔记时，将特定笔记放到某个文件夹收集箱或者任务列表收集箱那样。当你发现一个可能重要的标签时，可以先将其添加到Tag Index中，之后再决定是否将其纳入长期管理的标签体系。</p><h3>链接滥用</h3><p>有些方法提倡为每个关键词创建链接，甚至主张完全不使用文件夹和标签，仅依靠链接。但这种方式在实践中可能导致严重问题。</p><p>想象一下，如果你的笔记库中有 10-100 万个原子笔记，并且每次提到重要关键词都创建笔记链接，图谱的复杂度将达到难以想象的程度。这不仅影响系统性能，也无助于实际使用。</p><p>我曾经尝试过查看笔记库中的图谱（Graph View），结果发现即使我的 M 芯片 MacBook 配有充足内存，打开这个复杂图谱时仍然会卡顿。更重要的是，这样的图谱除了看起来复杂外，实际用处有限。我可能一年只会看几次，然后感叹”哇，我的笔记库图谱多么复杂！”，满足一下我的虚荣心，仅此而已。</p><p>因此，我坚持<strong>谨慎创建链接</strong>，只在确实需要建立明确关联的情况下使用。</p><h3>笔记命名复杂</h3><p>如前所述，一个完整的笔记名称可能包含前缀、关键词、日期、时间戳等多个元素，看起来确实比较复杂。但这种复杂性带来的是未来检索的便利。</p><h4>解决方案</h4><p>为了笔记简化命名过程，我通常采用<strong>渐进式方法</strong>：</p><ol><li>创建笔记时先用简单名称（如在手机上快速记录灵感时）</li><li>同步到电脑后再完善命名</li><li>使用文本扩展工具（如 Espanso）快速插入日期、时间戳等</li></ol><p>例如，前段时间我要为一个项目会议做准备，需要思考讨论什么、演示什么。于是，我在回家的路上想到明天要开会，需要讨论几个要点内容，就在手机上创建了一个简单笔记，列出大纲。之后在电脑上，我为笔记名称添加了 Meeting 前缀、会议主题关键词、日期和时间戳，而这些可以利用文本扩展工具 Espanso 一键完成，整个过程非常快捷。</p><p>基于这个笔记的主要内容，我们可以非常方便地根据会议的内容、要准备的演示资料的类型和复杂程度等，选择不同的方式和工具来准备会议演示 PPT。比如，PowerPoint、Markdown、Obsidian Advanced Slides、Marp、LaTeX Beamer、Reveal.js、Jupyter Notebook RISE 等等。</p><p><strong>File Title Updater 插件</strong>：为了高效地统一和更新笔记不同位置的标题，我开发了这个插件。在实际使用中，我经常遇到这样的情况：修改了文件名但忘记更新笔记内的标题，或者在 Frontmatter 中的标题与实际标题不一致。这种不一致不仅影响美观，更重要的是可能导致搜索和引用混乱。</p><p>File Title Updater 能够一键更新文件名称、Frontmatter 和笔记一级标题中的名称，确保它们保持一致；这在笔记命名本身也体现了一定的冗余，从而提高了其可靠性。</p><h2><strong>AI 用于笔记管理的反思</strong></h2><p>考虑到 AI 技术的发展和应用，我想简单讨论一下利用 AI 帮助我们找到所需笔记这个问题。</p><p>当前 Obsidian 中有不少 AI 笔记问答插件，外部工具也有 Notebook LM、Reor、ima.copilot 等，而且 AI IDE 工具如 WindSurf、Cursor、Trae 其实也可以用于笔记问答的用途。这些工具利用 RAG 或其他相关技术基于我们的问题查找笔记系统中相关的文本片段，然后由 LLM 综合后给出回答。这个应用场景看起来很美好，但就我个人的使用体验来说，它存在着一些问题和不足。</p><h3>隐私考量</h3><p><strong>首先是隐私方面的问题</strong>：假如笔记内容比较私密或者敏感，我对把这类内容发送给一个可能使用私人数据来训练他们模型的行为持谨慎和怀疑的态度。虽然有些公司提供选项，让你选择不将自己的数据用于训练和改进他们的大语言模型；但是，一旦你使用他们的服务，你还是要把自己的数据提供给他们。作为用户，一旦你把数据交出去，就难以知晓他们会如何使用这些数据。此外，很多公司列出的隐私政策让普通用户真的很难判断他们将如何使用你的数据；而且，他们通常会声明保留随时更新隐私政策的权利。这使得普通用户在隐私保护方面处于更加弱势和被动的状态；一旦出现问题，用户的维权成本往往太高，即便用户意识到可以维权。所以，从更根本的角度来解决隐私问题，可能还是<strong>不把轻易敏感数据交出去</strong>。</p><p>当然，你可能会说，我们可以使用离线的大语言模型来进行笔记问答。比如，Ollama 和 LM Studio 就提供统一的 API 接口支持调用多种离线 LLM，包括 Llama 系列、DeepSeek 系列、Qwen 系列等。但是，其模型能力相较于 OpenAI 的 GPT 系列和 Anthropic 的 Claude 系列比如何就因人而异、仁者见仁智者见智了。当然不可否认的是，开源的离线大语言模型的能力也在逐渐提高，但 OpenAI 以及 Anthropic 的闭源、在线模型或许同样如此。</p><h3>问答技术</h3><p><strong>其次是问答技术的问题</strong>：无论是在线还是离线的模型，目前使用 RAG 及类似的技术根据我们的提问检索相关的笔记，然后将找到的文本片段综合起来利用 LLM 给出回复；但这种方式也存在一些问题。它回答问题时所基于的文本片段真的是你手动查找笔记时想要使用的内容吗？也就是说，它找到的笔记真的能够密切相关地回答你的问题吗？</p><p>当然，你可能会说 RAG 只是当前的技术，将来它可能会进一步发展。但另一方面，即便 AI 技术发展到了一定程度，能够帮助我们根据密切相关的笔记来回答我们的问题，但是可能还存在其他的问题。我们的想法和笔记之间确实存在一定的关联性，但这种关联性不一定是依照时间的演变而线性发展的。比如，你在日期 A 产生了一个想法笔记 A，在日期 B 产生了一个想法笔记 B，在日期 C 产生了一个想法笔记 C；但是，笔记 A、B、C 之间的关联和时间的演变关系可能不是线性的。根据我个人的经验，<strong>想法随时间的演变以及它们之间的关联往往是非线性的</strong>；单纯因为人的大脑不是线性的，你接触的周遭环境和信息等都也是非线性的。那么，AI 如何去理解这种非线性的关系和大脑的运作呢？</p><h3>理解和思考</h3><p><strong>最后是理解和思考的问题</strong>：即便将来 AI 的能力发展到能够克服我之前提到的一些障碍，但这也只代表 AI 的能力进步了，和人类无关。AI 能够根据你的笔记提供密切相关且符合你预期的问答，但这又意味着什么呢？这仍然只是 AI 给出的回复，并不代表你真正理解了；而且，可能会弱化你思考的过程，而这可能不利于理解你过往的笔记和想法。当我们想要与他人交流想法时，总不能让 AI 来替我们对话吧？在这种情况下，人会扮演怎样的角色呢？</p><p>当然，我并不是说我们不应该使用 AI 工具。实际上，我们可能很难避免这件事，我们也无法对科技的发展视而不见。事实上，我在语音转录、文本处理、编程等方面都使用 AI。只是我们需要以一种批判的态度来看待和使用 AI。终究，我们需要主动学习、主动思考，这样才能真正掌握知识。那些笔记才是为我们自己所用，而不是为 AI 所用。</p><p>AI 可以辅助我们完成工作，但不能替代我们完成工作。试想一下，如果我们今天所有的工作都能由 AI 来替代完成，AI 将来变得更加强大了，那我们还会有工作吗？所以，<strong>在使用 AI 时，我们要主动思考、保持批判性的态度</strong>；这样才可能避免将来的工作被 AI 取代，避免我们被 AI 取代。</p><h2><strong>冗余笔记系统的优势</strong></h2><p>前面我们介绍了可以用多种方式来打造一个冗余的系统，比如，文件夹、标签、链接、笔记命名、时间戳等，也提到了打造一个冗余的系统可能面临的问题和解决方案。那么具体来说，打造一个冗余的系统有什么优点呢？接下来我们将从几个方面来探讨这个问题。</p><h3>提高系统的可靠性</h3><p>冗余系统的一个明显优势是可以提高系统的可靠性。</p><h4>日常解释</h4><p>让我们先尝试用比较日常的语言来描述一下什么是可靠性，或者可靠性意味着什么。就像前面所说的那样，SpaceX 的飞船配置了多个发动机，这样即便一个发动机点火失败，仍然有备份的发动机能够确保飞船发射成功。</p><p>我们在工作和生活中会制定备份的计划，这也是提高可靠性的一个体现。当我们想要到达某个目的地时，需要制定交通出行方案。此时，地图工具会给出我们多个出行方案，比如，地铁、公交、打车、自己开车等。我们可以选择一个方案作为出行方式，而假如中途出现了变故，再切换到其他方案，最终能够确保顺利到达目的地。</p><p>我们想要乘坐飞机远途出行时，比如，对于国内航班，航空公司可能会建议提前两个小时到达机场；而如果是国际航班，通常会建议提前三个小时到达。这本质上反映了时间上的冗余，并且能够提高成功出行的可靠性。然而，<strong>时间上的冗余并不意味着在时间上的浪费</strong>。因为我们到达机场后，可以处理值机手续、完成安检等；之后仍然可以拿出电脑工作，或者用手机记录想法，亦或是进行娱乐、放松。我们总能找到一些方式来利用这段冗余的时间。</p><p>这些日常工作和生活中的例子表明，<strong>冗余能够提高可靠性，给我们带来安全感</strong>。这显然是冗余所带来的优点之一。</p><h4>理论解释</h4><p>前面我们用日常的例子讨论了什么是冗余，以及它所能带来的可靠性。现在，我们再尝试从<strong>概率叠加效应</strong>的角度来理解冗余和可靠性。</p><p>让我们做一个随意的假设：每采取一种措施处理笔记，就会增大 5% 的概率能够让我们将来发现它们。那么，采取 5 种措施的话，增加的总概率就是28%。如果每种措施使得笔记被重新发现的概率增加 10%，那么 5 种措施叠加后笔记被重新发现的总概率则达到61%。<strong>这种效应类似于投资中的复利</strong>，被巴菲特等人推崇。只不过我们这里把时间上的复利转移到了笔记的处理方式上而已，其本质和效果是一样的。</p><p><strong>我们在处理笔记时付出一点额外努力，未来重新发现它们的概率将大幅提高</strong>，这是一种高回报的投入。需要注意的是，采取多种措施处理笔记并不意味着一定会花费很多时间和精力。妥善处理的话，一两分钟就能完成。如果时间过多，说明某些流程或方式可以优化。例如，在添加时间戳时，可以用 Copy Metadata, Task Marker, Espanso 等工具辅助添加；在想要将笔记移动到特定文件夹时，也可以利用 Hazel、笔记移动插件等自动化工具来实现。</p><h4>处理措施</h4><p>即便采用多种方式、从冗余的视角来处理笔记有多个好处，我们仍然不必对每个笔记都采取所有措施来处理，而是可以<strong>根据笔记的重要性、紧急性、复杂度等，选择适当的处理深度以及时间和精力花费</strong>。</p><p>一个显而易见的道理是，既然是重要的笔记，那么相对来说，将来肯定会非常希望重新发现它们。因此，花更多的时间和精力、采取多种方式对其进行处理，也就理所当然了。而对于那些不是特别重要的笔记，可以采取相对较少的措施来处理它们，毕竟，它们不是很重要。长此以往，我们甚至可能会意识到，有些笔记根本不需要处理，甚至不需要记录他们，既然它们一点都不重要的话。而这反过来又可以为我们处理重要的笔记腾出额外的时间。长此以往，就形成了正反馈。至于什么是反馈和正反馈，我们可以将来再去讨论。</p><p>最后，无论是重要的还是不重要的笔记，我们有时都没有办法采取多种措施对其进行处理，甚至没有办法利用一种方式对其完全进行处理。比如，将其链接到相关的笔记、添加相关的标签等。那么，我们可以在笔记的开头添加一个提醒，提醒未来的我们把该笔记链接到其他笔记或添加一些标签；我们将来看到这个提醒时，假如觉得这个笔记仍然重要、这里的提醒仍然有意义，就可以按照提醒创建链接、添加标签等。实际上，<strong>在笔记中添加链接和标签处理相关提醒本身就是一种冗余设计，这相当于在时间的尺度上为将来的自己留下线索</strong>。</p><h3>方便找到需要的笔记</h3><p>冗余系统的一个核心价值在于它能够帮助我们发现和找到以前记录的想法。</p><p>让我先回忆一下探索笔记系统之前的工作和生活状态是怎样的。大约在九年前，我搞科研的想法可能会散落在不同的地方。比如，它们可能存在于 Word 文件、有道云笔记、OneNote、纯文本文件、纸质笔记本、便签、文献管理工具中。也就是说，我的想法、会议笔记等分散在多个工具和不同形式的媒介中。</p><p>乍一看，你可能会说，你的想法分散在不同的工具中，这本身不也是冗余的体现吗？但这与前面介绍的冗余概念完全不同。不同之处在于，这些散落在不同位置的想法相互孤立、没有关联。我想要找到一个想法时，非常费力，可能需要挨个检索每个位置。而至于如何在每个位置找到对应的想法，这又变得额外复杂。比如，在纸质笔记本中，我应该去哪里寻找某个想法呢？如果我后来产生了额外的想法，我该如何跟进和发展呢？这些都是问题，也让当时的我感到焦头烂额，整天焦虑不安。</p><p>而至于我是怎么打造一个系统（PTKM）来管理所有的笔记、任务和项目，让我脱离当时那种焦虑的状态；这个问题就复杂得多了，我们将来可以展开介绍。这里我仍然想要从冗余的角度来讨论如何找到需要的笔记。</p><h4>通过关键词找到笔记</h4><p>说出来可能有些出乎意料，但<strong>关键词是我找到期望笔记最常用的一种方式</strong>。但是，这里的关键词指的是笔记名称中的关键词，而不是笔记内容中的关键词。</p><p>假如我们搜索笔记内容中的关键词，当你在笔记工具，如传统的 OneNote，中搜索某个关键词时，可能给出很多相关的笔记。比如，我的笔记系统中有超过 10000 条笔记，那么搜索某个关键词给出一百个相关的笔记应该不是一件不正常的事情。当然，这并不是说搜索笔记内容中的关键词毫无用处；实际上，它可以作为一种备份方案，并且可以与其他方法结合，以高效地查找笔记。这点会在后面进行介绍。</p><p>与之相对，由于我们在笔记命名时已经包含了关键词、前缀、人名、日期等信息，直接搜索这些元素就能快速定位到相关笔记。例如，搜索“meeting”可以找到所有会议笔记；搜索某人的名字可以找到与该人相关的讨论记录。</p><p>具体来说，在 Obsidian 这个笔记工具中，我们可以通过如下方式来搜索关键词，找到需要的笔记：</p><ul><li><strong>笔记编辑窗口</strong>：当我们在编辑一条笔记时，想要引用另一条笔记，可以直接在编辑窗口中输入关键词（通常是用双方括号<code>[[关键词]]</code>包围），笔记工具会自动显示包含该关键词的笔记列表，让我们可以快速选择并插入链接。这种方式特别适合在笔记整理过程中快速建立笔记间的关联。</li><li><strong>命令面板搜索</strong>：在 Obsidian 中，我们可以使用命令面板（通常通过Cmd/Ctrl+P 调出）输入关键词，快速找到并打开相关笔记，然后将其链接插入当前笔记。</li><li><strong>批量处理查询</strong>：使用 Dataview 等插件，我们可以编写查询代码，找出所有笔记名称中包含特定关键词的笔记，这对于批量处理特定类型的笔记非常有用。例如，我可以查询名称中包含”project”这个关键词的笔记，这样可以列出所有项目页面笔记。</li><li><strong>笔记内容全文搜索</strong>：除了笔记名称，我们当然还可以搜索笔记内容中的关键词。这种方式虽然不高效，但可以作为关键词、链接、标签、文件夹等笔记检索方式的备选方案。</li></ul><p>简而言之，使用关键词搜索定位笔记是我最常用的方法。由于我的命名规则包含了丰富的关键词信息，我通常可以通过简单的搜索就能找到需要的笔记，而不必依赖复杂的链接追踪或文件夹导航。这种方法的效率非常高，特别是当我记得笔记的大致主题、日期或相关人员时。</p><h4>通过链接网络找到笔记</h4><p><strong>双链接可以建立两个笔记之间一对一的联系，形成明确的、可靠的连接</strong>。正是这种可靠的连接提供了查找笔记的明确方法，一种可靠的方法。具体来说，在 Obsidian 中可以通过多种方式借助笔记链接定位期望的笔记。</p><p><strong>笔记窗口底部的链接提及</strong>：在查看一篇笔记时，窗口底部通常会显示哪些笔记链接到了当前笔记（Linked mentions）。这让我们可以了解其他笔记是如何引用和使用当前笔记的，从而发现潜在的关联。这些反向链接常常揭示出我之前没有意识到的联系。</p><p><strong>入口笔记</strong>：我会为相似主题的笔记创建入口笔记（Entry note）。所谓入口笔记，我在创建时遵循前面提到的笔记命名原则：它的前缀通常包含“Entry”这个关键词，接着使用与入口笔记主题相关的关键词，最后添加时间戳。当我们想要查看某个主题的笔记时，可以到对应的入口笔记中定位。</p><p>需要强调的一点是，<strong>入口笔记的主题及其创建是无法预测的，我们只能随着笔记系统的发展和需要来创建入口笔记</strong>。我们可能会发现，一个入口笔记一开始只包含 2-3 条笔记，但随着相关主题的发展，它可能逐渐积累到 10 条、20 条、50 条，甚至更多的笔记。当我们意识到需要时，可以将入口笔记分割成更小的入口笔记。我这里所指的小，是指主题更加集中，且所包含的相关主题的笔记数量更少。关于入口笔记本身的创建、发展、演变等，将来可以展开介绍。</p><p><strong>项目页面</strong>：我为每个重要项目创建专门的项目页面，其中包含<strong>与该项目相关的重要链接、标签、项目行动笔记以及其他重要信息</strong>。项目页面本质上可以视为一个特殊的入口笔记，只不过其上链接的不只是笔记，还包括任务、标签以及其他重要信息而已。项目页面的命名同样遵循前面提到的命名规则，它的名称包括“Project”这个前缀、体现该项目目的的关键词，以及该项目页面创建的时间戳。</p><p>比如，下半年我需要参加一个学术会议，因此需要为此开发算法、测试算法、分析结果、撰写文章以及预定行程等。所有这一切所涉及的笔记、任务等都可以链接到该项目页面上。至于如何打造项目页面，我们可以在将来进一步介绍。</p><p>当我们需要查找与特定项目相关的笔记时，我只需打开对应的项目页面，就能看到所有关键链接。这些集中的链接集合为项目工作提供了便捷的起点。</p><p><strong>侧边栏的链接视图</strong>：Obsidian 的侧边栏视图显示当前笔记被链接到哪些笔记，以及哪些笔记链接了当前笔记。这种双向链接视图帮助我们理解笔记间的关系网络，快速导航到相关内容。</p><p>本质上，侧边栏的链接视图功能部分与<strong>笔记窗口底部的链接提及</strong>相似，只不过这里的链接视图需要打开侧边栏才能看到，而前者在笔记编辑器窗口的下方可以直接看到。两者的使用方法不同，但提供的功能本质上相似。</p><p><strong>块链接引用关系</strong>：至于什么是块链接，简单来说就是我们可以通过它方便地链接到某个笔记的具体行，而不只是这个笔记整体。至于为什么使用块链接而不直接使用笔记链接，这又涉及到我们应该记录长笔记还是原子笔记。这一点在之前的文章中有所提及，就不再展开介绍，但将来可能再去讨论。</p><p>利用 Strange New Worlds 这个插件可以方便地查看块链接的引用关系信息。简而言之，有了这个插件，每个 Block ID （块链接的一种标识）处有一个上角标，可以看到当前的文本块在哪个笔记中被引用。当然，借助该插件我们还可以方便地定位到对应的笔记中；这种块链接的定位功能提供了比较小颗粒度的文本链接引用关系的查看视图，对于系统中使用很多长笔记的情况尤为重要。</p><p>为了方便创建 Block ID，我还开发了一个额外的插件，叫 <strong>Timestamp Link</strong>。简而言之，这个插件在创建 Block ID 时，可以用当下的时间戳作为 Block ID。开发这个插件的根本原因是 PTKM 方法中情境的概念，而时间信息是情境中一个重要的部分。关于这个插件以及情境、时间戳等方面的内容，可以将来再做介绍。</p><p><strong>图谱</strong>：既然 Obsidian 是一个具有图谱（Graph View）功能的笔记工具，那么图谱这种查看笔记链接关系的方式自然也不应该遗漏。但可惜的是，就像我之前提到的那样，图谱，尤其是全局图谱，在我的 PTKM 系统中几乎没有实际意义，除了满足一下我的虚荣心而已。当然，局部图谱或许有一定的价值，只不过考虑到我前面提到的多种方式，局部图谱对于我来说实际意义也不是很大。</p><p>与图谱相关的一个第三方插件叫 ExcaliBrain，感兴趣的读者也可以去研究一下它，它可以方便地让你查看笔记之间的链接关系。</p><h4>通过 CANVAS 找到笔记</h4><p><strong>Canvas 简介</strong>：它是 Obsidian 后来推出的一个功能。简单来说，它提供了一种可视化的二维视图，用来显示笔记、任务等之间的链接关系。Canvas 功能的必要性在于，虽然笔记内部可以插入笔记链接，但我们在入口笔记中查看相关笔记链接时，它列出的仅仅是用线性的方式呈现的一些相关笔记而已；而那种线性的呈现方式对于复杂的笔记和任务关系来说是不够的。所谓线性和非线性，我们将来也可以详细展开介绍。</p><p><strong>非线性笔记和任务管理</strong>：具体来说，我们在 Canvas 上可以放置不同的笔记和任务；这些笔记内部可以包含其他的笔记链接，任务子条目中可以包含相关任务链接。同时，在 Canvas 上我们可以用箭头连接笔记和任务，或者仅仅是纵向和横向排列；这样可以组织笔记之间以及任务之间的链接关系。简而言之，<strong>就像画家在画布上作画那样，利用 Canvas 可以方便地实现非线性的笔记和任务管理</strong>。</p><p>其实一看到 Canvas 功能，我立刻想到的是悬疑片中警察办案时在白板上放置与该案件相关的各种线索，比如，照片、文字等，然后用连线的方式把相关的元素连接起来。因此，Canvas 用于笔记和任务管理也可以实现这样的功能。简而言之，它提供了一种可视化的非线性笔记和任务管理方式。</p><p><strong>Canvas 所提供的二维的、非线性的笔记和任务管理方式对于展现复杂的笔记和任务之间的关联以及依赖关系非常重要</strong>。本质上，Canvas 文件可以视为一种特殊的入口笔记以及入口任务，因为你可以在上面列出一些重要的笔记和任务。然后，这些笔记和任务的内部又可以查看其他相关的笔记。因此，可以把它视为一种特殊的、二维的、非线性的入口笔记和入口任务组织方式。</p><p><strong>Canvas 插件</strong>：实际上，正是因为我对 Canvas 功能的依赖，我才开发了 <strong>Canvas Format Brush</strong> 和 <strong>Send to Canvas</strong> 这两个插件。前者就像 Word 中的格式刷一样，可以复制粘贴 Canvas 卡片的大小和颜色；后者可以方便地将文本、笔记块和笔记链接发送到 Canvas 文件中，之后就可以方便地组织它们之间的关系。</p><p><strong>通过 Canvas 找到笔记</strong>：知道了 Canvas 的作用之后，通过它发现所需笔记也就水到渠成了。可以方便地定位到目标 Canvas 文件，然后查看上面列出的重要笔记和任务。之后，可以把这些笔记和任务作为入口，根据需要去查看其他相关的笔记及任务。当然，还可以通过 Canvas 文件上的箭头指示，从另外一个角度查看 Canvas 卡片元素之间的链接关系。</p><p>关于 Canvas 文件的命名，也采取前面相同的命名策略。可以使用“Canvas”这个关键词作为前缀，然后使用体现 Canvas 文件主题的关键词作为主体名称以及时间戳作为后缀。同时，我们可以将 Canvas 文件链接到诸如项目页面等合适位置；还可以把它放到专门的文件夹中。这样，我们可以非常方便地通过名称关键词搜索、笔记链接、文件夹等方式定位到对应的 Canvas 文件，然后查看其上的笔记、任务等。</p><h4>通过文件夹找到笔记</h4><p>文件夹是一种直观的笔记组织方式，它提供了重要的导航路径。我们可以基于文件夹通过多种方式找到需要的笔记：</p><ul><li><strong>大致分类浏览</strong>：文件夹提供了笔记的大致分类，让我们可以按主题、项目等浏览笔记。这种视觉化的组织方式有助于获取笔记整体概览。</li><li><strong>结合时间排序</strong>：在特定文件夹中，我们可以结合创建时间或修改时间排序，这样既有主题分类，又有时间顺序，便于追踪特定主题下的想法演变。</li><li><strong>Dataview 文件夹查询</strong>：使用 DataView 等工具，我们可以查询特定文件夹中的所有笔记，并按各种条件（如创建日期、标签、链接等）进行排序和筛选。</li><li><strong>Folder Navigator插件</strong>：文件夹导航的一个常见挑战是在复杂的笔记库中找到特定文件夹。传统方法是手动展开和折叠文件夹树，这在有数百个文件夹的系统中非常耗时。我开发 Folder Navigator 插件正是为了解决这个问题——它允许你用关键词搜索文件夹，就像搜索笔记一样；然后可以直接跳转到目标文件夹，而不必手动浏览整个文件夹结构。</li></ul><p>当然，一个非常自然的事情是，在管理文件夹结构时，当我们试图利用文件夹找到所需笔记时，可能会发现这个文件夹的命名方式不太合适。例如，如果在一个文件夹中积累了 50 个笔记，很显然这会导致在将来通过该文件夹找到相关笔记时不太方便。因此，在这种情况下，我会对文件夹进行分割。比如，关于 Obsidian 插件的开发，一开始我用一个文件夹来管理，但后来发现有关插件开发的想法处于不同的阶段和状态。有的处于非常初级的想法阶段，有的正在开发中，而正在开发的插件又包含多个插件。例如，现在我开发了 12 个插件，因此显然有必要使用更细粒度的文件夹结构进行分类。</p><p>根据需要调整文件夹结构，可以大大提高我们定位特定文件夹以查看相关笔记的效率。不仅仅是这种手动定位文件夹的方式，我们当然也可以利用 Folder Navigator 插件搜索我们的插件名称，然后可以非常高效地定位到该文件夹、查看相关笔记。</p><p>实际上，即便在文件夹本身的设计和使用方面，也从来不是单一的方式，而是冗余的方式。通过层级结构的设计，我们可以知道每个文件夹大致包含的笔记类型；通过使用前缀及关键词作为文件夹的名称，我们也可以高效地定位到不同类别的文件夹；而通过直接搜索关键词，比如插件名称，我们可以方便地找到对应的文件夹、查看相关笔记。因此，<strong>文件夹结构本身的设计及演化本质上也是冗余和可靠性的体现</strong>。</p><h4>通过标签系统找到笔记</h4><p><strong>标签提供了跨越文件夹界限的灵活分类</strong>。在搜索栏中输入标签（如 #Tag）可以找到所有使用该标签的笔记。这种方式特别适合查找特定主题或项目的所有相关笔记。我们可以通过多种方式触发标签搜索：</p><ul><li><strong>笔记窗口中的标签补全</strong>：在编辑笔记时，输入 # 符号会触发标签补全功能，显示现有标签列表。这让我们可以快速添加一致的标签，也能看到系统中已有哪些标签。</li><li><strong>标签面板浏览</strong>：Obsidian 侧边栏具有标签面板，显示所有标签及其使用频率。通过点击特定标签，我们可以查看所有使用该标签的笔记。</li><li><strong>Tag Index插件</strong>：我开发的这个插件专门解决标签过多难以管理的问题，它提供了一个集中管理重要标签的地方。通过这个插件，我们可以快速访问那些对我们最重要的标签，而不必在成千上万的标签中搜索。</li></ul><h4>通过时间维度找到笔记</h4><p>时间是组织和查找笔记的另一个重要维度。我们知道笔记的名称中可能包含日期和时间戳信息，笔记内部及 frontmatter 部分、笔记元数据等可能也包含时间信息。而我们在查找笔记的时候，可以结合这些时间信息来辅助我们定位需要的笔记。</p><ul><li><strong>笔记名称中的时间信息</strong>：如前所述，我在笔记名称中包含日期和时间戳信息。这使我可以直接搜索特定日期或以创建时间作为筛选标准，找到那天创建的所有笔记。例如，如果我记得在某次会议上讨论了一个重要想法，但忘记了具体内容，我可以通过搜索会议日期快速找到相关笔记。</li><li><strong>按修改时间排序</strong>：在笔记浏览器中，我们可以按笔记的修改时间排序，这有助于找到最近处理过的笔记。这对于继续未完成的工作特别有用。</li><li><strong>按创建时间排序</strong>：类似地，按创建时间排序可以帮助我们了解想法的时间线和演变过程。这对于追踪思想的发展历程非常有价值。</li><li><strong>Frontmatter中的日期</strong>：通过在frontmatter中存储日期信息，我们可以使用 Dataview 等插件按创建日期、修改日期或自定义日期字段查询和排序笔记。这为时间维度的分析提供了强大支持。</li></ul><p><strong>时间维度的搜索特别适合那些我记得"大约什么时候"讨论过某个话题，但不记得具体标题或内容的情况</strong>。例如，如果我记得上个月的项目会议中讨论了一个重要决策，我可以搜索那个日期加上“meeting” 关键词，快速找到相关记录。</p><p>最后想要补充的一点是，假如我对笔记内容做了一些添加，比如某个位置加了一行文字，我一般会在文字后添加一个时间戳（比如，<code>增加文本 📝 2025-04-22T12:00</code>），这样后来能够方便地知道当前这个位置的文本是后来添加的。假如我想找到后来添加的文本，同样我也可以利用全文搜索的方式搜索具体的日期，这样也能够找到对应的文本。</p><p>至于为什么不创建一个新的笔记，原因和创建长笔记而不是原子笔记是一样的：<strong>创建一个新笔记会增加笔记库的复杂度和管理的困难</strong>。当然，假如新增的文本篇幅很长、内容很重要，我会创建一个新的笔记；这样做的原因和出发点非常简单：<strong>相较于这可能会给笔记系统带来一些复杂度而言，创建和管理重要的笔记本身更加重要</strong>；毕竟，我们的系统就是为了服务于我们的笔记，尤其是重要的笔记。但是，假如笔记篇幅很短或者内容不是特别重要，那我就会用前面所说的方式在原先笔记集中添加它。而至于为什么在时间戳前面添加一个 Emoji 符号的前缀，单纯是因为 Emoji 符号在笔记中比较显眼：当扫视整个笔记时，能够一眼看出哪个位置是后来新增的文本。</p><h4>多种方式组合找到笔记</h4><p>这里想说明一下如何结合上面提到的几种方式找到需要笔记的具体事例。</p><p>如下为我找到一个会议笔记的过程：</p><ul><li>我依稀记得在某个会议笔记中记录了一些想法，因此，想要找到对应的会议笔记、回顾当时的想法。</li><li>因为召开重要会议时，比如科研项目会议，无论是线上还是线下，我们一般会把会议安排在日历中。因此，我通过搜索会议名称的关键词或查看会议的大致日期找到了那个会议。</li><li>因为我的会议笔记名称中一般包含当天的会议日期，就像之前提到的笔记命名规则那样，所以我直接搜索了笔记名称中的会议日期，想查看当天的会议笔记。然而，我怎么都找不到对应日期的会议笔记。</li><li>后来我意识到，我<i>当初在创建会议笔记时使用的日期是创建笔记当天的日期，而不是会议当天的日期</i>。自然，我也就无法找到那天的会议笔记，因为创建笔记那天并没有开会。</li><li>之后，我想到我的会议笔记名称中还包含“meeting”前缀，并包含会议的主题关键词。于是，我结合这两种方式再次尝试搜索，这样我就找到了几个笔记名称中包含前缀和关键词的会议笔记。</li><li>然后，我大致按照日期进行排序，例如，按照创建日期倒序排列找到的笔记。这样，我可以非常方便地查看某个日期范围内创建的所有会议笔记。此时我才意识到，原来我在创建会议笔记时，笔记名称中附加的日期实际上是会议日期的前一个星期。不过，通过这种方式，我最终找到了对应的会议笔记。</li></ul><p>从上述经历可以看出来，<strong>尽管在会议笔记的名称中会议日期出现了错误，但通过前面提到的笔记系统冗余设计，我仍然能够找到对应的笔记</strong>。显然，这体现了<strong>冗余系统的容错能力以及可靠性</strong>。</p><p>有时，我想查看某个主题的笔记，尝试了笔记名称关键词搜索，但怎么也搜索不到。后来我意识到，<i>我以为当时使用了某个关键词作为笔记名称的一部分，但实际上我使用的却是当下想到的关键词的同义词</i>；而这是非常正常的现象，因为我们的大脑、语言和概念体系就是这样运作的。当时我尝试了好几个同义词、中英文词汇都没有找到那个笔记，那么应该怎么办呢？幸运的是，当时记录那篇笔记时，我觉得它非常重要，因此我把它链接到了多个位置。后来我在看板和项目页面上找了一下，果然找到了它。</p><p>可以看出来，<strong>即便我们对当时使用的关键词出现了记忆偏差，但冗余系统设计使得我们仍然能够找到对应的笔记</strong>。找到这个笔记后，如果我觉得这个笔记的名称或其中的关键词可能不利于我将来再次发现它——毕竟这次经历了不少波折——我可能会重命名这个笔记，使其包含更符合我当下语言习惯的关键词。当然，重命名时可以使用我开发的 <strong>File Title Updater</strong> 插件，这样可以一键更新多个位置的笔记标题，而不至于花费过多的手动工作量。</p><p>在日常工作和生活中，通过上述冗余方式找到对应笔记的例子数不胜数。通过多样化的查找路径，<strong>冗余系统确保了我们能够从不同角度和维度找到需要的笔记</strong>。即使某一种查找方式失效（例如，忘记了笔记的确切名称），我们仍然可以通过其他路径（如链接、标签或文件夹）找到它。这种多重保障大大提高了系统的可靠性，让我们能够更加自信地将想法存入系统，因为我们知道将来能够找到它们。</p><h3>利于发现意外的联系</h3><p>期待将来能够有意外的发现、建立意外的联系，这不正是卡片盒笔记法的精髓吗？实际上，这也是最初吸引我探索卡片盒笔记法的原因之一，因为想想就觉得很奇妙。笔记系统的冗余设计正是实现这一目的的有效工具。从我五年来在 Obsidian 中打造 PTKM 系统的实践经验看，这种设计确实有效，<strong>我经常能够发现意外的想法并建立新的联系</strong>。</p><p>当我在一个笔记中想要创建与另一个笔记的链接时，我会用关键词的方式搜索相关的笔记。我可以在笔记编辑窗口中直接搜索相关的关键词，然后在找到对应的笔记后建立链接；或者单独用搜索界面的方式搜索笔记名称中的关键词，定位到对应的笔记，再将该笔记的链接插入。在这个过程中，我经常会发现一些意外的笔记：<strong>在搜索一个关键词时，可能会出现好几个甚至一二十个笔记；而这些意外的发现和联系，是我在建立这里的笔记链接之前所没有想到的，也是无法预测的</strong>。这些意外的发现和联系对于当下的思考来说经常有很大的价值。</p><p>当我们查看项目页面、入口笔记、笔记编辑窗口下方的笔记链接时，我们也常常能够找到意料之外的笔记：<strong>即便我们最初想找的只是一个笔记，但我们往往不可避免地会看到其他的笔记，而那些额外的笔记是我们所没有预料到的</strong>。之后，我们就可以随手把相关的笔记也链接起来。</p><p>通过标签的方式也是一样的：<strong>当我们在笔记编辑窗口中想要搜索一个标签的时候，我们会发现 Obsidian 会推荐我们相关的标签</strong>。主要原因在于，Obsidian 推荐标签的方式很多样和灵活，因为我们的关键词可能出现在标签的开头、中间或结尾。我们搜索一个关键词查看标签的时候，可能没有找到；此时，我们可能尝试同义词、中英文等。这样也能够发现意外的关联。</p><p>一个显而易见的事实是，通过笔记系统的冗余设计，我们能够获得意外的发现。在搜索一个特定主题时，我们可能发现其他相关但之前没有意识到的笔记，这些意外连接可能激发新的创意和见解。这正是知识管理系统最有价值的方面之一：<strong>不仅是存储信息，更是创造新的联系和想法</strong>。</p><p><strong>时至今日，我仍然能够每天都有意外的发现，每次都会让我感到惊喜，而这种体验是单一组织方式难以提供的。</strong></p><p>最后，我们需要时刻警惕的一点是，虽然冗余的系统能够使我们经常有意外的发现和联系，但我们应该以当前想要查找的笔记以及当前的任务和项目为优先级更高的事情，而不应因为那些意外的发现和联系而耽误我们的任务执行。毕竟，相比于那些意外的联系，实际完成那些任务可能更加重要。更为根本来说，<strong>我们的系统是服务于我们的任务、项目和目标的，而不是反过来</strong>。我们应该切忌本末倒置。</p><h3>增强系统的灵活性</h3><p>冗余系统的另一个优势是增强了整个系统的灵活性。</p><h4>多种处理选择</h4><p>有了多种方式处理笔记，我们就不必拘泥于单一方法</p><ul><li>不必因为某一种方式不完善而感到焦虑</li><li>可以根据具体情况选择最适合的处理方式</li></ul><p>举个例子，如果完全依赖链接而没有文件夹结构，当笔记数量达到数万甚至十万级别时，系统会变得极其混乱。我曾尝试在 Finder 中选中仅 100 个文件，都会出现卡顿，更不用说管理数万个文件了。</p><h4>多维度发现</h4><p>多种处理方式意味着有多种途径找到笔记</p><ul><li>增加了发现意外联系的可能性</li><li>提高了整个系统的适应性和韧性</li></ul><p>究其根本，多种处理方式在本质上提高了我们重新发现特定笔记、发现意外联系的概率，也提高了系统运行的可靠性。</p><h2><strong>冗余与简单的平衡</strong></h2><p>在构建冗余系统的过程中，我们不可避免地会面临一个问题：如何在保证系统可靠性的同时，避免过度复杂化？这是一个需要不断调整和平衡的问题。</p><h3>可靠性与工作量的权衡</h3><p>增加冗余确实会提高笔记系统的可靠性，但同时可能也会增加维护系统的工作量。以下是我在实践中找到的一些平衡点：</p><h4>重要性分级</h4><p>并非所有笔记都需要同等程度的冗余处理。对于核心项目、关键想法和重要参考资料，多花些时间进行全面的冗余处理是值得的；而对于临时记录、日常琐事或不太重要的灵感，简单处理即可。</p><p>例如，对于一个月度项目会议的笔记，花一两天时间（不一定是连续的）来处理也是合理的，因为这些内容可能会影响接下来一个月甚至更长时间的工作。而对于日常灵感或临时想法，可能只需要简单记录并添加一两个标签可能就足够了。</p><h4>渐进式处理</h4><p>不必在创建笔记的第一时间就完成所有冗余处理。可以先快速记录，然后在有时间时逐步完善。例如，先给笔记一个基本名称，放入临时文件夹，之后再添加标签、建立链接、优化命名等。</p><p>我经常在手机上快速记录想法，只给它一个简单的标题。之后在电脑上处理时，再逐步完善它的命名、添加标签、建立链接、移动到合适的文件夹等。这种渐进式方法确保了我不会因为担心完美处理而延迟记录重要想法。</p><h4>自动化工具</h4><p>利用插件和工具减少手动操作。正如前文提到的 Task Marker 和 File Title Updater 等插件，它们可以大大减轻维护冗余系统的工作量和负担。</p><p>例如，使用文本扩展工具（如 Espanso）以及我开发的插件 Copy Metadata 可以一键插入当前日期和时间戳，大大简化了笔记命名过程。同样，File Title Updater 插件能够一键更新多个位置的笔记标题，而不必手动更新。</p><h3>简化的艺术</h3><p>虽然笔记系统冗余能够带来诸多好处，但这并不意味着我们应该为了冗余而冗余。毕竟，<strong>冗余本身终究不是目的，它所带来的优势才是目的</strong>。因此，我们应该学会适当地对系统进行简化处理。这样可以在不损失冗余系统优势的情况下，使系统更加容易使用和维护。具体来说，我们可以从多个方面对系统进行适当的简化处理。</p><h4>减少不必要的复杂性</h4><p><strong>避免过深的文件夹嵌套、控制标签数量以及谨慎创建链接</strong>。此外，我们可以采取策略性的方法对笔记进行命名。至于为笔记名称添加时间戳，我们也可以使用合适的工具辅助进行，而不必手动添加。</p><p>我曾经尝试过创建非常深的文件夹结构，结果发现在笔记归类以及定位文件夹和笔记等多个环节都产生很大的阻力，浪费了过多的时间和精力。因此，现在我尽量保持文件夹结构相对扁平，最多两到三层嵌套；之后根据需要创建必要的文件夹。这些策略大大提高了笔记系统的维护和使用效率。实际上，我开发 Folder Navigator 这个插件也是为了文件夹和笔记导航效率。</p><h4>建立清晰的规则和流程</h4><p><strong>制定简单明确的笔记处理规则，这样在日常使用中就不必每次都重新思考如何处理笔记</strong>。例如，我为不同类型的笔记制定了对应的命名规则和处理流程：会议笔记总是以”Meeting”开头，包含主题关键词、日期和时间戳后缀；文献笔记总是以主题关键词开头，后跟时间戳以及 “Note” 后缀；从 Zotero 导入 Obsidian 的阅读高亮笔记也遵循特殊的命名规则，比如，<code>PaperLee2008HAD_How are doctoral students supervised Concepts of doctoral research supervision - Annotation</code>。</p><p>这里需要强调的一点是，我的笔记一般都会添加对应的时间戳后缀。而这里之所以没有为 Zotero 导入的阅读高量笔记添加时间戳后缀，是考虑了高亮笔记导入的特殊情况。我们在不同的时间点可能对同一篇文献做不同的注释或修改，但是，在我利用 Zotero Integration 插件把文献高亮和笔记仍然想要把他们保存在同一个笔记中。这才是我没有为这类笔记添加时间戳后缀的原因。所以，在笔记命名以及其他方面都会有一些特殊的情况存在，而这需要根据自己的需求具体确定。</p><p>当然，为了辅助创建不同类型的笔记，我们可以为不同类型的笔记创建不同的模板。这可以提高笔记创建和整理的效率，同时能够保证系统的冗余和效率。</p><h4>关注核心功能</h4><p><strong>不要被工具的所有功能所诱惑</strong>。专注于那些真正提高效率和可靠性的功能，忽略那些看起来炫酷但实际用处不大的功能。</p><p>例如，虽然图谱视图看起来非常炫酷，但我实际上很少使用它，因为在大型笔记库中它往往变得过于复杂而难以解读。相反，我更关注关键词搜索、标签和链接等核心功能，因为它们在日常使用中提供了更实际的价值。</p><p>例如，在软件的外观方面，我曾经尝试过很多不同的主题，因为第三方主题市场上存在太多主题，就像存在很多插件一样。但我最终还是选择了 Minimal 这个主题，因为它对我来说比较简洁，让我能够专注于笔记本身。当然，为了使文件夹看起来更加直观，我借助 Iconize 插件为不同类型的文件夹分配不同的图标。</p><h4>按需审查系统</h4><p><strong>接受系统不可能时刻保持完美的事实，按需审查和整理系统</strong>。比如，我通常会在意识到需要的时候，花一些时间整理我的项目页面、入口笔记、标签系统、根目录的笔记等。这比试图时刻保持完美一致要实际得多。</p><p>这里我之所以说当意识需要的时候再去审视和处理而没有说定期处理，是因为就像我停止了每周回顾那样，后来我意识到：<strong>一旦有些事情是我必须每周需要做的，我就会感到很大的阻力</strong>。因此，我后来采取的一个策略就是在需要的时候再去做，而不是必须定期做。因为“必须”这件事让我感觉似乎有人在强迫我去做一些事情，这样反而会给我带来很大的阻力和压力，让我产生了抗拒的心理。究其根本，可能是因为<strong>必须、定期去做这件事需要很大的意志力</strong>。就像一本书（我忘记了具体的名字）所说的那样，我们的意志力是有限的。因此，假如系统的运行需要消耗我们很大的意志力，那说明系统的设计本身可能存在优化的空间。</p><p>与之相对，当我们意识到需要处理这些事情时，是因为我们知道如果不去处理，系统就无法正常运行，也无法更好地服务于我们的任务、项目和目标。同时，我们的系统设计给了我们时间和精力去处理、维护和优化它。因此，我们知道做这件事是有意义的，也不会耽误其他事情。这反过来也能够调动我们的主观能动性，因为我们知道<strong>完成这件事能够让系统更好地服务于我们</strong>。这也再次形成所谓的正反馈。</p><p>关于按需简化和清理这件事，我还想要强调的一点是：什么时候需要优化系统，应该由自己来决定。这么说可能比较抽象，但是，我觉得可以遵守的一个原则就是：<strong>在平时使用你的系统时，不应该有很大的阻力；系统的设计和维护应该足够简单，以便更好地服务于你的任务、项目和目标</strong>。当你意识到你的系统在服务你的任务、项目和目标方面没有那么顺畅时，或许那就是对其审视、简化和清理的一个时机。当然，更加重要的是，<strong>维护你的系统这件事本身也不应该阻碍它所要服务的目标</strong>。这样解释可能仍然有些宏观和不具体，但我相信你会逐渐意识到系统维护这件事应该怎么去处理，以及什么是按需处理。</p><h3>个人化的平衡</h3><p>每个人的最佳平衡点都不同，取决于个人的人生阶段、工作职责、工作方式、项目性质、时间限制等等。关键是<strong>找到适合自己的平衡点，而不是盲目追求别人的系统</strong>。</p><p>例如，如果你主要处理短期项目，可能不需要太复杂的冗余机制；如果你从事长期研究，则可能需要更全面的冗余保障。同样，如果你每天只处理少量笔记，可以为每条笔记投入更多时间；如果你每天需要处理大量信息，则需要更高效的处理流程。</p><p>实际上，虽然这篇文章介绍了冗余系统的实施方式、优点等各个方面，但这些措施从来不是一蹴而就的，而是我在工作和生活中逐渐反思和摸索出来的。我们总是会经历这样的过程：意识到问题、想办法解决问题以及迭代优化解决方案。可以预见，这个系统将来还会逐渐演变。究其根本，<strong>我们自己是在变化的，而我们的系统是服务于我们的；那么，我们的系统随着我们自身的变化而变化也就理所当然</strong>。</p><h3>未来与当下的平衡</h3><p>在构建冗余系统时，我们常常面临一个重要的权衡：为未来的发现投入时间和精力，还是专注于当前的任务和项目。</p><p>虽然我们希望在未来发现意外的联系，但我们必须承认，"意外”同时也意味着这些发现可能会也可能不会出现。未来本质上是不确定的，而当下重要和紧急事务则是确定的，因为它们就在那里。<strong>花费过多时间和精力未来的、为不确定的发现组织笔记，而忽视当前的优先事项，不能说是一个明智的选择</strong>。</p><p>我的建议是遵循二八法则：<strong>为真正重要的少量笔记投入更多时间和精力进行组织、整理，为次要的更多内容投入较少时间</strong>。比如，对于关键的项目会议笔记或项目计划，全面的组织是值得的；对于一般性想法或不太核心的内容，基本组织就足够了。</p><p>记住，你未来的自我最终也会面临当下的问题。如果你为了不确定的、理想化的未来而忽视了确定性的现在，那么你何时才能真正享受到系统的好处呢？而且，冗余系统的目的是服务于你的思考和创造，而不是反过来。如果维护系统本身占用了太多时间和精力，以至于影响了实际的思考和创造，那就需要重新评估和调整系统了。</p><p>有一天，我在常去散心的公园台阶上，闭着眼睛、晒着太阳，听着音乐和周围的嘈杂声，突然产生这样的感悟：</p><blockquote><p>我们应该专注于当下。未来终将在某个时刻变成当下。如果把握不好今天，却一味追逐明天，我们又如何真正拥有未来？</p></blockquote><h2><strong>结语</strong></h2><p>建立一个冗余的笔记系统其本身不是目的，而是为了提高系统的可靠性和灵活性，为了方便在需要的时候找到笔记、发现意外的联系。通过合理使用文件夹、标签、链接、命名规范和时间戳等方法，我们可以构建一个既能可靠存储信息，又能灵活应对变化的个人知识管理系统。</p><p>重要的是，我们不必为了冗余而冗余。对于不太重要的笔记，简单处理即可；而对于关键信息，多一些冗余保障则是明智之举。这种平衡让我们既能保证重要信息不会丢失，又不会在日常操作中陷入过度复杂的困境。</p><p>我们应该记住：冗余系统的意义不在于完美处理每一条信息，而在于确保我们能够在需要时找到重要的信息。正如我的 PTKM 方法所强调的那样：抓住主要矛盾，突出重点内容，才是知识管理的核心。</p><p>最终，一个设计良好的冗余笔记系统会成为我们思考和创造的助力器，而不是负担。它让我们能够专注于当下的重要任务，同时又为未来的发现和联系留下可能性。这正是我在 Obsidian 中构建项目、任务和知识管理系统（PTKM）五年来的体会，也是我此刻想要与大家分享的核心理念。</p><h2><strong>相关阅读</strong></h2><ul><li><a href="https://sspai.com/post/98086" target="_blank">笔记的策略：文件夹、标签、链接、冗余和可靠性</a></li><li><a href="https://ptkm.net/obsidian-plugins">我所开发的 Obsidian 插件</a></li><li><a href="https://sspai.com/post/95086" target="_blank">如何负责任地使用 AI：批判性思维的实用方法</a></li><li><a href="https://sspai.com/post/98498" target="_blank">从混沌到清晰：五年 Obsidian 多笔记库管理策略反思</a></li><li><a href="https://sspai.com/post/91126" target="_blank">管理第二大脑：链接与归档的实用方法</a></li></ul>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/98084</id>
            <title>喂饭式装机 打造家庭娱乐中心</title>
            <link>https://sspai.com/post/98084</link>
            <guid isPermaLink="false">https://sspai.com/post/98084</guid>
            <pubDate></pubDate>
            <updated>Tue, 08 Apr 2025 14:37:38 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: HTPC, 游戏主机, 家庭娱乐PC, 蓝戟Arc B580  

总结: 文章讨论了HTPC（家庭影院PC）作为小众品类的历史困境，指出传统游戏主机的局限性，如独占游戏减少、硬件更新慢等。作者认为家庭娱乐PC能更好满足客厅需求，提供影视、游戏、投屏和健康优势。重点介绍了蓝戟Arc B580显卡的性能和配置建议，包括其在2K和4K游戏中的表现，以及如何优化AMD平台。最后强调了家庭娱乐PC在共享和互动方面的价值。 </div>
                        <hr>
                    
                    <figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/99ff21577e4a89e00d116fcbe2b4f23c.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>自打卖掉了PS4，妹夫一直嚷嚷着要买PS5。</p><p>一波反向安利，他干脆连switch都卖了，加上PS5的预算，装了一台家庭娱乐主机。</p><h2>客厅PC</h2><p>HTPC家庭影院（<strong>H</strong>ome <strong>T</strong>heater <strong>PC</strong>），一直属于兼容机的小众品类</p><p>二十年前的准系统霸主<strong>建碁Aopen</strong>，十年前的全铝品牌<strong>立人</strong>，无不折戟于此。</p><p>电视主机的游戏质量，专业播放器的解码能力，DVD片源的丰富便捷，HTPC一点也不沾边，价格还贵得多。</p><p>可谓伪需求，公主病。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/090cc742d37794b86983b931ff286726.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>如今，游戏主机不说日暮西山，使用体验大不如前</p><ul><li>PS XBOX独占游戏寥寥，第三方游戏多平台发行</li><li>DLC增量包，已经是游戏的重要组成部分和二次盈利手段，发行商更青睐PC平台</li><li>蓝光光盘逐渐停产，游戏发行网络化，倡导年卡会员</li><li>平均六年的换代周期过长，硬件机能跟不上主流PC水平，伪4K</li></ul><p>昨晚发布的switch 2，还能依靠全年龄向内容和创新玩法，明目张胆的区别对待、卖高价；包括初代NS在内的现有游戏主机，已经都能被PC平替。</p><p>家庭娱乐PC占领客厅，正当时：</p><ul><li>【影视】流媒体平台会员共享，无需额外购买大屏年卡；本地视频硬件插帧播放，畅享60帧顺滑</li><li>【游戏】3A大作视觉冲击感更强，怀旧主机、任家通吃，多人游戏增加家庭沟通</li><li>【投屏】NUC、迷你主机、笔记本、平板通过投屏，卧式、书房、阳台均可畅玩大型游戏</li><li>【健康】沙发上手柄操作，较键盘鼠标更符合人体工程学；大屏游玩，更不容易产生视觉疲劳、晕3D</li></ul><p>独乐乐，不如众乐乐。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/d86e9001b3475cb504aa2e0ffd81b544.gif" /></figure><h2>硬件配置</h2><p>游戏娱乐，挑大梁的必然是显卡。</p><p>我帮妹夫选的是<strong>蓝戟Arc B580 12GB双扇</strong>，代号“<strong>源</strong>”。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/a1e1766f5bb82a3e52bf1d088344e302.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>传统意义上的4K游戏卡，必须达到老黄家的70ti/80级别；B580是张入门2K卡，买的还是丐版，能用？</p><ul><li>B580基于Dx12研发，多数3A游戏中的表现，达到4060Ti级别</li><li>得益于<strong>12GB</strong>大显存，应对高分辨率和帧生成，不会捉襟见肘</li><li>分辨率越高，B580越猛；2K流畅的游戏，4K帧数下滑不多</li><li>媒体评测都以最高画质测试，优化部分设置、乃至降低到中画质，帧数流畅很多</li><li>大屏画质没显示器那么敏感，极端情况下，还有<strong>Xess</strong>、<strong>FSR</strong>3.1超分采样、帧生成，兜底帧数</li></ul><p>博主已经有了一张蓝戟B580光，一直放在客厅使用，自然敢打这个包票。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/cbf2b10647a340faa63430cee7ec63a7.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>其他配置，按照上期《喂饭式攒机 3月 AMD篇》作业，刚好也可以清一下家里的库存（露出尾巴了）</p><ul><li>板U、SSD、电源，都是早前闲鱼淘的</li><li>内存、显卡，促销好价手痒订的</li><li>机箱，是八折凑单买的（凑单再退单这事，脸皮薄不爱干）</li></ul><p>唉，仓鼠症得治。</p><span class="ss-linkCard">&nbsp;</span><p>解释一下外设</p><h4>手柄</h4><p>提到游戏手柄，一般人的认知，还停留在十年前：</p><ul><li>XBOX、PS、NGC原装手柄在金字塔顶端</li><li>PowerA、Hori、PDP第三方授权手柄其次</li><li>良值、北通之类的国产手柄居末</li></ul><p>如今，国产手柄代工厂已有两家上市，霍尔摇杆、微动按键、双模扳机，国产引领创新。</p><p>品控、手感、调教或许稍欠火候，功能、性能、耐用度已经全面胜出了</p><p>B站恰饭视频不谈，这是国外头部媒体给出的PC手柄评级</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/35511d69bd4a9b3377df9b689a1572f3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>具体到选购：</p><ul><li>【50元级】小鸡<strong>启明星</strong> 49元/79元</li><li>【百元级】八位堂<strong>猎户座2青春版</strong> 120元；飞智<strong>冰原狼3</strong> 145元；致动<strong>Y影翼</strong>[pro] 99元/149元</li><li>【Rich级】飞智八爪鱼4；飞智黑武士4；易速马绝影X20</li><li>【儿童手柄】八位堂 <strong>Lite2</strong> 130元</li></ul><h4>其他外设</h4><p>无线键鼠没有什么必要，还占地方，用其他键鼠装完机后，插个<strong>体感飞鼠</strong>遥控更方便</p><p>每个插口都带<strong>独立开关</strong>的USB HUB是必备的，用来插飞鼠/无线键鼠/游戏手柄的接收器。</p><p>延长到电视柜上，用什么就开什么，减少2.4G射频干扰，同时减少通讯距离</p><p>延长出来的wifi磁吸<strong>全向天线</strong>，也是这个作用，为了链接手柄蓝牙。</p><p>这都是老司机折腾出来的心得。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/15bf7c94c1c16880b69a5106f214ca2e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>硬件组装</h2><p>关注我这个博客的，貌似80后读者挺多，手生多年没攒过机了。</p><p>现在装机挺简单的，我着重讲一下各步骤细节，熟手略过。</p><h4>主板先装好CPU、固态硬盘、无线网卡、内存条、散热器，放一边备用</h4><ul><li>AM5插座保护盖不要动，放入CPU后压紧时会自动弹出</li><li>CPU左上角的小箭头，为防呆标识</li><li>AM5锐龙顶盖面积小，硅脂在中心划一个1cm长的十字/❌，无需抹平</li><li>内存条卡槽两侧不等宽，一般带标签那面朝向CPU，悠着点、不要大力出奇迹</li><li>先上内存条，再装这侧散热器风扇</li><li>一般风扇的风向，<strong>扇叶无梁面进</strong>，<strong>参数贴纸有梁面出</strong>（带有12VxA字样）</li><li>显卡插槽下侧SSD，不要使用过厚过夸张的散热片</li><li>无线网卡，先在手上安装好延长线，并用赠送的铁片限位（避免脱出）</li><li>如果wifi接口是盒、不是M.2插槽，<strong>螺丝要从主板底部固定</strong></li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/907663fd9560b9b7ff8b9fae256b3f85.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h4>机箱拆开侧板，由底部掰开前面板，在框架上先安装电源，和顶部、前部风扇</h4><ul><li>电源转接板带硬盘位、机箱长度足够、且有硬盘使用需求的，淘宝先提前买好单/双层硬盘转接板</li><li>电源挂入前，先插上电源延长线，确认电源开关在➖位</li><li>电源风扇面朝前面板（有时是侧板），尽量挂在最上面的卡口</li><li>确认<strong>CPU供电线长度</strong>，不满足背线要求的话，提前铺在主板下方、走直线</li><li>前部12cm风扇不一定有孔位，扎带固定三孔即可</li><li>拧螺丝前，请<strong>反复确认</strong>风扇的风向，出线位置是否贴近机箱底板</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/839e57ec0c75a82c64deee9087cabe1c.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h4>扣上机箱前面板、主板IO挡板，放入主板固定，接线</h4><ul><li>装机最大的悲剧，莫过于装完机，剩下一个IO挡板</li><li>新手/<strong>肥手</strong>，请把电源包装盒垫机箱里，主板<strong>接完前面板线</strong>、<strong>CPU供电线</strong>后，再拧螺丝</li><li>同为8pin，CPU供电线头印着“CPU”，显卡供电线印“PCIe”</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/c5ad1bc9e8e055fc6e84eabda715cdd2.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>前面板接线是新手装机的拦路虎，这里着重讲一下。</p><p>音频线、USB2.0、USB3.0/Type-C、开关按钮线，一般就这些，最多还有根RGB灯插头</p><p>开关按钮线以外，所有接口都是防呆、有缺口或缺针的，音频线AC97早淘汰了、现在都是HD Audio，无需多言</p><p>开关按钮线，先马这几年的新机箱也整合成单接头了，我说一下传统的情况</p><ul><li>手机提前下载主板说明书，或者在插座周围找注释图、用手机拍照备用</li><li>只有硬盘、电源灯带➕➖极性，插错只是不亮灯，出不了事</li><li>大多数情况下，插头<strong>有字面</strong>、<strong>朝主板外侧</strong>插入（面向你），电源灯极性参照硬盘灯</li><li><strong>Reset重启插头</strong>，<strong>插入隔壁的Clear CMOS</strong>（BIOS清零），这对AM5平台异常有用</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/a6999f230a4f72500a8435cd057e46a6.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h4>将电源下方线材简单理顺后，放入显卡，接上主板、显卡供电线</h4><ul><li>供电线请反复确认紧固，避免接触不良引起短路、一套全带走</li><li>线缆尽量往机箱背面塞，确保不会干涉到风扇运转</li><li>正常使用一段时间后，最后再来进行理线，不要提前开香槟</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/bb2e476aa0b9504181bd0a22626f71c7.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>平台调优</h2><p>很多人说AMD平台玩游戏卡顿，这事由两方面造成，一方面是微软系统的负优化，另一方面是现代的主板平台，安全校验无处不在。</p><p>前者在锐龙9000发布初期，被国外视频博主实锤，引发AMD逼宫，最终微软在去年9月推出了Windows11的<strong>KB5041587</strong>鸡血补丁修正</p><ul><li><strong>Windows Defender</strong>内置杀毒，还在暗搓搓搞事情，需要手动<strong>关闭内核隔离</strong>，<strong>去除内存完整性校验</strong></li><li>无处不在、不分时宜的<strong>Windows更新</strong>，也是潜在的诱因，应该坚决关闭</li><li>Win 10/11，启用<strong>硬件加速GPU调度</strong>，目录在【设置】-【系统】-【显示/屏幕】-【显卡/图形】</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/68b4e7592143a6fc6a5050524356fa1f.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>硬件方面，BIOS内涉及安全相关的项目必须关闭[<strong>Disabled</strong>]：</p><blockquote><ul><li>以华擎主板为例：</li><li>【进入BIOS】F2或Del 【引导设备】F11</li><li>【搜索】F4 【F10】保存后退出</li><li>【F12】截图（需FAT32 U盘）</li></ul></blockquote><ul><li>AMD CPU <strong>fTPM</strong>（固件可信平台模块）</li><li>[CPU] <strong>NX Mode</strong>（CPU非执行页面保护）</li><li><strong>Secure Device Support</strong>（可信赖运算）</li><li><strong>Secure Boot</strong>（安全启动，一般默认关闭）</li><li><strong>TSME</strong>（内存加密）【AMD CBS\DDR Options\DDR Security】</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/ef850f16d95c2269ab52a53b1668857a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>DDR5内存，是内存历史上变化最大的一代，集成了<strong>PMIC</strong>供电管理芯片，增加很多安全校验机制，对信号完整性要求极严。</p><p>我们用户可感知到的，就是<strong>慢</strong>！</p><p>主板开机速度、BIOS设置速度，比DDR4时代慢了至少三倍；主板内置的内存训练功能，黑屏调优时间甚至可以超过15分钟！</p><p>内存设置，是重中之重，以华擎为例</p><p>普通用户</p><ul><li>开启内存<strong>EXPO</strong>预设（XMP=intel平台）</li><li>开启<strong>快速校验</strong>【Memory Context Restore】和【Power Down Enable】（近年新BIOS一般默认开启）</li></ul><p>进阶用户</p><ul><li>开启内存训练</li></ul><p>华擎叫性能模式【Dram Permance Mode】，【Competitive】进取档和映泰的【快速】差不多，需要5分钟；【Aggressive】激进档和映泰的【完全】差不多，需要最多15分钟</p><p>设置完重启，debuge灯闪烁、黑屏无响应很久，可以去蹲个坑什么的，会自动开机的。</p><p>只需要一次，自动训练出最佳小参后，以后不会重复。</p><p>锐龙7000/9000用户，内存控制器就那个怂样，内存频率6000、FCLK 2000就是最佳频率，不要再折腾了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/cb549e3414692124d6a3d2cccb34d0dd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>自认欧皇，或是用8400F/8000G，手头为海力士Adie/Mdie高价条，且有时间有精力有阅历的，请往下看</p><p>极客用户</p><ul><li>UCLK=MCLK同步情况下，DDR5=<strong>6400</strong>，FLCK=<strong>2133</strong></li><li>内存电压=VDD电压=VDDQ电压=<strong>1.35V</strong>，SOC电压=<strong>1.30V</strong></li><li>时序前三项tCL-tRCD-tRP=<strong>38-48-48</strong>起步，其他全auto</li><li>tCL单独调，tRCD-tRP同步调，稳了-2，不稳+2</li><li>再细一点，第四/五时序tRAS=tCL的1-3倍，每次±6调</li></ul><p>每次重启黑屏超过5分钟，强行关机；能进系统，<strong>TestMem5</strong>撑过5分钟不报错，继续。</p><p>其他小参真的别费神了，DDR5所需的调试时间，至少是DDR4的四倍。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/496887da8f3089223dc4134d3eece4c8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>基础性能</h2><p>PE装机盘制作、硬盘分区、系统安装，过程不表</p><p>请回顾《笔记本电脑装机优化全图文攻略》，网盘内也提供了全图片攻略</p><ul><li>微PE工具箱（官网 wepe.com.cn）</li><li>微软MSDN原盘（ITellYou next.itellyou.cn）或 我的网盘</li><li>系统选择：win10 LTSC2021 &gt; win10 22H2 &gt; win11 24H2 专业中文订制版</li><li>主板驱动 务必使用<strong>V7</strong>版本；显卡驱动 推荐<strong>蓝戟</strong>官网；Wifi驱动 我的网盘</li><li>主板工具 <strong>进阶用户</strong>推荐安装"重启至UEFI”“ASRock Motherboard 工具软件”</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/86886b2b58967256497bb19446f0429b.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>自媒体博主装机嘛，自然是Debuff叠满，就怕不出状况</p><ul><li>系统是 小修极限精简版，3月27号的Win10 Ltsc2021 19044.5679</li><li>所有驱动最新，intel显卡驱动是B站吐槽很多、WHQL认证都没有的最新<strong>6653</strong>（今天截图，7天时间已经更新<strong>6732</strong>版了）</li><li>主板BIOS最新，CPU PBO2开启，全核降压<strong>5</strong>；内存超频至DDR5 6400 <strong>38-44-44-114</strong></li></ul><p>结果无事发生。</p><p>只是内存激进超频导致的系统崩溃，把我的CapFrameX工具弄崩了，跑测试各种奇怪错误、数据丢失，害我多折腾了一天时间。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/3686aa34cf2f91fbb7d79d1fd32cc146.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>先说结论，相较去年的AM5初体验，现在的B650主板，内存兼容性和响应速度有了质的提高。</p><p>蓝戟B580源，双扇丐版，和我家的光系列三扇没有本质区别：</p><ul><li>出厂预超频至2850Mhz，与旗舰相差100Mhz，远高于公版的2670Mhz</li><li>【高级电源管理】内将【PCI Express电源管理】，设置为【最大电源节省量】，待机功率仅<strong>12w</strong>，AM5主板BIOS内无需调试</li><li>TBP 190w，低于光的默认220w，游戏功率约170w，拷机190w</li><li>机箱内甜甜圈烤机5分半，GPU温度<strong>64℃</strong>，显存温度<strong>58℃</strong>，此时扇转速43%，仅为1348rpm</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/6a129ad698e07ada4677042f6f6ffdc0.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>要知道，这只是块入门级别的卡，风扇启停温度是<strong>55℃</strong>，风扇转速上升曲线较缓，非常安静。</p><p>驱动面板内手动拉满风扇，风扇最高转速稳定在3035rpm，甜甜圈拿这块卡毫无办法，GPU温度<strong>47℃</strong>，显存<strong>42℃</strong>，微do~</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/b884dc5eff370a7c76345fccc6b31e2a.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>究其原因，B580的晶体管密度，仅为RTX4060的<strong>60%</strong></p><ul><li>4060差不多的晶体管数，晶元面积是4060的**171%**，快赶上4070了</li></ul><p>同为台积电<strong>5nm</strong>代工，<strong>晶元面积直接决定成本</strong>。</p><p>intel这一把，太良心了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/783cfb4fd290983f30385c86bc3133d6.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>游戏实测</h2><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/6615763cd8b5543a947e9802cbf3166f.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>3DMark，和我自用的客厅主机相比</p><ul><li>dx12下，100Mhz显卡主频，带来的性能差<strong>3.1%</strong></li><li>dx11下，两卡基本性能一致</li><li>1080p下，CPU和内存带来的系统性能提升，高达<strong>28%</strong></li><li>2K下，CPU和内存加成降至<strong>9.3%</strong></li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/5f7616fb232ecf02d0d2fd9119b03c34.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>锐龙8400F算不上性能U，PCIe通道、三缓、主频、散热阉割极狠。</p><p>0.8Ghz的主频、双倍内存带宽、额外的6线程，终究还是极大的提升了性能表现。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/94f48e154ac382c050a933dcea56cf8a.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>体现到游戏中：</p><ul><li>所有游戏<strong>1%低帧</strong>大幅提升，意味着卡顿减少，游戏顺畅很多</li><li>DX12游戏中，平均帧提升至少<strong>8%</strong></li><li>同屏怪物众多的幸存者游戏里，GPU满载幅度、满载时间提升明显</li></ul><p>可见4K单机不吃U，内存带宽为王。</p><p>DDR5内存大幅提升了1%low帧表现，更好的CPU让GPU快马加鞭。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/3faa6142dbc75bfe5518cd7b5bb4a373.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>黑猴、仙7、地平线5、Fifa23，上次自用机已测，4K流畅没问题，想看的朋友跳转</p><p>《垃圾佬的下一张养老卡 蓝戟Arc B580 12GB深度使用手记》</p><span class="ss-linkCard">&nbsp;</span><p>&nbsp;</p><p>这次咱们测点新的。</p><p>《<strong>黄金树之影</strong>》，老头环的DLC，第一次入选年度游戏的DLC增量包。</p><p>这个游戏锁帧60，原生高画质直接开，B580打了个哈欠：就这？</p><p>跑不满，真的跑不满，GPU占用率83~94%浮动。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/9c690988aa6f6354393c8603f027cfc9.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>看来得上上强度，当我掏出<strong>虚幻5引擎</strong>，怕了吧？</p><p>《<strong>双影奇境</strong>》！</p><p>满分游戏《双人成行》的续作，沙发双人游戏的不二之选，当红辣子鸡。</p><p>原生4K高画质，平均帧<strong>74.3FPS</strong>，一个小时的游玩流畅无比。</p><p>要不是还得测试下一轮，被我现抓过来的媳妇儿，还舍不得放下手柄。</p><p>呵，当初是谁满脸不情愿得坐过来的？</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/c40c8fb8675df1e20dfbea426b3370a5.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>《黑蛛侠2》，能玩这个，就能畅玩《1代重制版》《小黑蛛》。</p><p>作为索尼时代就一直追剧的粉丝，这是第一次接触相关IP游戏。</p><p>剧情跑完开始操纵皮得·帕克，热血就不由得燃烧起来了，就是这个味儿~</p><p>必须承认，这个游戏对于B580压力巨大，全程负载跑满，平均温度<strong>60</strong><br /><strong>℃</strong>、最高达到63℃，跟拷机似的。</p><p>但我坚持不开<strong>FSR 3.1帧生成</strong>，只在高画质下开启了<strong>Xess超分</strong>，平均帧<strong>51.2FPS</strong>，体感上还算流畅。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/cc26b8adda00af66e3c5d1fbea62492a.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>裱锅2，最高画质下调两格，以原生超高画质运行内置测试，平均帧<strong>59.6FPS</strong></p><p>Vulkan和Dx12两种引擎都测了，性能表现完全一致。</p><p>裱锅初代重制版就更不用说了，平均帧<strong>118FPS</strong>，高刷级别的流畅</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/67a840f67aa6b88e42ada7ca48f75996.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>其他设置</h3><p>视频播放，安装完美解码和小黄鸭<strong>Lossless Scaling</strong>，使用<strong>potplayer</strong>实现倍帧播放。</p><p>涉及杜比视界格式时，PC播放不完善，交给智能电视自带的播放器解码。</p><p>局域网内设备投屏，共享客厅主机，一般玩家可以使用猪场的<strong>UU远程</strong>（原GameViewer）；愿意付出学习成本的，使用<strong>Sunshine</strong> + <strong>Moonlight</strong>，实现全客户端使用</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/2c576445d68ae1f62e52fb5a3cb8871e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>至于怀旧主机，考验的是CPU和内存，显卡性能要求不高，想要流畅运行新世代：</p><ul><li>六合十二线程以上多核处理器，打开<strong>SVM</strong>虚拟化支持，最好具备<strong>AVX512</strong>指令集</li><li>内存越大越好，16G起步；显存越大越好</li></ul><p>RX570/580已经可以4K畅玩Wii U，B580应对绰绰有余，建议作为小朋友的起步平台</p><p>《3D馬》《馬8》《宝藏队长》《毛线恐龙》《初代烧烤》，足够玩上一两年了。</p><p>更新的平台，之前的开源都挂了，最有前途的新分支，是雪铁龙。</p><p>话题不方便展开，以后再开个帖子聊</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/1eb2fcf99947a5bf18cb7f2440b7f4a7.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>总结</h2><p>我理想中的家庭组网：</p><ul><li>家庭娱乐PC在客厅，提供游戏机能</li><li>NAS负责个人资料备份、和影音服务</li><li>类NUC主机、笔记本、平板作为个人访问终端</li></ul><p>一张独立显卡足矣，无需装配那么多的二号、三号、四号机。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/75983a252d219ef2effb2730c8ea3839.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>intel这一代显卡，FPS游戏表现稍弱，3A大作异常出彩，简直是为客厅主机、沙发游戏量身打造。</p><p>玩起来，给家人制造更多的相处时间、更多的共同话题吧，别让油盐柴米、世俗人情占据了全部的生活。</p><p>这世上最贵的，永远不是一块硅料刻成的晶圆，而是一个能共情的生活搭子啊~</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/04/04/d2daafb930961767bf28deb8f5e90d08.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure>
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>