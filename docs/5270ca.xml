<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>少数派 -- Matrix</title>
        <link>https://sspai.com/matrix</link>
        
        <item>
            <id>https://sspai.com/post/101614</id>
            <title>Subtitle Edit：开源字幕处理神器</title>
            <link>https://sspai.com/post/101614</link>
            <guid isPermaLink="false">https://sspai.com/post/101614</guid>
            <pubDate></pubDate>
            <updated>Mon, 25 Aug 2025 03:00:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 字幕提取, Subtitle Edit, OCR识别, 字幕翻译  
<br>  
<br>  
总结: 本文介绍了使用Subtitle Edit工具提取视频内嵌字幕的步骤，包括打开视频文件、选择字幕轨道、OCR识别（适用于图像字幕）以及保存为所需格式。Subtitle Edit是一款功能强大的开源字幕编辑器，支持多种视频与字幕格式，并提供OCR字符识别、语音转写、时间轴同步等功能。此外，它还具备字幕翻译、同步修正、格式批处理等扩展能力。文章还澄清了常见误区，如MKVToolNix和HandBrake无法直接导出文本字幕。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;<br />文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><h2>缘起</h2><p>今天在听中岛美雪的演唱会时，发现视频里内置了字幕。相比我之前用 Whisper 转写出来的版本，原生字幕肯定要准确得多。于是我开始找工具，希望能把这些内嵌字幕提取出来。试了好几款之后，最终脱颖而出的是 —— Subtitle Edit。</p><h2>功能概述</h2><p><a href="https://www.nikse.dk/">Subtitle Edit</a> 是一款功能强大的开源字幕编辑器，适用于字幕的提取、编辑、格式转换与翻译等多种场景。它支持多种视频与字幕格式，并内置 OCR 字符识别、语音转写、时间轴同步等实用功能。</p><p>最新版可在 <a href="https://github.com/SubtitleEdit/subtitleedit/releases">GitHub 发布页</a>获取，或通过<a href="https://wwva.lanzouq.com/i1mrz32pycbi">国内镜像</a>下载。支持 Windows，部分 Linux 系统可通过 Mono 兼容运行。</p><h2>字幕提取</h2><h3>打开视频文件</h3><p>启动软件后，点击菜单栏的「文件」（File） -&gt; 「打开」（Open），选择你想提取字幕的视频文件。</p><h3>选择字幕轨道</h3><p>如果视频中包含多个字幕轨道，Subtitle Edit 会弹出窗口供你选择需要提取的那一条。</p><h3>（可选）进行 OCR 识别（适用于图像字幕）</h3><p>若视频字幕为图像格式（如 DVD 的 VobSub 或蓝光的 PGS 字幕），软件会提示你进行「光学字符识别」（OCR）。此时建议选择 Paddle OCR 引擎，并根据字幕语言进行设置。点击「开始 OCR」后进行识别，完成后点击右侧的「确定」按钮。</p><p><strong>小提示：</strong>对于中文、日文等非拉丁字符，Paddle OCR 的识别效果明显优于 Tesseract 等传统引擎；后者更适用于英文字幕。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/05/article/9a6bd91dd2525900bb972aba0506beb1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>保存为所需格式</h3><p>字幕提取后，你可以在主界面中查看字幕文本与对应的时间轴。点击「文件」（File） -&gt; 「另存为」（Save as），在保存类型中选择所需格式。</p><h2>其它功能</h2><p>除了基础的字幕提取功能，Subtitle Edit 还提供了丰富的扩展能力，适用于更复杂的字幕编辑与翻译需求。</p><h3>语音转写</h3><p>当视频中没有字幕轨道时，可以通过「工具」（Tools） -&gt; 「语音识别」（Audio to text）自动生成字幕。Subtitle Edit 支持多种识别引擎：</p><ul><li><strong>Whisper</strong>（推荐，效果最优，支持多语言识别）</li><li><strong>Vosk</strong>（轻量级本地模型，适合资源受限环境）</li></ul><p>用户可选择语言或启用自动识别，支持断点恢复、每句字幕自动分段等配置。</p><h3>字幕翻译功能</h3><p>在已有字幕的基础上，Subtitle Edit 支持一键翻译所有字幕内容，可通过「翻译」菜单调用主流翻译引擎，如：Google Translate、DeepL、Yandex 等。你还可以选择手动逐句翻译，适合需要逐句优化语序的场景。</p><blockquote><p>如果你需要批量的字幕翻译体验或使用ai翻译字幕，可以使用我开源的 <a href="https://tools.newzone.top/zh/subtitle-translator">Subtitle Translator 工具</a>。<br />该工具支持批量上传字幕，调用多个翻译 API，并可选择中英对照、断句模式、自定义输出格式等，适合字幕组、译者和内容创作者使用。</p></blockquote><h3>字幕同步与修正</h3><p>Subtitle Edit 提供多种对齐和修正工具，帮助字幕更精确地贴合音视频内容：</p><ul><li>自动根据音频波形对齐字幕时间</li><li>快速统一字幕偏移（正向或负向延迟）</li><li>修改帧率（用于从不同源转换视频）</li><li>检测并修复字幕重叠、间隔过短、过长等问题</li></ul><h3>字幕格式批处理</h3><ul><li>支持常见字幕格式互转：如 <code>.srt</code>、<code>.ass</code>、<code>.sub</code>、<code>.vtt</code> 等</li><li>支持 UTF-8、ANSI、Unicode 等多种编码转换</li><li>提供批量文本替换、去空字幕行、规范化字幕格式等自动化操作</li></ul><h3>精修同步字幕</h3><p>可切换为「波形图」或「频谱图」视图，辅助进行精确的起止时间调整。非常适合精修口型同步字幕或歌词字幕。</p><h2>常见误区说明</h2><ul><li><strong>MKVToolNix 并不能直接导出文本字幕</strong>：尽管有些 AI 推荐该工具提取 MKV 字幕，但实际上它输出的是 <code>.mks</code> 格式（容器文件），而非可读的字幕文本。</li><li><strong>HandBrake 不支持字幕提取</strong>：该工具适用于视频转码与压制，但无法直接提取字幕。</li></ul><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102042</id>
            <title>Glotera AI - Mac原生内联翻译工具</title>
            <link>https://sspai.com/post/102042</link>
            <guid isPermaLink="false">https://sspai.com/post/102042</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Aug 2025 22:50:04 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 跨语言沟通,内联翻译,Glotera AI,Mac应用
<br>
<br>
总结: 作者在推广印尼金融AI产品时遇到跨语言沟通问题，现有翻译工具需要切换软件，中断工作流。因此开发了Mac原生应用Glotera AI，核心特性包括：Inline Translation可在输入框内直接通过指令完成翻译；Selection Translation支持在Mac所有应用中选中文本翻译；Translation Copilot for chat能自动翻译聊天内容。该应用旨在让跨语言沟通更简单自然，目前提供免费版和优惠体验。 </div>
                        <hr>
                    
                    <p>年初的时候，花了两个月做了一款面向印尼市场的金融AI产品，准备在线上推广的时候，发现遇到了不少跨语言沟通的问题。想在Reddit印尼金融子板块发贴子，但是完全看不懂印尼语，不过有豆包、沉浸式翻译这样的插件，可以把网页内容翻译成中文，浏览倒不是大问题，但是回复内容或者发贴子时，就比较麻烦了，要么去ChatGPT中翻译好再复制回来，要么用豆包插件去翻译好再插入进来，但是不管哪种方式，需要在不同软件上切换，不仅麻烦还容易中断自己原有的工作流。</p><p>有没有更好的解决方案？我觉得理想情况下，是在输入时，不要让我离开输入框或者当前应用，在不中断输入流的情况下，就能实现翻译，比如在内容最后输入@en就能自动翻译成英文，并将原始内容替换掉，这样是最方便也最自然的操作方案。</p><p>一开始我也没有想着造轮子，于是在网上找了一圈，但最后也没有找到特别合适的。可能我的需求比较小众，属于少数派，现有的解决方案如果忍一忍也不是不行，但是技术出身的我刚好已实践了几个月AI编程，心想有AI的帮助还不是手拿把掐分分钟搞定。</p><p>说干就干，只用了两个晚上的时间，我就把原型做出来了，又花了两周左右的时间功能基本就做好了，但是第一次开发Mac原生的应用，之前对Swift编程语言完全不了解，代码全是用AI写的，虽然一开始很快但是软件的稳定性和兼容性都有很多问题，不得不花费大量时间重新阅读代码并进行重构，整整花了两个月才彻底解决，现在终于可以放心地让大家使用了。</p><p>那么Glotera AI现在都具备了哪些特性？</p><ul><li><strong>Inline Translation</strong>（内联翻译、行内翻译，或者叫原地翻译）：这是这款软件的核心功能，也是首创的一个功能，你可以在任何应用的输入框，直接输入中文， @en或者#ja就能自动翻译成英文或者日文，在行内就能完成整个翻译工具，无需切换到翻译软件界面，也不需要复制粘贴，更不会打断你的工作流，这也是我觉得最自然的翻译方式。</li><li><strong>Selection Translation</strong>（选中翻译）：鼠标或键盘选中文本，即可进行弹出一个翻译窗口展示翻译结果。这个功能并不新鲜，尤其是在网页端，很多插件就能做，但是做到支持Mac上所有的应用，不管是原生的桌面应用，还是Web应用，并且兼容性能做的特别好，我觉得Glotera AI肯定排在前列，这也是为什么后来我又花了近两个月时间都在解决的、非常让人头痛的Mac应用权限不稳定导致的兼容性问题。</li><li><strong>Translation Copilot for chat</strong>（自动翻译）：当你在和老外聊天时，既需要看懂对方发来的内容，也需要把自己的文字翻译成对方的语言，这个功能就派上用场了。它会在你现有的聊天窗口旁边新开一个辅助聊天窗口，当接收到对方的消息后会自动翻译成你的语言，在你发送时会自动检测对方的语言并自动翻译，原文和译文都会展示在旁边的辅助窗口上，你不需要手动哪怕点一下就实现跨语言的沟通，所以我称之为Copilot。最近一个做海外业务拓展的朋友就反馈，这个功能太需要了，她的日常工作就是需要在WhatsApp上和西语、葡语及俄语等国家的人沟通，之前都是先Copy到ChatGPT，翻译好再粘贴回来，非常的繁琐。而Copilot的功能，可以大大提升她的工作效率。</li></ul><p>未来Glotera AI会逐步完善，提供更多强大的AI能力，让跨语言沟通变得简单、自然，有需要的朋友可以使用这个优惠码GLOT-0822，享用为期3个月的半价优惠，当然您也可以使用免费版先行体验基本功能，也欢迎多多反馈您的宝贵建议，感谢！</p><p>更多介绍请访问<a href="https://glotera.ai/" target="_blank"> Glotera Website</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102034</id>
            <title>杂七杂八的购物分享｜动圈入耳式耳机｜NF Acous NA20</title>
            <link>https://sspai.com/post/102034</link>
            <guid isPermaLink="false">https://sspai.com/post/102034</guid>
            <pubDate></pubDate>
            <updated>Fri, 22 Aug 2025 08:16:57 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 宁梵声学,有线入耳式耳机,监听导向,消费级市场  
<br>  
<br>  
总结: 文章回顾了有线入耳式耳机从过去需要做足功课购买到如今逐渐小众化的变迁过程。作者指出国产耳机近年来进步显著，能以更低价格提供更好体验。宁梵声学最初面向职业音乐人，后逐步转向消费级市场，但其产品仍保持监听底色，调音偏直白和解析。NA20是宁梵声学推出的中端型号，外观设计简洁工业化，佩戴舒适。其音质相比品牌传统调音更平滑、暖调，略带氛围感，在保留足够细节的同时更耐听。NA20配备了被动降噪功能和实用的标配配件，是一条简单易用的消费级动圈入耳式耳机。 </div>
                        <hr>
                    
                    <h3>前言：耳机与回忆</h3><p>年少的我们买耳机时，总像是一件需要做足功课的大事：翻论坛、刷贴吧、蹲发烧友群，记下口口相传的型号，收藏各家调音的频响曲线，有时甚至会在心里描摹它们的声音形状。那时的愿望往往又大又空——想一步到位，拥有一条所谓的“退烧耳机”。但当这份执念真正落地，它又往往变成一些稍有门槛、努力就能实现的小心愿：在论坛或二手平台蹲心仪型号，攒够预算入手大牌中端首发，去店里试听那副心里无数次想象的耳机。</p><p>后来，信息渠道越来越发达，国内音频市场和技术也在二三十年的培育中悄然成熟，逐渐形成了完整而稳固的产业链。今天，甚至过去很长一段时间里，许多大牌耳机也是在国内的代工厂生产制造。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/22/de36c309d31d31e315d1ea96fd34aa52.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>而随着年岁的增长，手中的设备也在悄然更迭——从随身听、CD 机、诺基亚，一步步换成了智能手机；而那承载着无数回忆的耳机孔，也在一代代产品中变得越来越稀罕。现在的朋友恐怕很难想象，3.5mm 耳机孔在过去可不仅是插个耳机那么简单——它是音质的入口，也是创意的接口。奇奇怪怪的衍生配件层出不穷：能当 FM 天线的转换器，挂在手机上的小饰件，甚至还有通过按压底座实现功能的“米键”，那种玩法和折腾的劲头，如今在数码设备上已难觅踪迹。</p><p>而购入一条有线入耳式耳机，似乎在这几年成了一件越来越小众的事情。PC用户往往青睐头戴式耳机或是音响，手机端则是 TWS 的天下。但对我来说，有线的入耳式耳机，依旧有着某种难以割舍的魔力——一个时代的手感，一个人听歌的仪式感。</p><p>只是，情怀归情怀，需求早已今时不同往日。预算方面，长期居家后，耳机不再是唯一音源，我更愿意把预算分散到更多有趣产品上。同时，国产耳机近年来进步显著——用更低价格获得更好体验，已不再是幻想。而当预算来到 2000 元及以上，我个人觉得，与其追逐上代旗舰入耳耳机，不如考虑入门音箱或头戴式大耳，往往能带来更多折腾的趣味。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/22/f70b43287c95e0af72b13470ebb4bd32.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>说回耳机，前段时间我在电商平台入手了宁梵声学 25 年推出的新品——NF ACOUS NA20。在聊这条耳机之前，需要说明一点：我对宁梵声学确实有一些粉丝滤镜，品牌好感较高，也入手过他们多条中低端产品。但我并不是特别专业的发烧友，在音乐鉴赏上也没有什么品味，所以接下来的分享，会更多从这条耳机给我带来的使用体验和情感满足来聊。</p><h3>初识宁梵声学</h3><p>我第一次了解到宁梵声学，大概是在 2016 到 2018 年前后。彼时它主要面向职业音乐人，专注于舞台监听耳机的研发与生产，当时推出了 NF6、NF2、NF3 这类定制机型，价格不菲。到 2019 年，宁梵声学开始布局消费级市场，像是两单元动铁NF2u以及动圈塞 NA1，虽是入门机型，但价格也是徘徊在千元左右，那也是耳机设计与调音手法不断推陈出新的时代。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/22/84d073ed3392d13705910ae8a9bcc831.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>真正让我接触到宁梵声学的产品，是 2023 年《刺客信条》联名款 NG3的推出。</p><p>老实说，这让我颇感意外——游戏耳机市场长期被电竞外设大厂占据，讲究精巧营销和品牌曝光，而非传统声学厂商的主场。《刺客信条》这样有鲜明文化符号的 IP 与声学品牌跨界更是罕见。倒是让我不由得联想到与宁梵声学关系颇为密切的晨木，以及他们那款联名的骑士精神。当时我入手 NG3 的理由其实很简单：我需要一条带有线控麦克风的入耳式耳机，能让我在闷热的夏日宿舍里舒舒服服地打游戏。而 NG3 刚好满足了需求。</p><p>而到手之后，这条耳机着实是让我有些惊喜，较粗的双股编制线放随手放在桌上也不容易自缠绕，麦克风的语音清晰度比我过去用过的便宜耳机要好的多，不过音质我倒是没有过多在意，毕竟当时听音乐的时间真的不算多，外出基本也是 TWS 为主。</p><p>这款耳机最让我心水的地方有两个，其一是佩戴体验：贴合、稳固又不压耳，长时间戴着也不累。其二是它保留了一些“传统塞子”的特点，比如可换线接口，并没有因为是所谓的“游戏耳机”定位就把塞子有用的功能砍掉。也正是从 NG3 开始，我才真正把宁梵声学放进了自己的长期关注名单里，之后陆续在二级市场淘过它们一些早期产品，也在旗舰店里买了几款在售的中低端型号。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/22/7ce39bc096401e78e729d32a8cd9cc17.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在体验了 NG3、RA05、NM2以及一些老产品后，我个人并不建议普通玩家投入大量预算在宁梵耳机上。原因在于，虽然宁梵声学这几年确实一步步在向消费级市场靠拢，推出了更多面向大众的型号，但它的底色仍然是一家“监听导向”的耳机厂商。这种定位直接体现在它们的调音上：整体风格偏直白和解析，低频相对饱满，下潜不错，高频也相对明亮。尽管在齿音频段做了一些削减处理，不像某些经典监听那么齿音尖锐，但比大部分音乐耳机齿音要明显，足够还原细节，在展现音源信息上有优势，但对单纯聆听来说，可能不够“毒”，甚至在高音上是很刺的。</p><p>这里就不得不提到宁梵声学在前些年开辟的NA NM双系列：NM 系列偏向专业监听，强调还原与准确，属于 Pro 向的产品线；而 NA 系列则定位为面向音乐爱好者的“音乐耳机”，更注重日常听感与氛围的营造。不过正如前文所说，宁梵的底色依然是“监听导向”，因此两个系列在产品的核心气质上并没有特别巨大的分野，算是某种双胞胎。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/22/13a6033c0fee301fe3ebae1c75f9307c.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>NA20 的设计与体验</h3><p>那我为何会入手 NA20 呢？一方面，虽然我算不上宁梵声学的老用户，但在逐渐接触他们的产品之后，依然会对新型号抱有期待。尤其是当 NA20 这样定位于中端、又有所差异化的型号登场时，我很想看看它是否能在坚持监听底色的同时，尝试做一些更偏向消费级的调整。</p><p>另一方面，最直观的理由其实更简单——我真的很喜欢它的外观。理性层面的参数与功能考量，确实能帮我在琳琅满目的数码产品里筛掉大多数不合适的选择，但真正促使我下单的，往往还是这些更感性的因素。比如外观，NA20 目前仅有一款咖色版本，而官方称之为“美拉德色系”的配色恰好非常戳我。再加上我个人对透明材质的 CMF 情有独钟，不论是 PC 材质的键盘还是其他数码产品。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/22/0458a217a5abf7b5b06c425540554db4.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>腔体外壳采用了 PC 材质，并辅以细腻的磨砂处理，既避免了廉价的塑料质感，也让手感和视觉质感都有了明显提升。而在面板与腔体的衔接处，NA20 又加入了一圈 CNC 铝制装饰环，这个设计并不会直接提升腔体的结构强度，但却在观感上带来了更扎实、更可靠的印象，同时也让整体的 CMF 设计更显精致和层次感。相比常见的纯塑料拼接方案，它的观感和触感无疑更耐看、更有细节。面板部分也颇有巧思。宁梵在 NA20 上做了类似拨片造型的三角切削，表面带有一定深度变化，在光线下会呈现出微妙的明暗过渡，不至于显得单调。与此同时，面板上还丝印了宁梵声学的品牌标识。</p><p>NA20 的整体轮廓延续了宁梵在NA1以及后续 NM 系列中已经验证过的模具设计。这套模具在佩戴上的舒适性可以说是他们的一大优势——相比我体验过的大多数入耳式耳机，它更贴合耳廓，长时间使用也能达到一种近乎“无感”的状态。印象中，宁梵的老羊在 NG3 上市时的一期播客里提到，他们在模具开发阶段就针对耳廓形态进行了深入研究，对耳机与耳朵接触部分的结构进行了优化处理，尤其是耳甲区域的人体工学设计，这一理念也在后续产品中得到了延续。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/22/37a73f729d76020d66f9c0db3c335dcb.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>总体来说，NA20 的外观设计并不复杂，甚至可以说是相当简洁，相较于市面上五花八门，造型各异，材质工艺丰富甚至夸张的塞子，它是一个经过打磨的优秀工业化产品，相较于一端极端追求性价比、在堆料上不管配合度的，另一端着重于高成本的手工工艺与工匠叙事的那些产品，通过合理的产线规划、供应链把控和功能取舍，在工业化量产的框架下找到一个成本与体验的平衡点，才是真正适合消费级产品的方向。</p><p>说了这么多私心的分享，聊聊 NA20 给我实际的聆听体验。相较于我体验过的宁梵中低端产品，它给我的整体感受是更为平滑，相对暖调，略带一些氛围感。它不会过于激进和锋利，但有足够的力量去带来一些动感，中频人声部分不会被盖过，同时声音中那些尖锐的棱角，或者说边缘，会被稍稍软化一些。而像是高音镲这类，不会迅速高调切入，而是更为柔和，不会有那种极高灵敏度的延伸，但整体淡入淡出相对自然。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/22/9554649c6a8fa18c859738fcfb5c75d9.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在解析力方面，NA20 依然延续了宁梵声学的监听底色，音轨不会糊成一堵墙，你依然能够听到丰富的细节和变化，只是强调的程度有不同。NM20 和 NA20 的本质差异主要在调音取向上，整体性能差异不大，总体上不会产生显著区分。而齿音频段虽然在频响曲线上有所削弱，但还是比较明显。</p><p>如果把这些抽象的感受落到使用场景，NA20 的定位就更清楚了：它不是一条强调极致解析、锐意监听的耳机，但它也没有完全走向流行化的调音。你若追求原汁原味的细节感，它肯定比不上自家兄弟 NM20；它的低音调音很不错，但也不是水满火炽的程度，如果你要听电子舞曲之类，找那种轰鸣深沉的低频，它也称不上劲道。NA20 比较微妙的地方在于，它的确是宁梵朝流行取向迈出的一步，也仅仅是一步，相比市面上那些强烈渲染、直给味道的“毒塞”，它依然显得太过理性、太有监听底色，太不具备包容性，所以不太适合去听部分 acg 歌曲。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/22/d0375d9b919245ff2535e20454c4d275.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>总结</h3><p>所以如果非要用一句“暴言”去概括，那就是：NA20 相比宁梵常规调音风格要“糊”一些，但这种“糊”换来的是耐听、宽容和温暖氛围感，至少于我而言。它听起来nm系列没有那么累，甚至比老旗舰 na2+还轻松一些，但依然保留了足够的信息量，能让我在聆听中去想象一些东西，找到类似宾果游戏或连连看的乐趣。听起来或许依旧抽象，但我相信有人能理解。</p><p>最后再聊聊关于这条耳机的一些补充点。NA20 拥有 25dB 的被动降噪，这并不是一个“纸面参数”，在实际佩戴中确实能感受到一些隔音效果，主要得益于模具设计的贴合度，可以在耳道口形成比较理想的密封。另一方面，宁梵全系标配的 MS42 耳机套也值得一提，它的外径覆盖 9.3 至 13.2mm，尺寸选择非常全面，其中 XS 尺寸对小耳道用户尤其友好。即便对宁梵的耳机本身不感兴趣，MS42 也称得上是一个性价比很高的口粮耳套了。标配的 6N 无氧铜材质的线材，也算是配置下放，此前是作为升级线售卖，配色也是和耳机本体配套的咖色，耳挂部分的收束套能够保证长期使用的舒适性，也便于佩戴挂耳这个动作。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/22/c933f7723523e465fd040302717ca52c.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>总体来说，我个人还是比较满意 NA20 给我带来的体验。它不是一条需要折腾很多的耳机，没有可更换导管或面板的模块化设计，也不需要去搭配昂贵的前端才能发挥实力。就连换线这种常见的升级点，宁梵也干脆直接把升级线作为标配，少了不少纠结和额外开销。如果你有携带需求，它还配备了一个小巧但实用的耳机包。NA20 就是一条简单、易用的消费级动圈入耳式耳机，没有过高的上限，价格也离所谓“真入门”有些距离，但在好用性上，我觉得它已经相当接近了。</p><p>顺带一提，要打游戏，买 nm20 更合适，就是齿音可能会在语音聊天里再次被放大。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/22/791a7530bdc6c4531f47e7fea4a4d805.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/100887</id>
            <title>小宇宙非官方报告：数据解析内容生态</title>
            <link>https://sspai.com/post/100887</link>
            <guid isPermaLink="false">https://sspai.com/post/100887</guid>
            <pubDate></pubDate>
            <updated>Wed, 20 Aug 2025 03:00:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 小宇宙, 幂律分布, 内容类型, 收听量  
<br>  
<br>  
总结: 小宇宙作为中心化内容分发平台，流量呈现幂律分布，少数内容占据多数流量，不足1%的内容收听量超过10万。平台内容类型丰富，分为9大类，其中“娱乐与群聊闲谈”和“对话与访谈”是收听量最高的两类。高收听量内容的时长普遍更长，可能与创作者的信心和能力有关。样本分析显示，娱乐圈内容在高收听量中占比显著，但总收听时长分布较为均衡。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;</p><p style="margin-left: 0px;">文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><p>自 2020 年 3 月<a href="https://sspai.com/post/59722" target="_blank">上线首个公测版本</a>以来，小宇宙已面世 5 年有余。官方自 2022 年起每年发布过去一年的年度大赏，自 2024 年起每年发布过去一年的年度趋势，除此之外我并未能找到太多小宇宙平台上内容方面的数据，毋宁说从更数据化的视角出发进行的梳理。秉承「自己动手，丰衣足食」的原则，基于机缘巧合获得的 7 万多条样本数据，我对小宇宙上的内容作了简单的分析，是为本文。</p><h2>不足 1% 内容收听量 10 万+</h2><p>幂律分布主宰互联网，小宇宙作为同样是中心化的内容分发平台，也不能免俗，平台的多数流量集中在少数内容上。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/10/4ccf88f2a4fa09800442dc84da694ecd.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>幂律分布转换横座标后，正态程度有所提升</figcaption></figure><p>具体而言，只有不到 1% 的内容收听量达到十万以上，不到 10% 的内容收听量达到一万以上，接近六成内容收听量不足一千。</p><p>说实话，在之前我没想过小宇宙上一条内容收听量超过 1000 可以是这么难跨过的一道坎。另一边厢，在这次的样本中，有唯一一条收听量超过 100 万的内容，是 2024 年 11 月 13 日发布的《S6E9 鲁豫对话陈果 | 命运无常，我有常》。人与人之间的悲欢并不相通。</p><p>常用于描述分布集中趋势的中位数、平均数之间的差异，从另一个角度呈现了这种现象。本次样本的收听量中位数是 655，平均数是 4410，后者数倍于前者，但显然中位数更能代表小宇宙平台上大多数内容的状况。其实收入也是如此。</p><p>在上线早期，小宇宙的流量分发与少数派类似，内容是否有机会在公域曝光，依靠编辑推荐。和所有人工分发流量的机制类似，它容易让人吵起来，常逛即刻和少数派的朋友对此应该不会感到陌生。到了 2025 年的现在，小宇宙也已经改为将算法推荐作为主要分发机制，无论是创作者还是用户，对算法也都会有抱怨，但和对人的抱怨并不在同一个维度。在算法分发之下，有理由相信小宇宙流量分配的马太效应会愈演愈烈。</p><h2>内容类型还算丰富</h2><p>在算法推荐机制下，内容类型是一种常见的模型特征。对于内容平台，算法会从数据角度去了解平台上有什么样的内容、用户对什么样的内容更感兴趣。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/10/f2e937a6b11af8ec768341a5982685fe.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>尽最大可能降低内容类型之间的重合度</figcaption></figure><p>第一个问题在小宇宙的答案如图所示：小宇宙的内容可以被归类为上述 9 大类。有读者可能在<a href="https://justpodmedia.com/document/JustPod-china-podcast-survey-2022-CN.pdf" target="_blank">其它地方</a>看到过似曾相识的分类，这并不让人意外；毕竟上图的分类由大语言模型输出，而它截至目前为止实质上由互联网喂养而成。</p><p>其实小宇宙在营销侧、用户侧对于内容也都进行过分类。前者散落于<a href="https://mp.weixin.qq.com/s/6QfV0c4zweBAs5BI8Ty2IA" target="_blank">年度大赏</a>、<a href="https://mp.weixin.qq.com/s/w6_-RrfqG_z88ryZpEhJ9w" target="_blank">年度趋势</a>的文案之间，后者在 app 端有直接的交互界面「分类」，用户可以从以下类别进行选择：人文、商业、自我成长、社会、科技、故事奇谈、影视娱乐、阅读、趣味闲谈、医疗健康、治愈陪伴、文旅、职业探索、艺术、兴趣生活、饮食、音乐、体育运动、动漫游戏。</p><p>对于小宇宙用户侧的分类，我有两个地方想吐槽：一是我觉得 19 个类别实在是太多了，用户操作成本可能有点高；二是「动漫游戏」这个类别的命名实在太难听，如果想吸引这个领域的核心用户，叫 ACG 显然更好，如果想破圈，哪怕叫「二次元」都比现在的好。</p><h2>现在的小宇宙属于娱乐圈吗？</h2><p>小宇宙对于 ACG 和二次元的标签肯定是不上心的，毕竟这类内容从小宇宙诞生至今影响力还很小，何况连 Bilibili 都不上心好久了。将刷数据视为常态的娱乐圈才是平台的香饽饽。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/10/71057f0b285bad718dd081377ee5be3c.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>XX 可能会 XX，但永远不会 XX</figcaption></figure><p>娱乐圈人士进军小宇宙在 2025 年早已不是新闻，它们能带来流量也不是新闻，但是看到「娱乐与群聊闲谈」成为「收听量十万以上」内容占比最高的类型，我还是有点意外，这个比例略高于 30%，远高于排在其后的「对话与访谈」，后者不足 20%。</p><p>和其他收听量级的内容对比，「娱乐与群聊闲谈」在「收听量十万以上」的占比也明显更高：无论是在全样本范围内、还是在「收听量 1~10 万」这个级别的内容范围内，「娱乐与群聊闲谈」的占比都没有超过 20%。在这两个组别里，「对话与访谈」的占比最高。</p><p>另一方面，「知识分享与深度解读」「行业观察与商业故事」「生活方式与兴趣探讨」在高收听量内容的占比低于全样本范围内的占比，可以认为这 3 类内容相对而言没那么受用户欢迎。作为对比，「纪实故事与案件讲述」则颇受小宇宙用户喜爱。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/10/744e9dc3598982b949cb9247a1f2946c.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>今天下英雄，唯使君与操耳。本初之徒，不足数也</figcaption></figure><p>如果同时考虑内容数量、收听量、内容时长，可以认为「对话与访谈」「娱乐与群聊闲谈」都是小宇宙的扛把子。以「人生哲思与心灵探索」类内容为基准，前述两类内容的总收听时长是它的两倍以上，也是唯二达到这个程度的内容类型，抛离其他类型不少。</p><p>这两类内容在小宇宙上数量多、听的人也多，每条内容的时长大概率也不会太短，是小宇宙这个内容平台最容易被贴上的标签。它们彼此之间差别倒是不大，「对话与访谈」略高。对于这两个标签的看法，就见仁见智了。</p><p>现在的小宇宙属于娱乐圈吗？这个问题的回答取决于选择的角度。</p><p>如果看收听量最大的那些内容，我觉得这个问题的回答是肯定的。从收听量来看，可以认为「娱乐与群聊闲谈」是收听量最高的内容类型，听的人多，用户都奔着娱乐圈的内容去，那可不就属于娱乐圈。新浪微博就是一例，毕竟娱乐圈数据刷得最狠的，除了视频平台，就是新浪微博。</p><p>如果看总收听时长，我会简单粗暴地把小宇宙分成 3 份，其中 1 份是娱乐圈的，另外 1 份属于访谈节目，还有 1 份属于其余内容类型。</p><h2>有人听才更有可能把内容做长</h2><p>内容收听时长 = 内容收听量 × 内容时长。小宇宙上的内容有多长，用户心中可能会有不同的答案。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/10/a4e928b42d178527c5c00057324b4bc4.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>差别还是挺明显的</figcaption></figure><p>内容类型对时长会有一定影响，但我发现更有趣的是不同收听量的内容，时长也有明显的差异。总体趋势如上图所示，收听量越大，内容的时长也越长。收听量 1000 以下的内容 50 分钟左右，一千至一万的 1 小时左右，一万至十万的 70 分钟左右，十万以上的 90 分钟左右。</p><p>小宇宙上的内容可以有多长？单条三四个小时的肯定听到过，它们的收听量在什么量级，我相信日常使用小宇宙的读者心中有数。值得好奇的是为什么收听量和时长会呈现出这样的关系。思来想去，我并没有能够获得让自己满意的答案。我能想到的推论是：把内容做长本身并不是一件容易的事，内容收听量大的创作者，更有信心也更有能力把内容做长。</p><p>对小宇宙内容的分析暂且告一段落。这次的样本量有 7 万多，难得我不需要为样本量不足而发愁。虽然绝对数量并不少，但和小宇宙内容总量相比，也只是沧海一粟。这个方便样本的代表性如何，我无从判断。之所以在不确定样本代表性的情况下还是做了这些分析、写了这篇文章，主要原因是在公开可搜索的互联网范围内，我没能找到类似的内容。我发出来了，如果运气好，说不定能抛砖引玉，哪位大神看不过眼露一手，满足我的好奇心。</p><h2>附录</h2><p>小宇宙电台 URL 来自<a href="https://xyzrank.com/#/hot-podcasts" target="_blank">这里</a>，<a href="https://fyfy.fm/" target="_blank">枫言枫语</a>在发布于 2022 年 7 月 19 日的<a href="https://justinyan.me/post/5043" target="_blank">这期</a>节目进行了介绍</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/10/074599e44849f635a142ac57adb0eb73.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>确实是机缘巧合</figcaption></figure><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101961</id>
            <title>提升Safari网页浏览效率的必备插件——Vimlike</title>
            <link>https://sspai.com/post/101961</link>
            <guid isPermaLink="false">https://sspai.com/post/101961</guid>
            <pubDate></pubDate>
            <updated>Wed, 20 Aug 2025 02:13:43 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Vimlike, 键盘操作, 网页浏览, 效率提升

<br>
<br>
总结: 本文介绍了Vimlike这款macOS插件，它旨在通过模拟Vim编辑器的键盘操作方式来提升网页浏览效率。作者认为在Safari浏览器中，虽然存在原生快捷键，但操作时手指仍需离开固定位置，仍有优化空间。Vimlike可以将网页操作（如前进、后退、切换标签页、刷新等）绑定到自定义的按键上，实现近乎无需鼠标的操作。该软件免费，允许用户根据自己的习惯修改和禁用快捷键配置。它还提供了全键盘操作模式，通过按键提示快速跳转页面元素，并支持在iPadOS和iOS上通过iCloud同步设置。 </div>
                        <hr>
                    
                    <p style="margin-left: 0.0px;">假如你是一名程序员，你一定知道大名鼎鼎的Vim。这是一款功能强大的文字编辑器，内置了许多快捷键，熟练后可以大幅提升工作效率。</p><p style="margin-left: 0.0px;">如果你不知道的话，可以看看视频里的操作。<a href="https://www.bilibili.com/video/BV1Mr4y167Ea/">https://www.bilibili.com/video/BV1Mr4y167Ea/</a></p><p style="margin-left: 0.0px;">在Vim的使用过程中，操作者基本不需要使用鼠标或触控板，仅凭键盘就可以实现一套工作流。这种方式大大省下了鼠标键盘来回切换以及移动鼠标的时间。</p><p style="margin-left: 0.0px;">然而在我的MacBook使用体验中，占用时长最大、鼠标移动次数最多的还是Safari浏览器，也就是网页浏览。虽然Safari有一套自己的快捷键，例如比较常用的cmd + shift + 左/右 进行网页切换，还有cmd + T 创建新页面、cmd + L 选择地址栏等，但很多时候我的手指还是需要脱离固定的位置，花费一点时间定位到这几个键，总体来讲还是可以优化的。</p><p style="margin-left: 0.0px;">在绝大部分的网页操作中，我并不会用到键盘输入文本。因此，我完全可以将键盘的某些键与我希望的那些操作绑定，从而提升网页浏览体验。</p><p style="margin-left: 0.0px;">而在macOS上恰恰有这么一个满足要求的插件——Vimlike。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/f10d5c32b750957d49a63245ba51b4ee.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>App Store上的"Vimlike"</figcaption></figure><p style="margin-left: 0.0px;">Vimlike在App Store中就可以免费下载。除了上述提到的功能外，它还内置了搜索功能和ai功能，不过搜索我一般用Spotlight，AI则是完全用不到。这些功能都可以选择性关闭，只选择自己需要的部分。</p><p style="margin-left: 0.0px;">软件初始会给你一套默认的快捷键，你可以根据自己的喜好调整。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/2a354b01f9eb75a60a750b5e511b2e55.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">在这个界面中，修改绿色单引号的部分即可。如果有你不想要的功能，在那一行最前面加上注释符号//来禁用。</p><p style="margin-left: 0.0px;">以下是我的一些配置参考。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/70ccd1d9b5fd59c0d3567296f0416cf2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">其中用得最多的是 A S Q W R X 这六个键，分别对应后退、前进、上个tab、下个tab、刷新、关闭。</p><p style="margin-left: 0.0px;">因为我的手习惯以标准动作（就是小学电脑课老师教的那种）搭在键盘上，所以这个配置对我来说最为舒服。</p><p style="margin-left: 0.0px;">如果你想体验全键盘操作，那么可以开启这个选项。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/346affd28d45d708227303923ae5e131.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">启用后，当你点下对应的按键，屏幕上的各个元素会有一个字母组成的小方块，在这个界面按顺序点击里面的字母，就可以跳转到对应的网页。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/21b6fe759578c77e84aeb201d5025f02.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">不过我不太习惯这个界面，主要是感觉样子不太好看。（设置里也可以更改这个界面的样式。）</p><p style="margin-left: 0.0px;">同时该App也提供iPadOS和iOS的版本，支持通过iCloud同步按键设置。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101952</id>
            <title>全面解析google世界模型Genie：真的能打开AGI的大门吗？</title>
            <link>https://sspai.com/post/101952</link>
            <guid isPermaLink="false">https://sspai.com/post/101952</guid>
            <pubDate></pubDate>
            <updated>Wed, 20 Aug 2025 02:13:20 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Google DeepMind, Genie 3, 世界模型, AGI

<br>
<br>
总结: Google DeepMind发布了第三代世界模型Genie 3，能够根据文本提示实时生成可交互的3D环境。世界模型是AI系统对现实或虚拟环境的内部表示和理解框架，具备时空一致性、因果理解、泛化能力和多模态整合等关键特征。Genie 3实现了720p分辨率、24 FPS的实时交互，能维持长达一分钟的视觉记忆和场景一致性。它通过观察视频数据自主学习物理规律，并允许用户通过文本指令动态触发“可提示”事件来修改环境。该模型被视为构建AGI所需“感知+理解+交互”底层接口的关键模块，但其在通用性、自主性和长期规划等方面仍有待提升。世界模型被认为是实现机器智能对世界进行感知、建模与推理的核心。 </div>
                        <hr>
                    
                    <blockquote><p>Google DeepMind发布第三代世界模型Genie 3：能够实现实时3D环境生成甚至可以生成游戏世界可以根据我们指令进行操作，这款AI系统可以根据文本提示生成前所未有的多样化交互式3D环境。</p><p>Genie 3是第一个允许实时交互的世界模型，真是像网传那样是真正通向AGI的大门吗？</p></blockquote><h2>首先我们了解一下什么是“世界模型”</h2><blockquote><p>想象你的大脑如何理解一个房间。你不是简单地"存储"房间里每个物体的位置，而是心理建立了一个完整的房间地图，包括：物体之间的空间关系放在在那里？不同的物体该怎么使用？如果你移动某个物体会发生什么变换？怎么从空间中这里走到那里？</p><p>世界模型就是AI系统的这种"心理地图"，通过数学和计算的方式来表示的。</p></blockquote><p>世界模型是人工智能系统对现实世界或虚拟环境的内部表示和理解框架。它不仅仅是对静态信息的存储，更是一个动态的、可预测的系统，能够<strong>模拟环境的变化、物理规律的作用，以及不同行为产生的后果。世界模型让AI从"空无猜想"变成"活灵活现"，能够像人一样在脑中"预演"各种可能性。</strong></p><p>&nbsp;</p><p>世界模型几个关键特征：</p><figure class="table"><table><tbody><tr><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><strong>时空一致性</strong></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">保持时间和空间上的一致性。物体不能突然消失或违反物理定律，场景中的元素应该遵循现实世界的规律。“你在这个墙上画了图案，出去一段时间之后回来还在”</td></tr><tr><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><strong>因果理解</strong></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">需要理解行为与结果之间的因果关系。当某个动作执行时，模型应该能够预测相应的后果。“你踢了足球，足球就会起飞。”</td></tr><tr><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><strong>泛化能力</strong></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">世界模型不应该只记忆训练数据，而要能够泛化到新的场景和情况中。“训练时只见过猫和狗走路但遇到马时，也能理解四条腿的动物是这样移动的”</td></tr><tr><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><strong>多模态整合</strong></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">现实世界包含视觉、听觉、触觉等多种信息，理想的世界模型应该能够整合这些不同模态的信息。设想中的未来形态……</td></tr></tbody></table></figure><h2><strong>Genie 的</strong>起源发家史</h2><p>首先了解一下Genie的整个产品的发展路线和变换，才能对这个产品品有更深入的理解。</p><h3><strong>起点：Genie 1 — 生成2D互动环境</strong></h3><p>Genie 1 是 DeepMind 在 2024 年2月推出的基础“世界模型”，具备通过文本、图像、照片或草图生成可操作虚拟场景的能力，支持逐帧交互。该模型规模达 110 亿参数，通过时空视频编码器、自回归动力学模型和潜在动作模型构建，被视为早期的“Foundation World Model，<strong>这为生成和进入虚拟世界的各种新路径开启了大门。</strong></p><blockquote><p>用户只需提供一张纸上的草图、一幅完美的数字艺术作品，甚至是AI生成对2D世界的描述，Genie就会完成剩下的工作，帮用户生成2D游戏。</p></blockquote><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/article/3b18677631bb3f1300827c189649bdfe.gif" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/article/1e15bcf92cc9fa5ff6d3d09c0a771cbf.gif" /></figure><h3><strong>跃升：Genie 2 — 生成可玩 3D 世界</strong></h3><p>&nbsp;探索于 2024 年12月，Genie 2 可<strong>从单张图像生成多样化、可交互的 3D 世界</strong>。其环境结构是一致的，用户或 AI 在穿梭后返回场景中仍然保持不变，并支持人类或 AI 进行动作操作（如跳跃、水中行走、攀爬等）因此这些环境可被用来训练所谓的 embodied agents（具身智能体<strong>）</strong>，让 AI 在虚拟世界中自主探索、决策、执行目标。Genie 2 甚至特别指出可用于训练这类 agent。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/20/4fef0015bb9d82f3591a1f2e38ef8c0b.gif" /></figure><h3><strong>飞跃：Genie 3 — 实时交互与世界记忆的突破</strong></h3><p>2025 年 8 月推出的 Genie 3，是第一个真正支持实时交互的“世界模型”。它可把<strong>文本或图像提示转化为 720p、24 FPS 的互动 3D 场景</strong>，用户可以实时探索并交互，环境保持一致且反应自然 。可用于游戏原型开发、AI agent 训练、机器人仿真、教育模拟、历史还原、虚拟旅游等</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/article/b10f915a362cc9f861000b89983f800e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>总结</h3><p>Genie3的发展历程体现了世界模型技术的演进：</p><p>第一代Genie主要专注于<strong>2D游戏环境的生成</strong> ➡️&nbsp;</p><p>第二代Genie2扩展到<strong>更复杂的视频生成和简单的3D场景 </strong>➡️&nbsp;</p><p>Genie3则实现了<strong>真正意义上的3D世界模拟</strong>，具备了前所未有的真实感和交互性～</p><figure class="table"><table><tbody><tr><td style="border: 0.5pt solid rgb(222, 224, 227); text-align: center;"><strong>特性</strong></td><td style="border: 0.5pt solid rgb(222, 224, 227); text-align: center;"><strong>Genie 3</strong></td><td style="border: 0.5pt solid rgb(222, 224, 227); text-align: center;"><strong>Genie 2</strong></td><td style="border: 0.5pt solid rgb(222, 224, 227); text-align: center;"><strong>Genie 1</strong></td></tr><tr><td style="border: 0.5pt solid rgb(222, 224, 227);"><strong>分辨率</strong></td><td style="border: 0.5pt solid rgb(222, 224, 227);">720p@24fps</td><td style="border: 0.5pt solid rgb(222, 224, 227);">720p（约）</td><td style="border: 0.5pt solid rgb(222, 224, 227);">160x90@10fps</td></tr><tr><td style="border: 0.5pt solid rgb(222, 224, 227);"><strong>实时交互</strong></td><td style="border: 0.5pt solid rgb(222, 224, 227);">✅ 真正实时（50ms延迟）</td><td style="border: 0.5pt solid rgb(222, 224, 227);">❌ 有限交互（自回归延迟）</td><td style="border: 0.5pt solid rgb(222, 224, 227);">❌ 无（约1fps）</td></tr><tr><td style="border: 0.5pt solid rgb(222, 224, 227);"><strong>最大时长</strong></td><td style="border: 0.5pt solid rgb(222, 224, 227);">数分钟</td><td style="border: 0.5pt solid rgb(222, 224, 227);">1分钟（通常10-20秒）</td><td style="border: 0.5pt solid rgb(222, 224, 227);">1.6秒</td></tr><tr><td style="border: 0.5pt solid rgb(222, 224, 227);"><strong>3D世界生成</strong></td><td style="border: 0.5pt solid rgb(222, 224, 227);">✅ 完整3D环境</td><td style="border: 0.5pt solid rgb(222, 224, 227);">✅ 完整3D环境</td><td style="border: 0.5pt solid rgb(222, 224, 227);">❌ 仅2D平台游戏</td></tr><tr><td style="border: 0.5pt solid rgb(222, 224, 227);"><strong>控制</strong></td><td style="border: 0.5pt solid rgb(222, 224, 227);">键盘/鼠标+文本提示+实时修改</td><td style="border: 0.5pt solid rgb(222, 224, 227);">单图像提示+键盘/鼠标控制</td><td style="border: 0.5pt solid rgb(222, 224, 227);">8个离散潜在动作</td></tr><tr><td style="border: 0.5pt solid rgb(222, 224, 227);"><strong>场景一致性</strong></td><td style="border: 0.5pt solid rgb(222, 224, 227);">1分钟视觉记忆，高级连贯性</td><td style="border: 0.5pt solid rgb(222, 224, 227);">长期记忆，屏幕外保持</td><td style="border: 0.5pt solid rgb(222, 224, 227);">极度有限（16帧记忆）</td></tr></tbody></table></figure><h2>Genie 3 技术特点</h2><h3><strong>1. 实时交互的技术奇迹</strong></h3><p>Genie 3可以以24fps的速度进行流媒体传输，能够记住物体长达一分钟，实现了真正的实时交互。这不仅是静态视频或一次性模拟，而是实时、可控的世界，用户可以在其中移动、响应、改变，分辨率达到720p，24 FPS，一致性可以保持几分钟。</p><p>这种实时性的实现依赖于全新的计算架构设计。<strong>模型在处理每一帧时，不仅要考虑当前的用户输入，还要综合分析之前几分钟内积累的所有交互历史。</strong>这就像是一位经验丰富的游戏设计师，能够在玩家每次操作后立即构想出下一个场景，同时确保整个体验的连贯性和逻辑性。</p><blockquote><p>可以实现在火山地形上行走，乘坐摩托艇根据你的操作进行拐弯驾驶穿过节日水域，或在深海峡谷中航行</p></blockquote><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/20/3942b3a3ae622225a1ab3c095c37fad9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3><strong>2.长期一致性维护</strong></h3><p>先进的神经架构通过参考先前的轨迹信息来维持长期一致性 。Genie 3环境在几分钟内保持基本一致，视觉记忆可以追溯到一分钟前。这种一致性是模型的新兴能力，与依赖显式3D表示的NeRFs和Gaussian Splatting等方法不同。</p><p>想象一下，模型需要在生成每一帧的同时，在脑海中维持一张不断更新的"世界地图"，这个跟我们之前游戏需要构建一个完整的空间已经搭建好的场景完全不一样，需要有<strong>实时生成+强大记忆（一致性）</strong>。当用户重新访问之前去过的地方时，模型需要准确地从记忆中提取相关信息，并且需要确保环境的一致性。</p><blockquote><p>如果你在一面墙啊上画一幅画转身离开，回头看看，世界仍然和你离开的一样。Google DeepMind Genie 3可以记住对象、纹理和文本长达一分钟。</p></blockquote><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/20/7fa1e1c58815758bdac5a4aa66fcab1f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/20/13dc55bced17cbce29a027f17eb5caff.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/20/034516e23468fabb590ac8df49097f73.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3><strong>3.可提示的世界事件</strong></h3><p>允许用户和AI代理触发"可提示"事件：比如即时天气变化或新角色但是并而不破坏当前沉浸感 。这种能力使用户能够通过文本指令动态改变生成的世界，如改变天气条件或引入新的物体和角色。每一个指令都会实时反映在画面中，可以立即看到不同创意选择的视觉效果，大大加速了创意探索的过程。</p><blockquote><p>你可以立即改变世界。从晴朗的天空切换到飓风，添加新角色，或创建梦幻般的门户——所有这些都不会打破沉浸感。可以给现有的场景中加各种事件。比如“一只龙从天而降”“一个穿着公鸡玩偶的人跑过”“开始下雨”"出现一个穿红衣的神秘女性"、"街灯开始闪烁"、"远处传来警笛声"</p></blockquote><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/20/f080cb7a99e9dea1db61f8237ee79d54.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3><strong>4.多样化环境生成</strong></h3><p>能够模拟从现实景观到奇幻世界的多样化环境 ，与许多依赖预编程物理引擎的系统不同，<strong>Genie 3通过观察大量真实世界的视频数据，自主学习了物理规律</strong>。水会向下流淌，物体会因重力而下落，光线会投射阴影，所有这些都基于模型对真实物理世界的理解，让AI通过理解其中的规律进行重现。</p><p>换句话说，他们并没有为这些行为做专门的训练或设计，而是模型自己「学」出来的。它通过足够丰富的训练数据，掌握了这个「世界」的通用常识。大多数时候，它表现非常不错。</p><blockquote><p>自然现象建模（水和光照效果）和自然世界模拟（生态系统、动物行为、植物生命）</p></blockquote><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/20/8543c235ea7c60eb771d21751a7b821b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>5.创意产业：想象力的具现化</h3><p>在创意产业中，Genie 3正在模糊现实与想象之间的界限。谷歌Genie 3引擎在富有想象力的动画世界中也很出色。建造发光的蘑菇森林、异想天开的树屋村庄或充满活力的彩虹桥，有奇妙的生物。无论是游戏、电影还是讲故事，Genie 3世界模型都以完整、可探索的3D将小说带入生活。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/20/66e226f4b903bb3e524915ed83e01844.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>6.探索位置和历史设置</h3><p>Genie 3正在创造一种全新的学习方式。可以让你真正"走进"公元80年的罗马，站在斗兽场的观众席上，观看角斗士的比赛，感受古代观众的欢呼声。Genie 3模型以丰富的纹理、逼真的灯光和互动深度再现了地方和时代，使探索感觉真实而身临其境。</p><blockquote><p>可以沉浸感受不同时期的不同场景，比如可以输入指令“威尼斯的运河”“古罗马斗兽场，公元80年”“赛博朋克城市，2080年”</p></blockquote><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/20/ec29d94702b312a36f2ee7558b39afa6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>实现的技术手段</h2><p>在过去几年里，AI 的生成能力经历了惊人的飞跃：从最初的<strong>文本生图</strong>（MidJourney、Stable Diffusion），到<strong>文生视频</strong>（Sora、Pika），再到如今的 <strong>世界生成</strong>。</p><p>&nbsp;<strong>Genie 3</strong>代表着 AI 第一次真正让“虚拟世界”变得可玩、可探索、可修改，能够根据文本或交互指令，实时生成高保真、物理一致的3D虚拟场景。其核心机制可拆分为以下几个模块，每一模块都对应关键的技术挑战。</p><p>那么这个世界模型到底是怎么实现的呢？</p><p>如何实现了真正意义上的3D世界模拟，具备了前所未有的真实感和交互性？</p><h2>1. 世界建模（World Modeling）</h2><h3>1.1 内部表示与因果推理</h3><p>传统的自回归生成面临着一个核心挑战：随着序列长度的增加，累积误差会导致生成质量的快速下降。对于世界模拟而言，这个问题更加严重，因为任何小的不一致都会破坏整个虚拟世界的可信度。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/cf2bbae56fa047ed7cbc8cafe578cbde.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>Genie 3 并非逐个像素地拼凑画面，而是维护一个高维抽象的“世界状态”向量，包含场景中所有物体的位置、姿态、物理属性（如质量、摩擦系数）及对象间的因果关系。这一表示需要同时满足：</p><ul><li><strong>多模态一致性：</strong>视觉、物理、语义信息一一对应。</li><li><strong>可微分渲染兼容：</strong>模型输出可用于梯度反向传播，便于端到端训练。</li></ul><p><strong>这种技术的优势：</strong></p><ul><li>用<strong>抽象而压缩的结构化表示</strong>，代替庞大的逐像素建模，提升泛化性与计算效率。</li><li>支持<strong>可逆可调的物理模拟与画面生成</strong>：例如调整光源角度，模型能推断出阴影和亮度变化。</li></ul><h3>1.2 隐状态更新与记忆</h3><p>系统利用变分自编码器（VAE）或扩散模型编码当前帧的视觉输入，并结合长短期记忆（LSTM）或自注意力网络（Transformer）维护场景演化的时序隐状态。</p><p>技术难点：<strong>如何保证记忆网络在长序列（上千帧）下不出现梯度消失／爆炸，并且能够保留远距离因果关系</strong>（如前面墙体破损如何影响后续光影）。</p><h2>2.自回归渲染（Autoregressive Rendering）</h2><h3>2.1 帧间预测</h3><p>Genie 3 将每一帧的渲染视为条件自回归过程：</p><ol><li>输入：上⼀帧图像编码 + 当前世界状态 + 用户操作（如“向前移动”“拾取物体”）。</li><li>预测：下⼀帧图像编码。</li><li>渲染：解码器将预测编码转换为像素级画面。</li></ol><p><strong>技术难点：</strong>实时性要求每帧处理时长 &lt; 40 ms。为此需优化模型结构（轻量化 Transformer）、高效硬件加速（TPU/VPU）及流水线并行（帧间预取、双缓冲）。</p><h3>2.2 物理一致性</h3><p>为了防止物体“穿模”或“闪烁”，系统在自回归渲染的同时融入了基于物理引擎的约束计算，<strong>最重要的创新是emergent physics understanding（涌现物理理解），</strong>Genie 3无需硬编码物理引擎，需要用碰撞检测与力学求解器实时计算下一状态的物理边界。通过观察学习物理：</p><ul><li><strong>重力和碰撞检测</strong>：物体掌落、弹跳和真实交互</li><li><strong>流体动力学</strong>：水流运动、飞溅和反射效果</li><li><strong>光照效果</strong>：动态阴影、反射和照明变化</li><li><strong>材质物理</strong>：不同表面类型的适当响应</li></ul><p><strong>技术难点：</strong>深度网络与传统物理引擎的耦合瓶颈。如何在保持渲染速度的同时保证求解精度，是架构设计的重点。复杂多对象交互偶有物理不一致， TechCrunch软体物理（布料、绳索）仍有挑战，流体模拟在复杂几何交互中存在瑕疵。</p><h3>2.3 时间连贯性维护</h3><p>Genie 3实现了unprecedented temporal coherence（前所未有的时间连贯性），视觉记忆窗口能够满足长达1分钟， 长程记忆解决了自回归生成中的累积误差问题。</p><p><strong>连贯性机制</strong>：</p><ul><li><strong>空间关系维护</strong>：环境逻辑在不同视点间保持一致</li><li><strong>对象持久性</strong>：树木、建筑等在重访回看时保持一致</li><li><strong>动作一致性</strong>：角色动画和运动的真实表现</li><li><strong>环境交互</strong>：如气球破裂、开门等复杂交互的长期维护</li></ul><h2>3.文本与交互指令理解</h2><h3>3.1 语义解析与指令映射</h3><p>Genie 3的文本理解基于<strong>修改版T5架构</strong>，结合领域特定微调，实现复杂文本提示到3D环境的精确映射。 Cursor IDE系统支持：</p><ul><li><strong>详细环境描述</strong>：天气、光照、地理和交互元素的精确解析</li><li><strong>复杂叙事提示</strong>：场景、角色和动态事件的综合描述处理</li><li><strong>空间关系理解</strong>：展现解释和维护生成环境中空间一致性的能力</li></ul><p><br />指令处理流程：</p><ul><li><strong>文本到世界生成管道</strong>：转换自然语言为交互式3D环境</li><li><strong>语义空间关系理解</strong>：维护生成环境的空间一致性</li><li><strong>上下文感知场景生成</strong>：理解并实现提示中描述的复杂环境交互</li><li><strong>动态指令执行</strong>：处理"可提示世界事件"的实时文本指令</li></ul><h3>3.2 即时反馈与一致性校正</h3><p><strong>响应生成架构</strong>采用自回归帧生成，每帧考虑随时间增长的先前生成轨迹。 记忆引用系统可在用户重访位置时引用1分钟前的相关信息，实现近即时输入响应和立即环境反馈。</p><p>指令解析后，系统立即在内部世界状态上应用变换，并触发自回归渲染。为了避免用户“塞入”不合理指令（如把刚投掷的球瞬移到半空），需要：</p><ul><li><strong>合法性检查：</strong>规则或学习出的约束对指令进行过滤与修正。</li><li><strong>回滚与重试：</strong>若渲染结果与物理规则冲突，自动回滚到最近合法状态并尝试次优解。</li></ul><h2>4.系统架构与硬件优化</h2><h3>4.1 模型并行于流水线</h3><p><strong>帧级并行：</strong>使用双缓冲技术，一边渲染当前帧，一边预测下一帧的隐状态。</p><p><strong>模型切分：</strong>将编码器、物理求解器、解码器拆分到不同加速单元（如编码器在 TPU，渲染在 VPU）。</p><h3>4.2 低延迟传输与异步计算</h3><p><strong>RPC 与共享内存：</strong>各模块间通过高速总线异步交换世界状态，减少等待时间。</p><p><strong>动态精度调整：</strong>根据场景复杂度自动切换计算精度（如远景用半精度浮点，近景用全精度）。</p><figure class="table"><table><tbody><tr><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">&nbsp;</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">Genie 2</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">Genie 3</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">提升幅度</td></tr><tr><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">分辨率</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">360p</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">720p</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">4x像素</td></tr><tr><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">持续时间</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">10-20秒</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">2-5分钟</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">6-15x</td></tr><tr><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">帧率</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">15 fps</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">24 fps</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">60%提升</td></tr><tr><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">实时交互</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">❌</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">✅</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">突破性进展</td></tr><tr><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">内存持续时间</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">10秒</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">1分钟</td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;">6x提升</td></tr></tbody></table></figure><h2>主要技术突破和难点汇总:</h2><h3>核心技术突破点：</h3><figure class="table"><table><tbody><tr><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><strong>🌍 实时世界生成突破</strong></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><strong>⌚️ 扩展时间一致性创新</strong></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><strong>💥 涌现物理理解革命</strong></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><strong>☁️ 可提示世界事件功能</strong></td></tr><tr><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><p>首个实现真正实时交互性的世界模型</p><p>逐帧生成同时维持时间连贯性</p><p>预测计算减少感知延迟</p></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><p>视觉记忆扩展到1分钟</p><p>自动防止扩展序列中的错误累积</p><p>无需显式记忆架构的涌现世界持久性</p></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><p>从视频数据自主学习而非编程方程学习物理行为</p><p>理解对象交互、重力、流体动力学</p><p>环境变化的因果推理</p></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><p>通过自然语言实时环境修改</p><p>动态天气、对象生成、环境变换</p><p>修改期间依旧维持原有空间沉浸感</p></td></tr></tbody></table></figure><h3>当前技术限制分析：</h3><figure class="table"><table><tbody><tr><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><strong>⏰ 持续时间还不够长</strong></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><strong>👋 交互空间有限</strong></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><strong>🤖 多智能体协作难题</strong></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><strong>💰 算力代价很高</strong></td></tr><tr><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><p>目前模型最多能稳定生成 <strong>15~20分钟</strong>，还达不到训练一个小时级任务的需求。</p><p>需要改进记忆和一致性策略，才能向小时级过渡。</p></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><p>现在的交互还偏基础，比如“走路导航”，<strong>更复杂的操作还做不到</strong>（比如搬东西、打开门）。</p><p>下一步会拓展成更像“操作世界”的能力。</p></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><p>多个 AI 一起协作时会变得很难控制，比如两个角色在同一个空间互动时容易“打架”或混乱。</p><p>DeepMind 正在研究<strong>共享世界中的多智能体协同机制</strong>。</p></td><td colspan="1" rowspan="1" style="border: 1px solid rgb(222, 224, 227); padding: 8px; vertical-align: top;"><p>跑一个模型需要 8 个 TPU v5 或 4 块 H100，硬件要求相当高。</p><p>每小时运算成本大概是 <strong>50 到 200 美元</strong>，大规模部署目前还有点吃力。</p></td></tr></tbody></table></figure><h2>Genie3真的能打开AGI的大门吗？</h2><h4><strong>先说结论：</strong></h4><blockquote><p><strong>Genie 3 是通往 AGI 的“关键模块节点”，它像是未来 AGI 大脑中的“3D 世界视觉 + 物理理解系统”</strong>，具备了构建抽象世界模型的雏形。但若说它已经实现了真正的“通用智能体”，仍然为时尚早，中间还有多个关键跨越点需要攻克。</p></blockquote><h3><strong>从“看图生成”到“理解世界”的转变</strong></h3><p>Genie 3 之所以引发如此大关注，是因为它代表了一种范式转变：从传统的逐帧图像生成，走向对<strong>世界状态的构建与演化建模</strong>。它不再是“根据输入图片生成下一帧”，而是在内部构建了一个<strong>高维的抽象状态向量</strong>，用于表达场景中每一个物体的位置、运动状态、物理属性，甚至它们之间的因果关系。这种能力让人类第一次在消费级 AI 模型中，看到了“世界建模（World Modeling）”的真实形态。</p><p>这种模型可以模拟“如果灯光关闭，房间会变暗”、“如果球撞到墙，会反弹”等常识性物理推理，并通过自然语言对这些世界状态进行实时操控。这比仅仅会“画画”的扩散模型，<strong>更能让我们想象出来未来AGI完全可以为我们构造一个全新世界的愿景</strong>。</p><h3><strong>Genie 的迭代速度远超预期</strong></h3><p>值得注意的是，从 Genie 第一代模型提出，到如今 Genie 3 发布，仅仅经历了不到一年半的时间。在这短暂的周期内，模型的核心能力从2D视频生成跃迁为3D的<strong>可交互、可推理、可操控的实时世界建模系统</strong>，其背后的技术进化速度远超我们的想象。</p><p>这不仅仅是模型架构的进步，更是底层理念的突变。Genie 3 不再将世界当作一帧帧像素去处理，而是转向<strong>模拟“现实演化”的高维潜在空间表达</strong>，这种做法本质上更加接近于人类对世界的认知方式。</p><p>从某种意义上说，Genie 的这条路线，<strong>正在尝试为 AGI 构建“感知+理解+交互”的一整套底层接口</strong>。</p><h3><strong>AGI 的一块“世界模拟器芯片”</strong></h3><p>尽管 Genie 3 的能力令人兴奋，它依然<strong>不具备实现 AGI 所需的通用性和自主性</strong>。目前，它的核心优势集中在<strong>物理世界的模拟与可控交互</strong>，它在<strong>跨模态认知能力、自主目标生成能力、长期记忆与规划能力、自我模型认知能力</strong>这些方面，目前的 Genie 仍需进一步提升。它更像是未来 AGI 系统中不可或缺的一个“子模块”——一个高度智能、能模拟现实的<strong>3D 世界感知和物理交互单元</strong>，可能作为通用智能体的“感知中枢”或“虚拟世界引擎”存在。</p><blockquote><p>换句话说，<strong>Genie 不是通用智能体，但它让我们看见了通用智能体可以生长的土壤。</strong></p></blockquote><h2><strong>结语：世界模型是通向 AGI 的关键钥匙</strong></h2><p>Genie 3 的出现只是为AGI确指向了一个未来的方向——<strong>机器智能不应止步于理解语言或生成图像，更应该具备对世界的感知、建模与推理能力。</strong></p><p>它所构建的高维“世界状态”向量、实时可交互的物理模拟能力，以及对因果结构的涌现理解，构成了未来通用智能体“感知-认知-行动”链条中的重要一环。正是通过这种模拟与建模的能力，AI 才可能逐步接近人类的理解方式，拥有“身临其境”的认知体验。</p><p>正如 DeepMind 创始人 <strong>Demis Hassabis</strong> 所言：</p><blockquote><p><strong>世界模型是智能的核心。如果 AI 无法模拟世界，它就无法真正理解这个世界。</strong></p></blockquote><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/20/b7784bfe19cd649199dd7b0742faef54.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101954</id>
            <title>自建 Gotify 通知推送服务</title>
            <link>https://sspai.com/post/101954</link>
            <guid isPermaLink="false">https://sspai.com/post/101954</guid>
            <pubDate></pubDate>
            <updated>Tue, 19 Aug 2025 13:18:38 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Gotify, 自建通知, Docker, Crowdsec

<br>
<br>
总结: Gotify是一个开源的自建通知推送服务，支持通过Docker部署。部署过程涉及创建Docker Compose文件、配置环境变量和网络设置。用户可以通过网页界面创建应用和获取token，并使用curl或CLI工具发送通知。Android设备可安装官方应用接收通知。文章还介绍了如何修改Gotify镜像以输出日志，并集成Crowdsec来监控日志和封禁恶意IP。最后提供了三个应用实例：配置Crowdsec发送安全警报、使用Watchtower发送容器更新通知，以及编写自定义脚本监控备份任务状态。 </div>
                        <hr>
                    
                    <h2>Gotify 简介</h2><p>Gotify 是一个开源支持自建的通知推送服务，可以被集成在许多使用场景里，用来推送各种重要通知。本篇文章将在我的云服务器上自建 Gotify 服务，并使用它来提醒一些重要服务的状态。</p><h2>开始搭建</h2><p>Gotify 支持使用 docker 搭建，搭建与使用也非常简单，下面是我使用的 Compose 文件：</p><pre class="language-yaml"><code>---
services:
  gotify:
    image: gotify/server:latest
    container_name: gotify
    volumes:
      - ./data:/app/data
      - gotify-log:/var/log/gotify
    restart: unless-stopped
    networks:
      - frontend
      - backend
    environment:
      - TZ=Asia/Shanghai
      - GOTIFY_DEFAULTUSER_PASS=${GOTIFY_DEFAULTUSER_PASS}
      - GOTIFY_SERVER_TRUSTEDPROXIES=[172.25.0..0/24]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gotify.entrypoints=https"
      # 需要改成自己的域名
      - "traefik.http.routers.gotify.rule=Host(`go.example.com`)"
      - "traefik.http.routers.gotify.tls=true"
      - "traefik.http.routers.gotify.tls.certresolver=cloudflare"
      - "traefik.http.services.gotify.loadbalancer.server.port=80"
      - "traefik.docker.network=frontend"

networks:
  frontend:
    external: true
  backend:
    external: true

volumes:
  gotify-log:
    external: true</code></pre><p>我使用了 Traefik 作为反向代理，只需在上面的 Compose 文件里填好 lable 就可以让 Traefik 自动为容器开启代理了，具体 Traefik 的部署，可以看我之前的<a href="https://sspai.com/post/97788">文章</a>。</p><p>环境变量 <code>GOTIFY_DEFAULTUSER_PASS</code> 是 Gotify 默认用户 admin 的密码，我没有直接把密码写在 Compose 文件里，更推荐的方法是在同目录新建一个 <code>.env</code> 的文件，再把一些涉及敏感信息的变量写入 <code>.env</code> 文件里，比如这里就可以在 <code>.env</code> 文件里设定密码：<code>GOTIFY_DEFAULTUSER_PASS=SuperSecretPass</code>，也可以不设置这个变量，那么默认的用户密码就是 <code>adminadmin</code>，要记得在第一次登陆到网页面板后及时更改密码；另一个环境变量 <code>GOTIFY_SERVER_TRUSTEDPROXIES</code> 是可信的反向代理地址，需要设为反向代理服务器的 ip 或 ip 段，不然就无法在日志中显示访问 Gotify 的客户端真实 ip。</p><p>网络部分我习惯创建两个网络，所有需要开放前端服务的放在 frontend 网络里，不需要开放前端服务的放在 backend 网络里，不过在后面的应用实例中我需要让 Gotify 和两个网络里的容器都能够联通，所以将 Gotify 同时容器放在了两个网络里。记得要提前创建好两个网络：</p><pre class="language-shell"><code># Traefik 运行在 frontend 网络里，所以 frontend 网络的网段应该与 GOTIFY_SERVER_TRUSTEDPROXIES 变量保持一致
docker network create frontend --subnet 172.25.0.0/24
docker network create backend</code></pre><p>docker 卷部分 <code>gotify-log</code> 是用来存放 Gotify 的日志以供 Crowdsec 读取的，这个卷也要提前创建好：</p><pre class="language-shell"><code>docker volume create gotify-log</code></pre><p>一切设置好，启动容器后，在浏览器中输入自己配置好的域名，就可以打开 Gotify 的网页面板了，默认用户名是 admin，密码是之前自己设置的密码。在右上角的 <code>USERS</code> 里面，可以创建新用户，也可以修改当前用户的密码。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/78cf145e00dd53ae67fb9a0ec469dcef.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>之后便可以尝试推送第一条消息了，在右上角的 <code>APPS</code> 里面，创建一个新的应用，名字和描述可以随便设置，优先级代表的是在 Android 系统上的消息优先级，最高是 10。创建以后会获得一个唯一的 token，将其复制下来。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/61314dca130c7fd2458540225285536e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>也可以根据自己的需要创建多个应用，用来为不同的消息推送设置不同的推送频道。</p><p>想要推送消息至 Gotify，无需额外的软件，直接用 curl 就可以手动推送一条消息：</p><pre class="language-shell"><code># 把域名改成自建的域名，&lt;apptoken&gt; 改成自己刚刚复制的 token
curl "https://go.example.com/message?token=&lt;apptoken&gt;" -F "title=这是标题" -F "message=这是正文" -F "priority=5"</code></pre><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/3b2883291c4987f6af54a341cd43918b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>也可以用 Gotify 自己的 <a href="https://github.com/gotify/cli">cli</a> 软件来推送消息，可以支持更复杂的格式</p><pre class="language-shell"><code>gotify push --url https://go.example.com --token &lt;apptoken&gt; --priority 10 --title "这是标题" "Gotify cli 支持换行 \n这是第二行"</code></pre><p>&nbsp;</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/b879dad76c56d335ff2f7d611cf9c1f2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>为了能够在 Android 手机上接收到 Gotify 的消息推送，可以安装 Gotify 的 <a href="https://github.com/gotify/android">Android 应用</a>，第一次打开需要输入自建的 Gotify url，点击下方的 <code>Check URL</code> 确认连接无误后，输入用户名和密码就可以登陆了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/1bbd71cb3618ca6e295d9d0931c86162.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>ios 设备可以安装 igotify 应用，但是由于一些系统限制，可能无法在后台接收消息，需要部署 <a href="https://github.com/androidseb25/iGotify-Notification-Assistent">iGotify-Notification-Assistent</a> 才可以接受后台消息，因为我并没有 ios 设备，所以无法演示具体的使用方法。</p><p>更多关于 Gotify 应用实现与使用场景，可以看 Gotify 官方的 <a href="https://github.com/gotify/contrib">contrib</a> 仓库。</p><h2>用 Crowdsec 监听日志</h2><p>Crowdsec 是一个类似 Fail2ban 的服务，可以监控服务日志并封禁恶意 ip，关于 Crowdsec 的部署在我之前的文章里也有提及。Crowdsec 官网有一个社区提供的<a href="https://app.crowdsec.net/hub/author/baudneo/collections/gotify">规则集</a>用来监控 Gotify 的日志，不过监控日志的前提是有日志可供读取，问题是 Gotify 官方的 docker 镜像默认不会把日志写入到文件中，所以 Crowdsec 就无法读取日志。</p><p>要想让 Crowdsec 读取 Gotify 的日志，需要自己构建 Gotify 的镜像，其实也很简单，在任意目录新建一个名为 <code>Dockerfile</code> 的文件，内容如下：</p><pre class="language-"><code>FROM gotify/server
ENTRYPOINT /bin/bash -c '/app/gotify-app | tee /var/log/gotify/gotify.log'</code></pre><p>文件的内容很简单，实质上就是在 Gotify 官方镜像的基础上，修改了启动命令，将日志输出到容器内的 <code>/var/log/gotify/gotify.log</code>，在与 <code>Dockerfile</code> 相同目录下，运行：</p><pre class="language-shell"><code># 将 tag 指定为 gotify/server:logger
docker build -t gotify/server:logger .</code></pre><p>便可创建新镜像，要想使用这个自定义镜像，就在前面的 Compose 文件里，把镜像的 tag 由默认的 <code>gotify/server:latest</code> 改成 <code>gotify/server:logger</code>。</p><p>我在前面的 Compose 文件里将保存日志的路径挂载到了 gotify-log 的 docker 卷里，再将这个 Docker 卷挂载到 Crowdsec 容器，便可让 Crowdsec 读取 Gotify 的日志了。</p><p>在 Crowdsec 容器这边，首先运行 <code>docker exec crowdsec cscli collections install baudneo/gotify</code> 来安装 Gotify 规则集，之后编辑 Crowdsec 的 Compose 文件，在最后引入之前创建的 gotify-log 卷：</p><pre class="language-yaml"><code>volumes:
  # 这里省略引入的其他 docker 卷
  gotify-log:
    external: true</code></pre><p>然后在前面的文件挂载部分挂载 gotify-log 卷：</p><pre class="language-yaml"><code>    volumes:
      # 这里省略其他的挂载路径
      - gotify-log:/var/log/gotify</code></pre><p>此外还要告诉 Crowdsec 要从哪里读取日志，编辑 Crowdsec 的 <code>acquis.yaml</code> 文件，在最后添加：</p><pre class="language-yaml"><code>---
filenames:
  - /var/log/gotify/gotify.log
labels:
  type: gotify</code></pre><p>完整的 Crowdsec 配置，可以看我的的 <a href="https://github.com/so1ar/self-hosting/tree/master/containers/crowdsec">Github 仓库</a>。</p><p>之后重启 Crowdsec 容器，并访问几次 Gotify 的网页面板从而生成一些日志文件，运行 <code>docker exec crowdsec cscli metrics</code>，在 <code>Acquisition Metrics</code> 看到有读取 <code>/var/log/gotify/gotify.log</code> 的日志，就说明配置成功了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/5ba8ca8289b5aa29cab97fa6931c1cd8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>应用实例</h2><p>配置好 Gotify 之后，便可以在其他自建服务中使用 Gotify 推送消息了，很多知名的自建服务都提供了 Gotify 推送集成，在这里我会演示我自己的三个应用场景。</p><h3>Crowdsec</h3><p>当 Crowdsec 检测到恶意 ip 后，可以配置将恶意 ip 的信息推送到 Gotify，可以让我及时发现潜在的攻击并采取行动。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/1e4679e50b4589328f83f512e19e7521.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>要为 Crowdsec 启用 Gotify 通知，首先要启用 Crowdsec 的 HTTP 插件，编辑 Crowdsec 配置文件目录里的 <code>profiles.yaml</code> 文件，找到下方的内容并取消注释，要注意一共有两处，分别用来处理 ip 和 ip 段：</p><pre class="language-yaml"><code>#notifications:
# - http_default</code></pre><p>取消注释后大概是下图的样子：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/ecf783bf9cc5a0354b3750b92efe0f97.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>之后配置 Crowdsec 的 HTTP 插件，编辑配置目录的 <code>notifications/http.yaml</code> 文件，删掉文件里所有的内容，然后直接照抄 Crowdsec <a href="https://docs.crowdsec.net/docs/notification_plugins/gotify">文档</a>里的内容就好，只需要更改两处内容，<code>url</code> 设为自己的 Gotify 地址，<code>X-Gotify-Key</code> 设为之前设定的 APP 的 token。因为我的 Crowdsec 与 Gotify 运行在同一个 docker 网络里面，如果 url 填成公网的域名会因为一些奇奇怪怪的路由问题无法连接，所以我这里直接把 url 写成了 <code>http://gotify/message</code>。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/fcc617fd246952e397fc6ac98f7b85a5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>配置完成后重启 Crowdsec 容器，先测试一下 Gotify 配置是否可用，运行 <code>docker exec crowdsec cscli notifications list</code> 可以列出目前配置好的通知服务，可以看到服务名是 <code>http_default</code>：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/8172cb8bd637a1427352cc8668bb4dad.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>然后运行 <code>docker exec crowdsec cscli notifications test http_default</code>，如果成功接收到消息，就说明配置成功了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/ff820063860e07f4230b08e6546e5164.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>Watchtower</h3><p>Watchtower 可以被用来自动监控并更新 docker 镜像，还可以配合 Gotify，当发现有容器镜像更新时推送消息。下面是我使用的 Watchtower Compose 文件：</p><pre class="language-yaml"><code>---
services:
  watchtower:
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment: 
      - TZ=Asia/Shanghai
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_ROLLING_RESTART=true
      - WATCHTOWER_DISABLE_CONTAINERS=gotify
      - WATCHTOWER_NOTIFICATIONS=gotify
      - WATCHTOWER_NOTIFICATION_GOTIFY_URL=${WATCHTOWER_NOTIFICATION_GOTIFY_URL}
      - WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN=${WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN}
      # 当 Gotify 没有使用反向代理和 TLS 加密时使用
      # - WATCHTOWER_NOTIFICATION_GOTIFY_TLS_SKIP_VERIFY=true
    networks:
        - backend

networks:
  backend:
    external: true</code></pre><p>Watchtower 主要是通过环境变量来进行配置。<code>WATCHTOWER_DISABLE_CONTAINERS</code> 是忽略更新的容器名，因为 Gotify 的容器镜像是手动创建的，如果不忽略的话每次检查更新时都会报错，所以要忽略检查更新 Gotify 容器；<code>WATCHTOWER_NOTIFICATIONS</code> 是所使用的通知服务，这里我使用的是 gotify，关于更多通知相关的配置，可以看 Watchtower 的<a href="https://containrrr.dev/watchtower/notifications/">文档</a>；<code>WATCHTOWER_NOTIFICATION_GOTIFY_URL</code> 和 <code>WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN</code> 分别是 Gotify 的地址和 APP token，由于这两个变量涉及敏感信息，我将其单独放在了 <code>.env</code> 文件里；<code>WATCHTOWER_NOTIFICATION_GOTIFY_TLS_SKIP_VERIFY</code> 这个变量只有在 Gotify 地址没有使用 TLS 加密、且要确保安全时才使用，对于我的情况，因为容器都是运行在同一个 docker 网络里的，地址可以直接用 <code>http://gotify</code>，所以这个变量要设为 true，如果使用了非 TLS 加密的地址，但没有设置这个变量，就会无法推送消息。</p><p>之后再在同目录创建一个 <code>.env</code> 文件，填入自己真实的 Gotify 地址和 token：</p><pre class="language-"><code>WATCHTOWER_NOTIFICATION_GOTIFY_URL=http://gotify
WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN=SuperSecretToken</code></pre><p>启动容器后，Watchtower 会尝试发送一条测试消息，如果能接收到消息，就说明配置成功了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/f56cf611e510d027c1c6f465a319c067.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>自定义脚本</h3><p>除了在已有的服务中集成 Gotify，也可以在自己的自定义脚本中使用 Gotify，在前面部署部分，提到了可以使用 curl 或 Gotify cli 来推送消息，那么我就可以解析脚本的输出结果，将需要的信息通过 Gotify 发送，以便出现问题时可以及时排查。</p><p>在我之前的<a href="https://sspai.com/post/88959">文章</a>中，我提到我会定时备份 Vaultwarden 和 FreshRSS 的数据，并将其同步到坚果云上，不过后来我买了阿里云盘的三方权益会员，所以我现在是使用<a href="https://github.com/tickstep/aliyunpan">阿里云盘 cli</a> 将其备份到我的阿里云盘上，我设置了备份脚本只会保留最近几天的备份文件，阿里云盘 cli 我选择了排他性上传，云盘上多余的文件会被删除。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/e0206ebc0d1ad4675c6644fe9c309d95.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>根据阿里云盘 cli 的输出结果，我写了个简单的脚本：</p><pre class="language-shell"><code>#!/bin/bash

# 自建 Gotify 的 url
GOTIFY_URL=https://gotify.example.com
# Gotify 的 token
GOTIFY_TOKEN=SuperSecretToken

# 上传文件
export ALIYUNPAN_CONFIG_DIR=/home/user/.config/aliyunpan
/usr/local/bin/aliyunpan sync start -ldir /home/user/backup -pdir /backup --drive resource --mode upload --policy exclusive --cycle onetime --up 1 --dp 1 --log true &gt; /tmp/aliyunpan.log

# 推送消息
UPLOAD_STATUS=$(grep '已完成' /tmp/aliyunpan.log)
if [ -z "${UPLOAD_STATUS}" ]; then
    FULL_LOG=$(cat /tmp/aliyunpan.log)
    /usr/local/bin/gotify push --url ${GOTIFY_URL} --token ${GOTIFY_TOKEN} --priority 10 "备份同步失败 \n${FULL_LOG}"
else
    DELETED=$(grep '多余文件' /tmp/aliyunpan.log)
    UPLOADED=$(grep '上传文件' /tmp/aliyunpan.log)
    if [ -z "${DELETED}" ]; then
        DELETED=没有文件删除
    fi

    if [ -z "${UPLOADED}" ]; then
        UPLOADED=没有文件上传
    fi

    /usr/local/bin/gotify push --url ${GOTIFY_URL} --token ${GOTIFY_TOKEN} --priority 4 "${DELETED} \n${UPLOADED}"
fi</code></pre><p>这个脚本所做的事，大致可以分为以下几步：</p><p>将阿里云盘 cli 的输出结果保存到 <code>/tmp/aliyunpan.log</code> 文件里，供后面解析；</p><p>从日志文件里查找「已完成」关键词，如果没有找到，说明文件上传失败，就会推送「备份同步失败」的字样，并附上完整的日志内容，因为同步失败多半是出了问题，可能是阿里云盘登陆过期，需要手动排查，故而将消息优先级设为了最高 10；</p><p>如果找到了「已完成」关键词，就说明同步成功了，就会从日志文件里分别找到删除和上传了哪些文件，并且把已经删除和上传的文件列表作为消息推送到 Gotify，因为这个消息不是很紧急，所以优先级设为了比较低的 4。</p><p>我设置了一个 cron 任务，每天凌晨自动运行一次，我就可以每天把备份文件自动同步，并及时获取同步状态了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/19/f3d13d27607f16129c34a21399287d55.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101953</id>
            <title>obsidian新版本的Base和weread插件一起打造你的专属图书馆</title>
            <link>https://sspai.com/post/101953</link>
            <guid isPermaLink="false">https://sspai.com/post/101953</guid>
            <pubDate></pubDate>
            <updated>Tue, 19 Aug 2025 11:30:45 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Obsidian, weread插件, 微信读书, 动态筛选

<br>
<br>
总结: 文章介绍了在Obsidian笔记软件中使用weread插件来同步微信读书数据的方法。该插件能将微信读书书架上的书籍全部同步到指定的Obsidian文件夹中。作者详细说明了如何通过手动设置筛选条件来只显示指定文件夹（如微信读书文件夹）的内容，以避免显示仓库中的所有文件。进一步地，文章讲解了如何通过修改代码块实现动态筛选，使得视图能自动显示当前文件所在文件夹的内容，而无需手动选择。最后，作者展示了如何将默认的表格布局改为卡片视图布局，并以书籍封面作为属性进行展示，这样点击卡片即可查看和修改在微信读书上做的笔记。 </div>
                        <hr>
                    
                    <blockquote><p style="margin-left: 0px;">[!hint] 大家好，我是<strong>阑梦清川</strong>，<strong>阿里云</strong>专家博主，一个非正经的<strong>计算机专业</strong>的学生，兼业余<strong>写作爱好者</strong></p></blockquote><h2>1.引言</h2><p style="margin-left: 0px; text-align: justify;">熟悉我的小伙伴应该知道，我之前写过一篇我自己的写作的成长路线的文章，当时也是我自己第一次使用obsidian，但是我对于这哥obsidian的使用仅仅停留在发公众号的文章，因为里面的一个插件可以直接发草稿，这个非常的香，可以说在公众号写作这个方面，没有把这个插件更香的啦；</p><p style="margin-left: 0px; text-align: justify;">但是我关注的一个博主非常喜欢obsidian，而且是这个obsidian的重度用户，我今天是看到了他更新的文章，其中里面和微信读书相关的这个内容吸引到了我，于是我也想去看一下；</p><p style="margin-left: 0px; text-align: justify;">如果这个obsidian可以把这个微信读书直接打通，那真的是非常厉害了，以后也省很多的事情了</p><h2>2.weread插件</h2><p style="margin-left: 0px; text-align: justify;">这个插件是github上面的开源的插件，我们直接在这个obsidian里面的插件市场里面搜索并且进行下载即可；</p><p style="margin-left: 0px; text-align: justify;">下面需要登录一下你自己的账号，以及在这个仓库里面设置一个文件夹作为你的书架上面的书籍的保存的位置；</p><figure class="image ss-img-wrapper"><img alt="image-20250819181712751" src="https://cdnfile.sspai.com/2025/08/19/article/3ff373064cb7e0d9020bab20c610d9fc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">第一次使用的时候需要同步一段时间，如果你的书籍比较多的话，后续的话就会比较快了，只有第一次的时候需要花点时间，然后他就会把你的这个书架上面的全部书籍同步到这个你设置的文件夹里面去</p><figure class="image ss-img-wrapper"><img alt="image-20250819181809528" src="https://cdnfile.sspai.com/2025/08/19/article/edcbbe84ecc1cd021ba0c7e7e728f510.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>3.特定文件夹</p><p style="margin-left: 0px; text-align: justify;">默认情况下，你的这个仓库下面的全部的文件都会显示出来：就像下面的这个样子一样，你可以明显的看到下面的这个表格里面显示的是642项结果，也就是他完全展示了我的这个仓库里面的542个文件或者说是笔记；</p><figure class="image ss-img-wrapper"><img alt="image-20250819164033790" src="https://cdnfile.sspai.com/2025/08/19/article/896c5ceaa64dae4fd5225c9cceab2fc0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">筛选的条件如下所示：我们选择指定的这个文件夹下面的内容，这样就可以减少这个显示出来的内容</p><figure class="image ss-img-wrapper"><img alt="image-20250819164208249" src="https://cdnfile.sspai.com/2025/08/19/article/be9ebe50c4ea474940d9f5aa800ae2d8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">这样我们的这个软件很快根据我们的筛选结果筛选出来了这个我自己的微信读书的文件夹下面的相关内容：</p><p style="margin-left: 0px; text-align: justify;">这个显示的是146个结果，其实对应的就是我的这个微信读书的书架上面的146本书，当我们设置了这个对应的筛选条件的时候，右上角的这个颜色就从原来的白色变成了下面的这个obsidian主题色；</p><figure class="image ss-img-wrapper"><img alt="image-20250819164310032" src="https://cdnfile.sspai.com/2025/08/19/article/dc23d9057b974bd42e15d28dc2c50339.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>3.动态筛选文件夹</h2><p style="margin-left: 0px; text-align: justify;">上面的是手动选择的效果，但是如果我们每一次都需要手动的进行选择，未免显得有些臃肿了，这个时候我们的动态筛选就发挥作用了；</p><p style="margin-left: 0px; text-align: justify;">就是我们新建的这个base在哪一个文件夹，我们的这个表格显示的就是当前这个文件夹的内容，不需要我们人为的进行手动的选择；</p><p style="margin-left: 0px; text-align: justify;">首先找到下面的这个地方，类似于代码的区域（实际上这个标志在我们的笔记软件里面就是代码块的含义，在很多的笔记软件里面都是非常常见的，如果你对于这个方面比较熟悉的话）；</p><figure class="image ss-img-wrapper"><img alt="image-20250819164852761" src="https://cdnfile.sspai.com/2025/08/19/article/758b2b336cfb275c1a4e6482fbfeba7c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">点开之后，你就会发现这个实际上是写死的：</p><figure class="image ss-img-wrapper"><img alt="image-20250819165114537" src="https://cdnfile.sspai.com/2025/08/19/article/368eacc6e475a05af2b77a14d5a7fed9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">动态筛选实际上就是把这个代码修改一下，让他自己可以识别出来自己是在哪一个文件夹下面的，进而把这个文件夹下面的内容展示出来；</p><p style="margin-left: 0px; text-align: justify;">按照下面的这个样子修改，this.file就是这个文件，.folder就是文件夹的意思，这个代码表示的含义就是当前的这个base文件所在的这个文件夹；</p><p style="margin-left: 0px; text-align: justify;">这样修改之后，我们的base文件创建在哪一个文件夹下面，我们的这个视图显示的就是当前的文件夹下面的内容，而不是我们的这个库里面的全部内容；</p><figure class="image ss-img-wrapper"><img alt="image-20250819165221916" src="https://cdnfile.sspai.com/2025/08/19/article/b233d13de2a461e6cdec182d55bd4a03.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">下面的这个就是设置之后的效果：</p><figure class="image ss-img-wrapper"><img alt="image-20250819182327099" src="https://cdnfile.sspai.com/2025/08/19/article/cc8632ef62f2e101279fbb6841f09ae2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>4.微信读书卡片视图</h2><p style="margin-left: 0px; text-align: justify;">下面的这个就是预览的效果，很好的利用我们的这个base的特性：</p><figure class="image ss-img-wrapper"><img alt="image-20250819182429183" src="https://cdnfile.sspai.com/2025/08/19/article/9ae222ed64d5b6d36a890f500b1ad0fd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">设置方法如下：设计一下这个布局使用卡片布局（他默认的是表格的布局），其次就是这个图片的属性，选择cover，就是把这个书的封面作为属性呈现出来；</p><p style="margin-left: 0px; text-align: justify;">至于其他的比如这个图像的宽度和高度的比例之类的，大家按照自己的喜好进行设计即可；</p><figure class="image ss-img-wrapper"><img alt="image-20250819182531221" src="https://cdnfile.sspai.com/2025/08/19/article/3eb077a6a1191a33d51d21eac67488bc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">这样做的好处是什么，就是你点击任何一张卡片，就会看到自己在微信读书上面做的笔记，进而在原来的基础上面进行修改和总结，我觉得这个是非常不错的：</p><figure class="image ss-img-wrapper"><img alt="image-20250819190229722" src="https://cdnfile.sspai.com/2025/08/19/article/89da142232c285ac1ce078ec25684f3a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">我是<strong>阑梦清川</strong>，希望得到您的关注</p><blockquote><p style="margin-left: 0px;">文章推荐 <a href="https://mp.weixin.qq.com/s/oNylK6SgdkTOxgwpf2HpIA">05年，20岁，还是没能脱下孔乙己的长衫👈️</a> <a href="https://mp.weixin.qq.com/s/Ag_9_RXw3e5gm1lSt95oIw">当实验报告变成 “形式主义之下的AI大赛”：大学生的时间，不该浪费在实验报告上面👈️</a> <a href="https://mp.weixin.qq.com/s/uHsTKNMuK9tRTiVHM62SQA">普通工厂模式是青铜，抽象工厂模式是王者？这场设计模式 battle 太精彩👈️</a> <a href="https://mp.weixin.qq.com/s/gVGYcy9orb3x1-kIAAkn9A">纵使AI使用千万种修辞手法，也写不出人类独有的精神密码--2025新高考一卷语文作文测评👈️</a> <a href="https://mp.weixin.qq.com/s/q8QDQW0MXpZrhU4KhTGkTg">cursor还能绘制文章的架构图，太酷了👈️</a></p></blockquote><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p><br />&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/94549</id>
            <title>在毕业这年，我想向你推荐一档播客</title>
            <link>https://sspai.com/post/94549</link>
            <guid isPermaLink="false">https://sspai.com/post/94549</guid>
            <pubDate></pubDate>
            <updated>Tue, 19 Aug 2025 02:35:09 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 播客推荐,轻刀快马,盲人摸象,拆书刀

<br>
<br>
总结: 作者向迷茫的大学生和毕业生推荐播客“轻刀快马”。该播客关注青年议题，旨在通过语言和文字找回生活的附近性。其栏目【盲人摸象】通过访谈99位名校毕业生，分享他们过去十年的经历和感悟，帮助听众了解社会变迁、为人生选择提供参照，并起到“祛魅”和缓解焦虑的作用。另一栏目【拆书刀】则通过拆解社会学、哲学书籍中的观点，为理解年轻人处境提供理论注解和参照，启发听众从更科学的角度思考现实。作者认为，收听该播客虽不能直接解决问题，但能让人认识不同的人生方向，理解自身问题的原因，并在不知不觉中影响其生活和判断。 </div>
                        <hr>
                    
                    <p>终于，又是一个播客元年。</p><p>在迷茫特殊的四年大学生活中，社交不多，没有相处到很要好的朋友。细细想来，唯一的收获是坚持在听播客，对于和我一样对大学感到迷茫的毕业生或者是大学生们，我想向你们推荐一档播客——轻刀快马</p><h2>轻刀快马</h2><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/07/78505c097b1b9c5ce8ecd3afd149cae1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>轻刀快马绝对不是我听的最多的播客，但确实是影响了我很多的一个播客。比起用自己的蹩脚语言，我觉得付宇老师自己的介绍很能概括这个节目的内容了</p><blockquote><p>用语言和文字找回生活的附近性，与你一起见天地、见众生、见自己。</p><p>轻刀快马是一档关注青年议题的播客。</p></blockquote><p>我常听的两个栏目分别是 【盲人摸象】和 【拆书刀】。</p><h3>【盲人摸象】</h3><blockquote><p>【盲人摸象】是一个由复旦大学社会学博士候选人付宇发起的访谈计划，试图用10个问题串连起99个名校毕业生过去10年的经历和感悟，记录这个群体共同的情绪、思考和观点。</p></blockquote><p>开始听【盲人摸象】的时候是大二下学期（2023 年）。那时周遭的混乱好像刚刚结束，但是对我来说混乱才刚刚开始。我对自己的专业选择感到迷茫，对令我不知所措的大学生活有着深深的无力感。过去两年里每一个打算重整旗鼓的计划都被外界的混乱打破，而当周遭终于恢复了短暂的秩序，我却已经忘了刚进大学时候的自己的憧憬。</p><p>在那个时候，比起脱不下长衫的批判，比起虽然好心但是显得苍白的鼓励，【盲人摸象】用分享故事的方式的诉说，让我找到了平静。早期的嘉宾并不是我的同龄人，但也并不是父母那一代那么年长，他们大多是主播的朋友或同学，在十年前大学毕业。或许正是因为这个巧妙的时间差，让我非常喜欢早期的盲人摸象。</p><p>细细想来，这可能是因为一方面嘉宾们不像我的父母辈们，出生在那个只要上了大学就会包分配，进体制的好年代；另一方面他们又比我和我们的同龄人们经历了更多的最近十多年年的社会变迁，而且是经济迅速变化发展的十年。在过往的人生里，我们好像真的很少听到来自这个年龄层的前辈们的想法传递和经历分享。</p><p>而正是借助这些分享，我补齐了这大概十年左右的对社会变迁的记忆缺失，也在这个过程中，一方面褪去了对于大学也好，平台也好的滤镜。简单点说，可以说是祛魅了！但是同时，也不再过分的焦虑和悲观。我很难总结出具体的原因，因为每个嘉宾的故事都不一样，带给我的影响也都很不同。不过总的来说，可能是看到了生活的一种，变化性。我自己感受到的焦虑，我所追求的确定性，很大程度上可能是在时代环境下产生的选择，就像在21年之前，刚工作的人哪怕借钱也要上车买房。</p><p>当然，最后这里也只是一些奇怪的个人感受。我想表达的就是，这些经历分享，真的非常值得一听，特别是如果你也刚刚开始工作或者正在寻找人生未来的方向的话。他们不一定会给你一个确切的路径或者解决方案，但是你一定会在这些故事里面有你的收获的。</p><h3>【拆书刀】</h3><blockquote><p>【拆书刀】汇集了主播付宇在准备毕业论文过程中读过的那些书，这些书的主题各不相同，但都为我们理解当下年轻人的处境提供了注解和参照。这个栏目也是意外地受欢迎。</p></blockquote><p>我是一个完完全全的理科生，老实说，对于社科类的书籍，哲学类的书籍，我几乎不太会看，也看不下去。但是拆书刀确实是让我了解到了很多社会学、哲学的知识。借助这些知识，我也的确能更加从理论一些，科学一些的角度去思考面对的现实。</p><p>【拆书刀】每一期节目大多是以一个观点为核心，然后主播付老师用书中的内容，去证实这些观点。当然这些观点并不总会是这本书的全部，大多会是节选的某些章节。所以付老师也会在节目中反复说到，希望大家还是在节目之后去阅读全书。</p><p>这样的节目形式也带来了这个栏目的一个特点就是，栏目并不是所谓的“好书推荐”，也不会对一本书全盘肯定或否定。而是通过主播付老师的视角，传达一些书中的一些他认为有启发性的想法。例如我印象比较深刻的一个观点就是。</p><blockquote><p><br />快乐来自于不完全的，间歇性的欲望满足</p></blockquote><p>这一观点出自对<a href="https://www.xiaoyuzhoufm.com/episode/67db0cdddd11f9c8c1c9a08a">《屡见屡鲜》一书的拆书</a>。 在刚刚结束的十四天的新疆之旅中，我对这一点深有体会。这是我第一次经历长时间旅行，旅行的头三天，抱着对逃离枯燥日常生活的期待，兴致冲冲的在每个景点都活蹦乱跳。但是当看过了太多的景点，比起兴奋，劳累和不安定不熟悉的感觉更占上风了。到旅行的第九天时，已经抱着接近于煎熬的心情在旅行了。在下次出游的时候，我大概最多只会安排 5 天的旅行了。</p><h2>写在后面</h2><p>从一开始被经历分享所吸引，到后面和主播一起不断学习社会学知识，在轻刀快马里，我真的收获颇多。当然这并不代表着我人生的所有问题都会因此被解决，用一档播客去解决我面对人生的选择和焦虑也并不是我推荐它的本意。但是在听轻刀快马的这两年里，我的确认识到了很多不同的人生的方向和经历，理解到了很多关于年轻人，关于我的问题的原因。而这些东西，或许也正在不知不觉中影响着我的生活和判断，这大概是我从节目中最大的收获。</p><h2>&nbsp;</h2><p>&nbsp;</p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101692</id>
            <title>成为妈妈：拼凑时光碎片，我的怀孕生育记录（附实用tips）</title>
            <link>https://sspai.com/post/101692</link>
            <guid isPermaLink="false">https://sspai.com/post/101692</guid>
            <pubDate></pubDate>
            <updated>Mon, 18 Aug 2025 16:18:21 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 生育体验,多囊卵巢综合征,备孕流程,产后重构

<br>
<br>
总结: 本文是一位多囊卵巢综合征患者记录从备孕到育儿的完整经历。作者认为生育没有必须的理由，是多种因素共同作用的结果。详细描述了多囊患者的备孕治疗流程、孕期的身体变化与焦虑、分娩时使用无痛的经历，以及产后身心巨变和家庭磨合。孩子带来了视角转变，包括更多同理心、从追求"有"到感恩"无"、对世界"复魅"及更理解女性困境。最后提出养育理念是成为"园丁"而非"木匠"，提供爱与安全环境，敬畏生命自身的发展力量。 </div>
                        <hr>
                    
                    <p>各位小伙伴们，许久未见，大家好呀。恍然间我的少数派已经沉寂两年半有余。在这两年多的时间里，世界经历了许多变化，尤其是各类AI工具的涌现，重塑着许多事物，让我感觉世界正在朝向某个奇点迈进。</p><p>而回到我具体的生活，也有了许多新的故事。2023年，我怀孕了，一个小生命来到了我的身边，每天看着怀抱中温热柔软的小家伙一点点长大，治愈着我的平凡生活。工作上也有了新调动，我接触到了全新且有挑战性的业务，一面是频繁的加班让我更为疲惫，一面却也让我得以换种视角去体验。现在的日子，基本被工作和孩子填满，和从前比，能留给自己探索的时间确实少了许多。</p><p>写下上面那句关于孩子的话，我心里忽然被轻轻撞了一下：「原来人真的会遗忘经历过的痛。」我竟只用此刻一句简单治愈的幸福，就囊括了我这两年半里的所有感受，而这其间的百般滋味，却被藏进了时光里。于是我开始翻看着在这期间断断续续记录的怀孕及生育的感受，屏幕上的字和我脑海里的记忆碎片，一点点拼出了这段日子更为真实的模样。</p><p>过去，我的女性长辈们很少向我提及生育里的细枝末节，或许是时光让她们遗忘，但现在，我想把这些碎片捡起来，记录下来我的这份经历，作为对这份回忆的纪念，也可以给后来人一份参考。当然，这是一篇很个人视角的文字，袒露了我许多细碎的经历与感受，但生育这件事存在着极强的个体差异，我的经历只是一份“参考系” ，每个人自己的体验与感受才是“指南针”。</p><h2>为什么要生孩子？</h2><p>聊起怀孕生育这个话题，总觉得要先从“为什么”说起。因为关于做生育这个决定，于我而言是需要理由的。</p><p>曾经我在B站UP主“吟游诗人基德”的视频里，看到过这么一句话，它戳中了我：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/14/43cdd69694e3a3d3aa21d7770b357345.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>我无法证实生命一定很美好，但我选择生育最底层的一个理由是：<strong>我认为这个世界是值得来体验一次的，它既有美好也有苦难，但无论如何它值得来体验一场</strong>。这种感觉有点像《七宗罪》里老警探萨默塞特的那句话：</p><blockquote><p>Ernest Hemingway once wrote, ‘The world is a fine place and worth fighting for.’ I agree with the second part.</p><p>欧内斯特·海明威曾经写道：‘这个世界是个美好的地方，值得为之奋斗。’ 我同意后半句。</p></blockquote><p>在怀孕前，我也浏览过知乎上很火的问题“我们为什么要生孩子？”的回答，我收藏了两个回答：</p><p><a href="https://www.zhihu.com/question/349923819/answer/1673047173" target="_blank">第一个回答</a>来自我很喜欢的知乎答主ze ran（我们还互关着◕▽◕），这段文字在网上流传很广：</p><blockquote><p>在三四十岁的某一天，你会突然发现，生命中最好的事，都已经发生过了，剩下的只是重复和老去，一年年，一天天。</p><p>而孩子会冲走重复，让生活重新变得未知。他/她让你烦恼，让你牵挂，让你欢喜，让你惊讶，让你再经历一次童年，让你明白当年父母的心境，让你有理由买曾经求而不得的玩具，让你在痛苦时坚强，在危机中冷静，让你看到童年时的自己，看到他的勇敢，他的好奇，他的局促，他的不安，从而更好的理解自己，接受自己。</p><p>父母养育了孩子，孩子也陪伴了父母，父母和孩子滋养了彼此，也成就了彼此。</p><p>在飞逝的时光中，他让未来有所期待。</p></blockquote><p>这个回答很美好，当时读着让我心头一暖，但对于当时的我其实感触不算太深。因为一来，我还年轻，对老去还没有太多感触；二来，我本就是一个内心世界很充盈的人，并不会因为没有小孩，而感觉世界无聊。而当我现在真的养育小孩时，会比当时更理解这个回答。</p><p>而当时最深得我心的<a href="https://www.zhihu.com/question/349923819/answer/1357923844" target="_blank">回答</a>，来自答主q9adg，部分摘录如下：</p><blockquote><p>不管你以为你是因为什么原因、什么打算而觉得生孩子是合理的，都是没有意义的，因为你事后会发现那只是一种自我抚慰、一种自我催眠。因为这些理由并不足够。</p><p><strong>子女的一生太漫长，而且是自由的。无论你打算把什么打算放在ta们身上，都有极大的可能因为世事的变迁和ta们不可剥夺的自由选择而落空。因此无论你觉得你是基于什么超级实用的理由而生养，你都是在自欺欺人。你对这个自欺欺人的理由有多确信，就会在它破灭时有多抑郁。</strong></p><p>生育子女，并没有什么理由，而只有当时机缘巧合原因。社会灌输给你的种种“义不容辞的责任”、许诺的种种“难以想象的美好体验”、为了其自身稳定和延续而构建的种种政策激励（比如家庭减税、生育补贴、不成文的唯有家庭完整者才能担任的重要职务、没有子女的人在某些地方受到的欺压）、伦理压力（父母对继承人的强烈需求、亲属对生育有意无意的关心、被排除在生育者圈子之外的社交压力），以及你自己的生物本能（怀孕前一些视觉刺激物和怀孕后的妊娠反应所造成的激素刺激）、心理本能（对未合群从众的恐惧），合起来构成了你生育的原因。一点点意外，加一点点侥幸，加强大的社会因素、生理因素的压力和推力，构成了人生育的原因。</p><p>上天选择了你过一个有子女的生活，天赐了ta们给你。于是你的生活被移转到了有子女的轨道上。这条轨道有苦、也有甜，有好、也有坏，有它的付出、也有它的收益。它既不高于、也不低于其他的道路。你也不应该因为这是你自己被确定而无法更改的（而且目前看起来是主流的）道路而强行自我想象这是一条比其他道路更高贵的道路。这种想象必有反噬。要紧的从来不是你现在的境地本身是否高贵或者正确，而是发给你的这手牌你要怎么打好。</p></blockquote><p>是的，生育本就没有 “必须如此” 的理由，有子女的人生轨道，和其他人生轨迹一样，并无高低之分，无论个人怎样选择，重要的都是走好自己的路。</p><p>在当时，我确实有许多混杂的原因 —— 在经济上：我和老公有稳定工作和收入；在伦理压力上：长辈时不时的询问和关心；在心理上：我认为这个世界值得体验一番，对 “拥有一个孩子” 这件事并不排斥；在身体上：我处在最佳生育年龄段，而我又有多囊卵巢综合征，备孕比常人困难些，医生建议如果想要小孩可以尽早要。于是，各种机缘巧合，2023年，在我马上28岁时，选择开始备孕。</p><p>而这其中，生理上的多囊卵巢综合征是一个较为重要的因素。在这里向各位可能不太了解的朋友解释一下：&nbsp;</p><p>多囊卵巢综合征（polycystic ovary syndrome, PCOS）是常见的妇科内分泌疾病（在育龄女性中占比约10%），是青春期女性不孕的常见病因。主要有雄激素过多症的皮肤表现（如多毛和中-重度痤疮）、月经失调、持续性没有排卵、卵巢多囊性改变、肥胖和胰岛素抵抗。引起 PCOS 的原因尚不明确，可能是遗传和环境因素，治疗方面以生活方式干预及口服雌-孕激素药物治疗为主。</p><p>我属于表面看症状不太明显的那种，没有肥胖、痤疮等症状，但是月经不调、卵巢多囊性改变、卵泡长不大的问题已经伴随很久了。20出头被确诊时，我以为得了什么重病，后来慢慢了解才发现，和其他疾病相比，它已经算“温和”的了。除了月经不准时，几乎没给我太多困扰，而从另一个角度看，它也在提醒我注意生活的平衡与健康。（在这里补充一句后话，生完小孩后，我的月经周期神奇地恢复正常了！）</p><p>我知道多囊患者备孕需要更多时间和耐心，所以我是抱着备孕几年才会有小孩的想法去计划的，我当时设想大概30出头能够怀孕，时间上差不多。</p><h2>备孕的准备与流程</h2><p>对于身体情况正常的女性，如果想要有计划地提前准备，可以看看丁香医生的这篇文章：<a href="https://dxy.com/article/151468" target="_blank">科学备孕实用清单</a>。此外，我建议大家可以好好利用国家的免费婚检政策，去进行一次夫妻双方的体检，婚检项目里几乎包含了文章里提到的备孕必查项目，而且有些指标在备孕或者孕期还能派上用场。</p><p>而作为多囊患者，在没有备孕计划时，我会时不时去妇科复查，医生一般是开达英 35 这类雌孕激素药物，帮我维持 “月经” 的规律，我吃这些药倒是没感觉到它的副作用。一般我是连续吃几个月或半年就停药几个月，等月经又“任性”一阵了，再重复这个循环。（后来发现我这种停药方式并不科学，多囊朋友们请遵医嘱！）妇科医生一般建议我如果只是想调节月经可以定期吃达英 35 ；但要是打算要孩子就及时去生殖科就诊。于是在这一年，我第一次走进了生殖科的门诊室。</p><p>关于多囊患者的备孕流程，丁香医生上也有两篇文章可以参考：《<a href="https://ask.dxy.com/index#/item/health/109205?dxa_adplatform=appfxwxhy">多囊卵巢综合征怎么备孕？</a>》和《<a href="https://dxy.com/article/6640" target="_blank">得了多囊卵巢综合征不怀孕？3 步教你怀上宝宝</a>》。大致路径是：先调节身体指标，再尝试自然排卵；效果不佳就进行促排卵，若促排持续不理想可以考虑人工授精，最后考虑试管婴儿。</p><p>帮我看病的生殖科医生，基本流程大致类似。医生主要关注我的性激素水平和阴超报告，发现我的促黄体生成素（LH）偏高，便开了雌孕激素药帮我调节。吃了两个月药，指标稍降，但卵泡依旧不成熟，于是开始了促排卵治疗。这期间，我自己额外查了胰岛素、糖耐试验、甲状腺功能和肝肾功能，没有异常。此外，我日常会去健身房游泳健身，精神面貌挺不错。</p><p>促排卵的治疗流程挺磨人，一个周期内需要跑好几趟医院：打促排针、监测卵泡大小，10多天内大概要去4次医院，这对职场女性并不友好，我能理解一些久备不孕的女性选择离职备孕。我已经算是相当幸运的了，第二次促排就怀上了宝宝，整个备孕期大概4个月左右。</p><h2>孕期进行时</h2><p>测出怀孕后，我和老公都很开心。我继续在生殖科复诊，直到孕9周左右，转到产科建档，开始定期孕检。</p><p>刚怀孕时，身体几乎没什么感觉，可到了第 5-6周，孕早期的孕吐就猝不及防地来了，每天被反胃和恶心缠着，昏昏沉沉，一直到 16 周才缓解消失，那段时间吐得厉害，每天盼着早点熬到孕中期，体重最低时只有84斤，创下了我成年后的体重最低值。我个人体感而言，整个孕期里，最难熬的就是孕吐期那种成天恶心呕吐的感觉，之后孕晚期胎儿变大带来的身体不适，与之相比都没有那么难受。</p><figure class="image ss-img-wrapper image_resized" style="width: 549px;"><img src="https://cdnfile.sspai.com/2025/08/10/fb1b98c5e68c3218463351fbae83ff4b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>孕早期时的感受</figcaption></figure><p>等熬过孕吐期，孕中期便成了我孕期最舒服的阶段，没有了反胃的折磨，胃口恢复了，行动也还算轻便。再到孕晚期，产检次数变得更加频繁，由于胎儿的变大，身体细碎的不适感又逐步显现出来：每天要起夜上厕所、半夜时不时腿抽筋、走路腿会抽着痛......</p><p>或许是第一次经历，整个孕期我时不时会陷入焦虑里。在早期关注HCG等指标，中期担心宝宝早产，晚期宝宝偏小一点，也担心是否有异常，身上的某个症状或是产检单上一些稍需留意的指标都忍不住查小红书，有好几次我都因肚子疼跑去医院看急诊。</p><p>不过整体而言，我的孕期算是比较顺利的，上班上到了产前两天，没有碰到凝血异常、妊娠高血压、糖尿病等需要高度警惕的状况，我身边有朋友凝血异常，需要每天在肚子上打肝素，很辛苦。</p><p>下面，我来安利一些孕期里对我有帮助的人/事/物：</p><ul><li>书籍：六层楼的《怀孕呵护指南》以及西尔斯的《西尔斯怀孕百科》。孕期的书籍我主要读了这两本，六层楼的《怀孕呵护指南》用通俗易懂的语言介绍孕期中身体和心理的各种变化，让准妈妈们更好地应对怀孕带来的挑战；《西尔斯怀孕百科》是一部专业孕期百科，按照怀孕的每个月详细讲述了胎儿和母体的变化，并提供系统全面的健康护理和育儿知识指导，都值得一读。</li><li>APP：美柚，这是我一直使用的孕期与育儿记录app，挺好用的。</li><li>博主：段涛，一个超级厉害、温柔的医生，他的网络分享非常值得一看，大幅缓解准妈妈的不安。</li><li>检查：有几个自费项目也推荐准妈妈们做：无创DNA检测（NIPT）、脊髓性肌肉萎缩症（SMA）基因检测和耳聋基因筛查，可以更全面地了解宝宝的健康状况，宝宝健康妈妈最放心。无创检测主要针对胎儿染色体异常，比唐氏筛查准确很多，SMA基因检测帮助筛查脊髓性肌肉萎缩症的携带风险，耳聋基因检测则用于识别可能导致先天性听力损失的基因变异。</li><li>物品：<ol><li>文件夹：把产检报告按时间理好，每次去医院不用翻得手忙脚乱；</li><li>胎心监测带：孕晚期做胎心监护时会用到；</li><li>胎心仪：偶尔心慌的时候听听胎心，像听到小火车 “咚咚” 响，让妈妈安心；</li><li>待产包：孕晚期可以慢慢准备了；</li><li>妊娠油 / 霜：我用了福来油、mama&amp;kids 的霜，还有大白罐。妊娠纹大概率和体质和遗传及体重增长有关，涂抹后皮肤会比较滋润，但效果因人而异，我长了几条妊娠纹，目前看不明显了。</li></ol></li><li>群组：孕妈群。如果身边缺乏能分享沟通的女性，可以试试加入一个网上的孕妈群。因为我身边没什么准妈妈能分享经验或交流，我就加入了一个孕妈妈交流群，大家都是全国各地差不多时间怀孕的准妈妈们，可以看到相似的妈妈的产检和日常分享，一起进行待产包和胎儿用品的准备（在孕期的我真的沉迷于买买买），不过要小心被骗。</li></ul><h2>分娩体验</h2><p>在怀孕前，我对分娩是很恐惧的，难以想象顺产会有多疼，这大概也是许多未婚未育女性所恐惧的。在孕晚期，我学习了拉玛泽呼吸法，但对怎样正确用力还是一知半解的，也对自己需要忍受多长时间疼痛存有未知的恐惧。而最终我实际的分娩体验比我预想得要顺利，这大部分归功于人类之光：“无痛分娩”。</p><p>我是在晚上12点左右见红，因为当时肚子也有点痛，我妈和我就带着待产包去医院了，在路上，无规律的宫缩就开始了，到半夜，宫缩越来越频繁，疼痛一阵接着一阵，根本无法入睡，我躺在病床上等待开指，在这期间会尝试呼吸缓解一下，但主要还是得靠忍。</p><p>直到下午6点左右，医生说开了两到三指，可以进产房打无痛了。进产房还需要等待麻醉师，那阵子宫缩疼得最厉害，老公安慰我，我也靠拉玛泽呼吸法一点点缓解，等我打上了无痛，一下感觉全身发冷，意识开始模糊，身边有人在喊我但我无力应答，那一霎那仿佛要进入天堂之门，以为自己要离开了。后续意识恢复过来，让护士帮我盖被子，无痛也开始起效果，真的减轻了我很多的宫缩痛，我也终于能够睡上一小觉。等到快开全指时，疼痛的感觉又强烈了一些，身体的便意越来越浓。后续在助产士的发力指导下，我在混乱与疲惫中使劲，生下了宝宝，用力猛导致伤口有些撕裂，但真正的第二产程（胎儿娩出期）并不算久，大概半小时左右。</p><p>所以如果选择顺产，推荐上无痛，此外，在孕晚期可以多练习拉玛泽呼吸法，了解正确发力方式，对分娩很有帮助。</p><h2>产后的挑战与重构</h2><p>孕期，和过去相对轻松自在的生活相比，虽然多了些许不适，但相差并不太大，而生育是真真实实地让生活发生了巨变。虽然此刻，看着快1岁半的可爱的孩子，我会感觉孩子是生命馈赠的美好的礼物，给我带来了很多的幸福。但是如果时间放在生育后的那两个月，感受是截然不同的。</p><p>在分娩后，我并没有沉浸在有孩子的喜悦中，当时的心情非常复杂，尤其是宝宝在出生后检查有些异常，让我的心始终悬着，生怕她有什么问题。而我自己，身体还处在生产后的疼痛与疲惫之中，伤口以及耻骨都一阵阵疼，走几步都难；母乳喂养需要频繁起床喂奶，睡眠被切成无数碎片，我陷入失眠难以入睡；家里长辈们来帮忙照顾孩子，但人多后矛盾和争吵增加，家庭氛围变得剑拔弩张。那一阵，我的精神状态很糟糕，动不动就哭，脑海里也根本装不下其他的事情，经常盘旋的念头是：宝宝是健康正常的吗？这样喂她照顾她是对的吗？这难熬的日子什么时候才能到头？有时甚至会有一些不好的念头，或许当时的我就在产后抑郁的边缘徘徊。</p><p>当时的记录如下：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/13/f3d90cc6f6e4e08db0f5a25b6516e76d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>产后一个月左右的记录</figcaption></figure><p>此外，我和我老公异地的困境，在生育后变得尤为突出。在休完陪产假后，他就去异地上班了，只有周末才能匆匆赶回，少一个带娃责任人，让我身心无比疲惫。网上说产后一年是婚姻中最难的一年，我是有真切体会的，这中间的崩溃与自愈，难以尽述。</p><p>产后的那几个月，各种感受杂糅，疲惫又幸福，焦虑又治愈。看着她从懵懂的小婴儿，慢慢学会抬头、翻身、坐与爬，每一个微小的进步都像星光，点亮了琐碎的日常。她趴在肩头时均匀的呼吸，对着我笑的模样，都让我内心柔软。可那些兵荒马乱的时刻也从不缺席：宝宝黄疸住院、感染新冠、细菌感染持续发烧住院、我乳腺炎发烧……这应该也是无数新手父母都要走过的一程，各种身体上的“累”、情绪上的“乱”与心理上的“暖”交织在一起。</p><p>好在熬过最初高强度育儿的艰辛与磨合，我也逐渐适应了这种生活模式，在繁忙中找到了自己的节奏，虽然留给自己的时间变少了很多，但每天感受着孩子的可爱，陪伴与见证她一天天的成长与变化，这也是另一种平淡温暖的幸福，人生，不同时期都有它独特的滋味。</p><figure class="image ss-img-wrapper image_resized" style="width: 371px;"><img src="https://cdnfile.sspai.com/2025/08/13/ec0cf5c1d2d4af8cbd5f8cc3fed6976f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>每天睡前都有这种感觉~</figcaption></figure><p>现在回头看，我有几个经验与感触：</p><ol><li>生孩子（尤其是第一胎）请月嫂或者去月子中心是值得考虑的选择，一来长辈们多年没带过孩子很多事情都生疏了，还有很多陈旧的育儿观念，二来可以避免很多家庭矛盾，我当时太高估了自己和家人的能力。</li><li>母乳喂养磨合的过程确实很难熬，可以多学习了解正确的方法技巧。而如果觉得母乳喂养很痛苦，不用太为难自己，可以选择奶粉喂养，因为作为妈妈，自己的感受同样重要，我当时考虑到母乳对孩子和母亲都有益处，坚持到了产假结束后自然断奶。</li><li>如果生育后需要长辈一起来托举育儿，想要在更多人的家庭关系中找到平衡，同时让自己喘口气，请记住：别迷失在细节里。长辈来搭手，已经很辛苦，替我们分担了许多育儿责任，她们带着几十年的生活经验来育儿，肯定会有分歧与磨合。只要一家人都在为孩子的成长努力，为这个家的安稳努力，<strong>那些非原则性的细节就别太在意</strong>了。放过细节，也是放过自己。</li><li>生育后最初的那些日子，对于很多妈妈们来说都很煎熬，如果说，此刻的我要给当时的我或者现在身处其中的妈妈们一段话，我想说：<strong>现在你的身体很痛，你感到很疲惫，你的情绪来得如此强烈，这些感受都是正常的，毕竟你刚刚完成了一个人生大项目，你已经很棒了。请相信这段艰难的日子终会过去：你的伤口会慢慢愈合，生理疼痛会减轻，激素也会慢慢平稳，宝宝会逐渐好带，睡眠周期会延长，而这个妈妈的身份转变，你也会逐渐适应。隧道尽头闪着光，一切会好起来的～</strong></li></ol><p>在这里，再简单列一下产后第一年对我有帮助的书和博主：</p><ul><li>书：推荐两本育儿百科《<strong>美国儿科学会育儿百科</strong>》、《<strong>崔玉涛育儿百科</strong>》，第一本书由美国儿科学会（AAP）发布的权威育儿指南，由众多儿科专家共同编写，内容科学、全面；第二本书汇集了儿科专家崔玉涛医生30余年儿科临床经验及育儿科普知识，内容更贴合中国家庭实际。像《程序化育儿法》这本书的做法，我是从入门到放弃，后来小孩自然而然睡得还可以。</li><li>小红书博主：崔玉涛、卓正儿保Distinct、丁香妈妈、Sunny Huang - IBCLC、乳腺外科陶思丰、马蕾孕哺育、康复硕士小贾Jasmine、小王康复。前四位博主专注儿童养育相关的知识，第五至第六位博主提供了许多母乳方面的建议，第七至第八位博主有许多产后康复相关干货。</li><li>产康项目：我开的是三甲医院常规的产康检查项目以及治疗，产康检查结果可以对照上面提到的小红书博主小贾的视频去分类并且日常跟练，我在医院开的主要是盆底肌治疗，包括手法与电刺激疗法，应该是有效果的，但我中间间隔一阵后续忘记做了。此外，自己报了普拉提团课和私教课，普拉提值得推荐。</li></ul><h2>孩子带来的心的转变</h2><h4>1、唤醒了我更多的同理心，更多地“看见”他人</h4><p>没有孩子的时候，我的关注点更多在自己身上。有了孩子后，我在小红书上关注到了自闭症及一些罕见病儿童的家长群体，看着他们为治疗费奔波的疲惫、孩子微小进步带来的狂喜，心总会跟着揪紧，也愈发明白：偶然与运气决定了每个人出生的时代、地点、基因、家庭，而这些在很大程度上又决定了我们的人生轨迹，我们努力奔跑，或许还是只能对既定人生剧本做出些微观的改变。面对那些没有自己幸运的人，多一些同理心，因为若非幸运，我或许也是其中之一；对于自己所拥有的，则应心怀知足。</p><p>而当我看到孩子天真烂漫的笑容，总是不禁会想：<strong>每个平凡的大人，曾经都是这么可爱的孩子啊。</strong>那些如今让我觉得固执、冷漠的成年人，也曾有过这样清澈的眼神，他们又是带着怎样的过往来到成为了今天的大人。这样的联想，让我心里的坚硬悄悄变软，也让我对周遭世界多了一份宽容和温柔。</p><h4>2、 关注视角从“有”到“无”的转变&nbsp;</h4><p>我曾经摘抄过一段话，但直到有了孩子，我才更有体会：</p><blockquote><p>Upside的成功突破可能路径不多、空间有限且不一定能成，但downside的下跌悲剧却空间巨大、原因可以各式各样，比如意外的车祸、被高楼上掉下的瓷砖砸成瘫痪、因为某些原因被感染艾滋病。<strong>反着想的底线思维，与拼力向前追求最优解思维，会让人看到同一个人生的两种不同景象。</strong></p></blockquote><p>以前，我总在关注自己还想要什么；而有了孩子后，我最朴素的愿望，就是看着女儿健康快乐地成长。那些对"有"的渴望，渐渐化作对"无"的感恩——感恩没有病痛、没有意外。那些对人生上限的追求，变成了对下限的避免，能和家人平安健康顺遂度过一生，就算很幸运了。</p><h4>3、对世界的“复魅”</h4><p>随着阅历的丰富，我对许多事情也愈发地“祛魅”。然而，孩子的到来让我更多感受到了这个世界原本的斑斓与魅力，让我对世界“复魅”，<strong>孩子不仅仅是生命的延续，更是一种唤醒和修复。</strong></p><p>陪伴孩子成长，和她一起玩躲猫猫，和她一起捡树叶，和她一起蹦蹦跳跳，仿佛让我重新经历了一次自己的童年，重温那些曾经遗忘的快乐。她的视角呈现了日常生活中的神奇与趣味，她的惊叹与探索是我早已习惯的世界中稀缺的珍宝，她让我蹲下身去重新关注那些曾被忽视的细节，帮助我找回对微小事物的惊喜感。<strong>我们抚养她成长，她也在救赎我遗忘的感官，带我重新走进那个被成年人忽略的、满是细碎美好的世界。</strong></p><h4>4、对女性困境更深刻的理解</h4><p>有了孩子后，我对女性困境有了更深刻的体会。在大部分家庭，育儿责任在性别之间的分配并不平等，育儿的责任更多落在女性身上。即使现在女性同样在职场打工赚钱养家，但传统观念对父亲角色的认知还是在延续。社会普遍对好妈妈和好爸爸的评判标准也是不一样的，<strong>对“好妈妈”的想象是全方位全光谱的，而“好爸爸”的标准往往是亮点式表彰，爸爸的参与常被框定在明确、可见、有界限的任务中</strong>，这一结构性困境需要我们这代人去打破。但我和老公因为异地，育儿的责任很难与他分担，但由于工作原因异地这个问题目前难以解决，只能暂时搁置。</p><h2>养育孩子的浅见</h2><p>在文章的最后，写写关于我养育孩子的浅见。在这方面，我理论了解有限，实践经验也不足，知行时难合一。但是我也时不时会思考，作为妈妈，<strong>我该以何种姿态去参与孩子的成长</strong>？</p><p>​在这个不确定性的时代，不管具体的培养与教育方式怎么变化，我的底层理念比较贴近书籍《园丁与木匠》里所说的：<strong>成为孩子的园丁而非木匠。</strong>我想做孩子守护者与提供者而非雕刻者，给她提供无条件的爱与安全的港湾，创造丰沃的土壤，点燃她对世界的好奇心与热爱，塑造她坚韧意志与独立人格，克制自己想要修剪成特定形状的冲动，让生命以她自己的方式生长。我相信在安全有爱的环境中，生命自有其向上向善的力量。</p><p>​<strong>我敬畏生命本身的神秘与力量，敬畏复杂系统发展的涌现与不可预测性。孩子是属于“未来”的，每一个孩子都是不同的宇宙，我的知识终有限度，但我愿意尝试爱她、理解她与信任她，也希望这份信任与爱能成为她勇气和自信的源泉。</strong>​​</p><p>当然，养育之路漫漫，回到日常养娃中，这些底层的理念如何具体投入实践是非常有挑战的事，我有许多需要学习改进的地方，共勉之。</p><p>这就是我的非完全孕育记录全文，写了8000+字，感谢屏幕前的你阅读到这里，希望能给你一些启发或共鸣，下次见~</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101925</id>
            <title>《战地风云6》公开测试不完整印象</title>
            <link>https://sspai.com/post/101925</link>
            <guid isPermaLink="false">https://sspai.com/post/101925</guid>
            <pubDate></pubDate>
            <updated>Mon, 18 Aug 2025 14:08:04 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 战地6公测,场景破坏,团队配合,亚洲大区体验
<br>
<br>
总结: 《战地6》公开测试已结束，整体体验良好但存在小瑕疵。测试免费面向所有人，但对PC硬件要求较高。游戏回归四大兵种和64人战场，并拥有震撼的物体破坏系统，破坏效果兼具视觉冲击力和战术价值。游戏核心强调团队作战，小规模地图设计导致对局烈度增加，更注重小队和兵种间的配合。亚洲大区的对局体验尤为高压，点位争夺频繁，玩家持续处于紧张状态。尽管存在平衡性问题和bug，但游戏在画面、音效等硬素质上过关。该作可能是首款基于大规模玩家众测开发的买断制AAA在线服务型FPS游戏。 </div>
                        <hr>
                    
                    <p>《战地风云6》（以下简称“战地6”）公开测试已于东八区时间今天下午3点左右正式结束，由于是周一，许多玩家朋友还要上班上学，因此比官方承诺更早地结束似乎并没有给社区带来太多负面影响。这种小瑕疵就和本次《战地6》公测带给多数在游戏中浴血奋战几十个小时的朋友们的感受几乎相同，这里留下的是一个不完美的逗号，且不存在某种不可饶恕的硬伤。</p><p>只不过在游戏之外的内容平台上，笔者也确实看到了单个流量不大，但数量繁多的“《战地6》差评”。不论是来自“战地老玩家”还是“乐子人”，这些流量不大的“差评”们，汇聚在一起就形成了一支不可忽视的力量。所以本文想要从一个，既不是“战地老玩家”，也不是“乐子人”的普通电子游戏爱好者的视角，聊一聊笔者在将近18小时的《战地6》公测体验中的感受，以及尝试回答一个问题，那就是：我们在玩《战地》系列游戏的时候，我们到底在玩什么。</p><h2><strong>如何进入此次公开测试？</strong></h2><p>首先要确定的是，你不需要支付任何除宽带、水电燃气费、房租、外卖之外的任何用于单独预购，或购买游戏的费用，就可以在8月11日加入这次公开测试。是的，本次测试面向所有人，而且完全免费。</p><p>而如果你是在8月7日就进入了《战地6》公开测试，那么很明显，你参与了内容平台（如抖音、Twitch）或加速器软件的《战地6》公测送礼活动。绝大多数活动完全可以免费参与。</p><p>其次是硬件要求。需要明确的是，FPS类游戏必须拥有最低40的平均帧数以及1%Low帧才能做到流畅游玩，因此，你需要有一台Xbox Series S/X、PlayStation 5主机或者硬件推出时间不晚于2021年的PC。从我搜集到的实际对战反馈来看，NVIDIA RTX 3050 Laptop显卡处于满足《战地6》公测最低要求的最低底线。因此，如果希望至少最低画质1080P@60fps的体验，一块2021年下半年之后发布的中高端显卡就是刚需了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/557d01ed537be433dd26488f20f2f618.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>2021年下半年之后的中高端硬件才能满足《战地6》公开测试和后续正式版本的最低要求了。来源：EA</figcaption></figure><p>此外，游戏需要启用UEFI引导，Secureboot等现代化PC组件才能正常启动，通常情况下，一台2018年之后生产的PC硬件或笔记本电脑产品都会强制启用这些组件。不过部分兼容机的主板BIOS往往默认关闭某些功能，这确实对一部分对电脑硬件不熟悉的玩家造成了困扰。</p><h2><strong>此次公测展现了哪些内容？</strong></h2><p>从此前网上泄露的战地风云实验室（Battlefield Labs）对战画面对比来看，《战地6》公测可以称得上是战地风云实验室的“完整试玩版”。此次公测整体规模不大，对战地图只有四张，载具只有五种，枪械和各类兵种道具也都分别只有十余款，四个兵种的对应职业专精也都只各自开放了一种。但即便如此，游戏也足以让人沉迷数十个小时。</p><p>《战地6》公测回归了最正宗的四大兵种、64人战场，并带回来了自《战地：叛逆连队2》以来，系列最招牌的物体破坏体系。除经典的征服、突破、突袭模式外，也开放了小队死斗、山丘之王等近距离作战模式。配合完全现代化的人物机动性、操作方式和gunplay体系，这些微缩规模的战斗都能带来不俗的游戏体验。</p><p>《战地6》公测的匹配以服务器延迟为最高优先级，相邻地区服务器的玩家会根据延迟优先分配到同一场对局中。官方目前没有正面回应《战地6》公测和正式版游戏的匹配机制，但给出了一定的承诺，因此这似乎意味着，EA采用了相较于传统SBMM，更加不强调个人技术和对局行为的匹配机制。如果这种匹配机制能够沿用到正式版游戏中，或许会对社区的长期评价带来积极影响。</p><p>当然，此次公测的核心内容，还是放在系列最引以为傲的“征服”模式上。由于此次开放的地图在规模上并非传统《战地》系列的大战场，而是更加聚焦于局部，因此虽然在对局中，遭遇战更加频繁且激烈，但也正是因此，《战地6》公测更能展现最能在第一时间抓住玩家的内容：破坏。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/96ff57aa493fe5f4934013a387ce50f1.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>《战地6》的破坏效果极具视觉震撼力。来源：EA</figcaption></figure><p>从最主观、单纯的游戏体验角度，《战地6》公测的场景破坏完全可以用“震撼人心”来形容，这种介于脚本和引擎功能之间的，但又几乎完全依赖对局随机触发的破坏效果，在某些情况下，甚至要比部分强调电影化的买断制AAA游戏精心安排的大场面还要惊人。</p><p>从游戏的对局角度，《战地6》公测的场景破坏也带来了相当程度的战术价值。游戏中的破坏不仅限于视觉效果，部分室内外场景会因此直接发生地势变化，一些本是死路的区域因为场景破坏形成了具备高低差的地形，这就从战术上为玩家对局提供了全新思路，一些出人意料的场面和对战也会在发生在这些地方。</p><h2><strong>基于游戏玩法的对局思路</strong></h2><p>《战地》系列一直以来都是以团队作战为核心，此次《战地6》公测也完全遵循了这一公式。在征服模式中，即便是迂回穿插，在高压对局下也需要至少两人的小队同时进入对方点位，否则和有可能会被来自不同方向的围剿所阻止；更不用提在常规的点位争夺中，多支小队的互相配合完全就是必修课。</p><p>由于在《战地6》公测中，载具性能被全面削弱，工程兵反载能力，突击兵的游击能力，支援兵的补给能力，侦察兵的侦察能力分别得到了加强，因此不论是小队队员，还是小队和小队之间的配合就变成了决定点位是否能够被拿下，抑或是决定整场对局局势走向的关键。另外，即便对局失利，如果适应了《战地》的玩法、节奏和规律，其实并不会带来太多负面感受。而且《战地6》公测完全保留了在非战斗状态下，玩家的分数获取能力，包括但不限于营救、维修、索敌、固守等动作，《战地》老玩家完全可以和往常一样，不开一枪拿到全队最高分——虽然在这几张小规模地图中，枪战是不可避免的。</p><p>也正是因为《战地6》公测所展现的地图规模，相较于过往《战地》玩家所游玩的地图规模更小，因此对局烈度会不可避免地增加，初上手时更容易产生挫败感——如果能够好友开黑的话，这种挫败感会大大降低。不过，笔者认为，这种规模更小的地图恰好是展现《战地》系列发展至今，在延续系列最经典的玩法前提之下所做的创新尝试，即：在人物机动性、操作逻辑、gunplay完成现代化改进之后，地图设计的改变能否带来更具沉浸感的对局体验。因此，在经过了18小时的公测体验，结合《战地》社区经验丰富的头部玩家，在内容平台发布的游戏感想和对局思路之后，笔者想基于这几张地图，分析一下《战地6》公测的玩法。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/aa42a6c3239039fd3fb0dc6fa1f430c8.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>笔者大致理解的伊比利亚这张图的结构设计。来源：作者截图</figcaption></figure><p>这四张征服地图从大致结构上来看，都设计了起始点附近点位，起始点两侧有相对平坦但狭长的通道，地图中央设计了冲突点位群，并且关键冲突点设计了横插在两条通道中间的长通道；这些通道不仅起到了分割战区的作用，同时也为地图的核心冲突位置提供了掩体和支援通道，保证了对战环境的复杂程度。而在这些被大道分割的战区之中林立着繁多，且内部四通八达的建筑物，建筑物之间也布置了各种小道，一些小道甚至能够直通点位。这种设计让地图上任何点位都变得易攻难守，加上地图足够狭小，这就让各种战术，如围点打援、包抄袭扰和快速脱离火线等，都能得到充分的发挥空间。并且，这还意味着，规模更小的突袭、小队死斗等模式会呈现更加紧张激烈的对局体验。</p><p>不过，在这其中，突袭模式和突破模式似乎依旧无法解决进攻方的劣势。《战地6》公测这几张地图的设计在阵地战中体现出了不小的防守优势。由于进攻路线被缩窄并且减少了进攻路线，就让进攻方向变得非常狭窄，方向也非常单一。一部分没有载具的对局，几乎不可能探索出更多进攻路线，而防守方只需要在核心点位的高处架枪，就能快速解决进攻方的有生力量；防守方还能采取围点打援的战术消耗进攻方的兵力。</p><p>这里还要提一句几乎所有人都不喜欢的“解放峰”。仅就笔者个人而言，如果没有“记者招待会”一般的山头，这张图几乎带来了最为“原汁原味”的《战地》体验。不论是场景设计还是地图设计，虽然载具在《战地6》公测中被大幅削弱，但在这张地图中却是非常非常关键的力量；也正是因为载具的削弱和对局烈度的提升，让兵种之间的配合要求变得比以往的《战地》游戏也更加紧密。突击兵、支援兵、工程兵都需要明确并尽可能执行自己的游击、补给和反载职责，侦察兵也需要在“记者招待会”中展现属于自己的一席之地——值得一提的是，突破模式下的解放峰已经被玩家们研究出了进攻方的取胜策略。</p><h2><strong>亚洲大区独有的高压体验</strong></h2><p>《战地6》公测更现代化的人物机动性设计、短TTK和小规模地图也带来了一些副作用。笔者在浏览内容创作者的内容时，和部分玩家朋友一样，发现欧洲大区的对局似乎更加轻松，敌我之间的穿插频率有明显减少，意识足够好的玩家可以更多地依赖地图中的小道执行侧袭、回防等战术动作；但在亚洲大区，敌我在建筑和小道之间的穿插频率极高，点位争夺更加频繁，几乎所有玩家都处于“打带跑”的状态下，夺取点位之后的冷静期也更短，侧袭或支援时也更加容易发生遭遇战。这就导致所有玩家在一整场20分钟的征服战中持续处于高压状态。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/ed898d0b99936d5c1a36ed0f9dee99ab.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>亚服的高压对局确实不是人人都能玩得下去的。来源：EA</figcaption></figure><p>这可能也是导致不少玩家被劝退的原因之一。更激烈的点位争夺和频繁的遭遇战，带来的是更高强度的操作和更快的精力消耗。对于一些不经常玩FPS的玩家来说，除了高压对局体验，《战地6》公测在操作逻辑，键位绑定上存在一些不成熟的设计，也容易让人望而却步。</p><p>我非常非常喜欢一位内容创作者的理论：“Enjoyment is subjective and quality is not”（体验总是主观的，但质量不是）。笔者相信这句话可以用在这里。尽管公测期间确实有一些需要调整的平衡性问题和亟待修复的bug，以及对外挂行为的持续处理，但总体下来，笔者在《战地6》公测期间度过了非常非常愉快的18个小时；况且，即便从客观的画面、音效、gunplay等质量上来看，游戏的硬素质确实是过关的。</p><p>从目前已知的信息来看，《战地6》大概率是第一款以大规模玩家众测为基础，持续提供反馈并开发的“买断制AAA在线服务型第一人称动作射击游戏游戏”。“玩家众测”并非前无古人，但这确实是第一次出现在FPS社区熟悉的IP的开发流程中。如果这种设计最终能够大获成功并持续累计经济效益，那么就真的有可能让整个游戏开发行业重新开始重视真正享受游戏，真正深入挖掘游戏的核心玩家群体。如果这样的未来能够到来，我们真的能得到更优质的作品、更优质的游戏，和更真诚的开发者朋友们。</p><p>这是咱玩家朋友们应得的东西。</p><p><i>（头图来源：EA）</i></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101765</id>
            <title>Text-Well：我做了一个能帮你进行多视角内容评审的 AI 工具</title>
            <link>https://sspai.com/post/101765</link>
            <guid isPermaLink="false">https://sspai.com/post/101765</guid>
            <pubDate></pubDate>
            <updated>Sun, 17 Aug 2025 22:19:16 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: AI写作辅助工具,Text-Well,模拟评审功能,结构化反馈

<br>
<br>
总结: 作者作为前端开发者和产品经理，开发了AI写作辅助工具Text-Well，旨在帮助用户检查文本中的基础错误。工具提供两种检查方式：逐项修改和整体修改，并允许用户选择性应用AI建议。Text-Well具有国际化支持、文件拖拽上传等功能，并创新性地加入了模拟评审功能，通过结构化反馈和多视角评论帮助提升文本质量。作者分享了开发历程和设计理念，强调产品形态和用户体验的重要性，并期待用户反馈以进一步完善工具。 </div>
                        <hr>
                    
                    <h2>前言</h2><p>Hello 大家好，我叫 oil欧呦，一名在工作时需要写大量文档的前端开发者和产品经理。这是我在少数派的第一篇文章，我想和大家聊聊一个可能很多人都遇到过的场景：写完东西后，总觉得不放心。</p><p>无论是技术文章、产品文档，还是普通的邮件，我们都希望它看起来专业、清晰，没有那些掉价的低级错误。正是基于这个最朴素的想法，我利用业余时间开发了一个AI写作辅助工具——Text-Well。它是一个网页应用，希望能帮你更自信地完成每一次书写。名字叫 <a href="https://www.text-well.com/" target="_blank">Text-Well</a></p><p>作为一个开发者，我在实现了一些比较复杂的功能，或者解决了一些网上缺少资料的 Bug 时，会将开发过程或者解决思路记录下来，分享在一些技术社区中，例如<a href="https://juejin.cn/user/2384177081367998">掘金</a>或者 <a href="https://blog.csdn.net/weixin_47077674?spm=1010.2135.3001.5343">CSDN</a>。除了技术文章之外，我在工作时还经常需要做产品需求设计文档（PRD），写产品的发布文档、使用文档之类的，经常需要与文字打交道。</p><p>自从 AI 出现后，我每一次写的文章我都会先用 AI 过一遍基础性错误，比如错别字、语法问题、或者语句不通顺的问题，让文章整体不会出现很掉价的基础问题。但是在我使用 AI 检查文章问题的过程中，我发现了一个很麻烦的点。假设我有一篇比较长的文章想要交给 AI 检查，通常有两种方式：</p><ol><li>第一种是让 AI 告诉我文章的哪个位置有问题，并且告诉我如何修改，这种方式我需要根据 AI 的响应结果自己一个一个去修改，相对比较麻烦，但是比较准确，因为每个改动的地方相当于自己又 review 了一次。如果 AI 乱改或者有一些改的不好的地方，我们可以及时发现，选择自己调整或者不改这个地方。</li><li>第二种方式是让 AI 直接给我们修改后的文本，这种方式最简单，我们不用自己一个一个改， AI 通常也会告诉我们它改了哪个位置，咱们人工 Review 一下最终结果就好了。但这样也存在问题，有的时候我们告诉 AI 帮我们把文章中的描述改的流畅一点，他可能就擅做主张，把一些带有个人风格的段落改的特别有 AI 味儿。</li></ol><p>因此我就想，要是我可以类似于像写代码的时候处理代码冲突一样，自己选择是否要应用 AI 给出的建议，是不是这样起来会更方便呢？就是出于这么简单的一个想法，我决定自己来做一个工具给自己检查的时候用。正好当时 Claude Code 热度很高，我一直用的是 cursor，刚好试试这个新工具的深浅。</p><p>&nbsp;</p><h2>开始动手</h2><p>于是我和 Claude Code 配合，在两天时间里，我实现了这个工具的第一个检查功能，并为这个工具命名为 Text-Well：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/13/491fa4c10c7c1103b4dbf2de347a8cbe.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Textwell 基础检查功能</figcaption></figure><p>就像上图中展示的那样，左侧是一个工具栏，右侧是一个编辑器，输入文本后点击开始检查，系统就会让 AI 对文本中的错别字进行检查，并且还会给出原因。</p><p>检查完成后，左侧的工具栏中会展示当前问题严重程度的分布，底下会有一个问题项的列表，右侧的编辑器中则是会用不同颜色的高亮展示出当前问题出现问题的位置，当鼠标悬浮在高亮位置时，会有一个小气泡也展示当前的问题，我们可以只看左侧工具栏或者只看右侧编辑器进行操作。</p><p>工具栏和编辑器是联动的，不论点击左侧问题项还是点击右侧的高亮位置，都会滚动到对应的位置，很符合直觉。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/12/cc58712b6adc982ea0e0f2e9e832f87c.gif" /></figure><p>除此以外，我还实现了一些键盘的快捷键，用来更加高效的切换不同的问题项：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/12/9230063231b2cfa8f1ad4d28b07e9358.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>快捷键</figcaption></figure><p>到这一步，我对整体功能已经挺满意了，比我最开始想象的做的还更多了，其实类似的功能我之前也在 grammarly 用过，但是 grammarly&nbsp;主要还是在英文的场景使用，Textwell 的话还是略有差异化的，所以我就想着把 Textell 给产品化了，把一些周边功能补齐！</p><h2>补齐周边功能</h2><p>由于 Textwell 的产品形态是一个 web 网站，各种认证，后端 API 实现都是熟门熟路，加上 Claude Code 超强的开发能力，我用了不到两天，就把 Textwell 补齐了登录注册，额度限制，这些基础的用户模块，做了一个简单的额度查看，并且给未登录的用户也增加了体验额度。毕竟功能的实现是需要消耗 AI token 的，我作为个人开发者，也只能先力所能及的提供一些免费额度了，模型也只能选择一些性价比比较高的，没法用上最顶级的大模型。</p><figure class="image ss-img-wrapper image_resized" style="width: 369px;"><img src="https://cdnfile.sspai.com/2025/08/12/97453bbe52b4ebfb454409c9f2fff1c5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Textwell 用户中心</figcaption></figure><p>除了用户模块，还做了国际化，支持中文和英文，后续补上了西语和法语（现在又因为维护太繁琐移除掉了）。&nbsp;</p><figure class="image ss-img-wrapper image_resized" style="width: 337px;"><img src="https://cdnfile.sspai.com/2025/08/12/056e5a97e95a04ab898b6f93ef81b80b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Textwell 国际化</figcaption></figure><p>文本除了把内容粘贴进去，也可以直接拖拽文件到编辑器区域，像是常见的 markdown 、docs、pdf、txt 这些格式都支持的。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/13/0a8590ed5c373f2a4180dbcdf825f0c9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>基础功能补齐后我就直接把网站上线了，域名就是 <code>text-well.com</code>。运气还挺好的，可以选到一个很合适的域名。</p><h2>首页设计</h2><p>虽说只是一个很简单的工具，但是作为一个产品，我还是想把它的设计理念和使用的方式快速的告诉大家，也为了更好的宣传，我决定为它设计一个首页！</p><p>由于 Textwell 最开始功能真的很简单，我对于它的首页怎么做没有头绪，没有用户使用反馈，没有数据支撑，我也不想瞎编，又想把网站做的好看，关于如何设计就纠结了很久...</p><p>后来我想到我可以在首页很直观的展示系统内是如何进行操作的，然后把我的一些设计初衷通过 UI 的形式展示出来，再加点 FAQ 模块丰富一下页面，内容应该也还可以支撑一个完整的网站设计，于是我就开始动手喽~</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/12/7e4553f7ab57847f5fb7623ca86b3e88.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/12/c05c42e020a2621bd542c7ad1ad355c2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/12/04acbd01eb4c790273e02bd92f722495.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/12/743ebbfb5fc121b508e53dbab147df68.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>最早期的时候，网站就是以上的几个模块组成的，首屏是左右布局，右侧是一个自动执行的动画，我将系统里的核心操作模拟给用户看，这样大家一看到首屏就知道整个系统的效果。第二屏是一个理念的传达，告诉大家我开发这个工具的初衷，以及用 Textwell 和直接使用 AI 对话进行文本优化的区别。第三屏是 FAQ，最后加了一个底部栏。</p><p>Textwell 的 Logo 还做了一个简单的动画效果，想传达的意思就是让文本质量更好“一点”，所以第一个字母 T 的右上角有一个橙色的小圆点。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/13/7f7ce20ddfda4d6748d5a30b09dff3cf.gif" /></figure><h2>继续拓展</h2><p>在网站上线后，我去阮一峰老师的 Github 去投稿了一下周刊，觉得自己用心做的东西还是有机会被发现的，<strong>把“孩子”养大，总想让更多人看看。</strong> 抱着试一试的心态，我去阮一峰老师的每周分享仓库里提了个issue，推荐了Text-Well。说实话，当时没抱太大希望，毕竟优秀的个人项目太多了。</p><p>直到周五，当我看到新一期的周刊发布，Text-Well 赫然出现在上面时，那种被认可的喜悦感是难以言喻的，文章在周刊的第 359 期 https://www.ruanyifeng.com/blog/2025/08/weekly-issue-359.html。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/13/aa37ad2a3dea60ce2e4d952743c47132.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>虽然只有很简单的一个介绍，但是当天的访问量还是高了很多的，而且得益于我把这张图做成正方形而不是横向的完整屏幕，而阮一峰老师博客里面的图片都是宽度占满的，高度按着原始比例撑开的，导致我这张图占了很大篇幅，现在很庆幸自己没有随便截个图敷衍了事。</p><p>有了第一批用户还是很开心的，后续我就继续拓展功能，并且把一些犄角旮旯的小体验持续优化。基于最基础的语法/错别字/标点符号检查，我还拓展了一些其他检查方式：</p><figure class="image ss-img-wrapper image_resized" style="width: 406px;"><img src="https://cdnfile.sspai.com/2025/08/13/c4c475c22a65c6033062180f01e5f9c4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Textwell 不同的检查方式</figcaption></figure><p>在把基础的检查功能完善后，我又有了一个新的想法，就是做一个模拟评审功能~ 因为不论是什么内容，最终都是要传达给其他人看的，如果只有一个检查功能，只能保障文本的下限，那么如果要提升文本的整体质量，提前了解别人看到文章后的想法应该是一个不错的方式。我自己作为一个产品经理，在写好产品需求文档后进行评审时就经常被毒打，如果能够提前被毒打一番，可能在面向真正的人进行传达时会有更加充分的准备！</p><p>既然我已经开发了这样一个文本优化工具，我觉得这个产品形态很适合去再增加一个评审功能，因为我的 AI 检查功能，左侧工具栏展示的是一个问题项，如果是 AI 评审功能的话，就将左侧的问题项参考飞书文档那样变成一个个的评论就好了。既然实现没那么麻烦，又是我自己觉得有意义的功能，就开始动手做了。</p><h2>实现模拟评审功能</h2><p>说干就干，我先用一天时间把一个基础的评审逻辑给设计好，包括整体的评估机制，评审人的背景、世界观，Prompt 的设计，大模型的选择，以及如何交互等等。在方案设计的时候我通常会使用 Gemini 来辅助我思考并整理文档。这里偏题一下，Gemini 2.5 Pro 的文本能力和理解能力真的很强，也经常给予我一些鼓励，在我开发的过程中给了我很多的帮助。</p><p>最终实现的效果是这样的：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/14/2c7db90b95dbb8ef4dfef819a39e4833.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Text-Well AI 评审</figcaption></figure><p>&nbsp;</p><p>在左侧的工具栏中，我增加了一个标签栏，可以用于切换检查模式和评审模式，在评审模式中，第一步我们需要选择评审人：</p><figure class="image ss-img-wrapper image_resized" style="width: 376px;"><img src="https://cdnfile.sspai.com/2025/08/14/31de76ac33cc551a72aeada30c43cbff.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>最初我是只设计了智能匹配功能，智能匹配会检查你的文档类型。比如说你想评审一篇技术文档，它就会给你匹配你的目标读者，可能会有技术小白，可能会有技术大牛。除了目标读者，还会有和你同领域的专家，可能有技术社区的运营这一类的。每一个评审人他们都有自己的世界观，有自己的评审标准，而且他们的关注点各有不同，你不用担心三个人的评论同质化非常严重。</p><p>除了智能评审， 我还内置了一些常用的评审团队，大家也可以在上图中看到，之所以内置一些团队是为了让大家更快的了解评审功能到底可以用在哪些场景，而且内置的这些评审团队的人物背景和关注点是精心设计过的，相较于智能匹配可能没有那么有趣，但是会更加专业一点。大家可以在 <a href="https://www.text-well.com/zh/text-review">Text-Well 评审</a> 查看所有的评审团队以及他们对应的场景。</p><p>评审人完成评审后，会给你一个整体评论，还有针对每一句话的详细评论，展示效果和检查模式差不多时一致的，只是高亮的颜色会有所不同，不同的评审人会有不同高亮的颜色，高亮的颜色和他们头像右上角的那个小圆点的颜色是对应的。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/14/c45ec3b54cd202b2a56c41dff962c9e7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>如果你的同一个位置被多个人评论了，那么高亮位置就会变成渐变色。有的时候看了评审人的评论，我感觉我自己才是 AI 🥹</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/14/f90c20ea0e608a3114ce1b73992d0ec0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>写到这里，你可能会问，这个“模拟评审”功能，和直接把文章丢给AI，让它扮演一个角色来提意见，有什么本质区别呢？</p><p>一开始，我也在思考这个问题。但随着我自己不断地使用和打磨，我发现区别是蛮大的。它体现在<strong>“结构化” </strong>和 <strong>“视角化”</strong>这两个核心点上。</p><p><strong>1. 结构化的反馈，而不只是观点</strong></p><p>直接和 AI 对话，你得到的是一段连续的、观点性的文字。而 Text-Well 的评审功能，把反馈拆解成了“整体评价（Overall）”和“逐行评论（Comments）”。更重要的是，每一条评论都被结构化地呈现在原文的对应位置。</p><p>这意味着你不再需要在大段的 AI 回复中，去费力地找它到底在评论哪一句话。所有的反馈都像Code Review 一样，清晰地展示在原文上。你可以逐条处理、采纳、或是忽略。这种掌控感和效率，是单纯的 AI 回答没法比的。</p><p><strong>2. 视角化的冲突，而不只是角色扮演</strong></p><p>这可能是这个功能最核心的价值所在。我为 AI 评审员设计的 Prompt，不仅仅是让他们“扮演”某个角色，而是强迫他们“坚守”一个独特的、甚至有些偏执的视角，并刻意让他们在某些方面产生冲突。</p><p>这种“冲突”不是 Bug，而是 Feature。它强迫我们这些写作者，去思考那个最重要但最难的问题：<strong>我到底要为谁写作？我最想达成的目标是什么？</strong></p><p>它没有给我一个“标准答案”，但它给了我一个<strong>更高维度的决策框架</strong>。这让我意识到，我做的不仅仅是一个工具，更像是一个“写作决策模拟器”。</p><h2 style="margin-left: 0px;">未来的规划与思考</h2><p>当然，Text-Well现在还很稚嫩。</p><p>作为一个个人项目，我能投入的资源有限，无法用上最顶级的、最昂贵的 AI 模型。有时AI评审员的反馈可能还不够深刻，甚至会说一些“正确的废话”。但我相信，优秀的产品形态和对用户工作流的深度理解，可以在一定程度上弥补模型本身的不足，而且模型后面肯定会越来越好，我要做的就是换个模型就好了，但是产品形态和 UI 的易用是现在我认真打磨的。</p><p>写这篇文章，一方面是想和大家分享我做这个小产品的历程和思考；另一方面，也是最重要的一方面，是希望能听到来自大家的声音。</p><p>我深知自己作为一个开发者的局限性，很多时候会陷入自己的世界里。所以，我非常需要来自不同领域、不同背景的你的反馈。任何想法，无论大小，对我来说都至关重要。它们是我把这个小小的side project继续做下去的最大动力。</p><p>如果你对 Text-Well 感兴趣，欢迎访问它的官网 <strong>text-well.com</strong> 体验。</p><p>感谢你耐心读到这里。希望我的分享，能给你带来一点点启发。也期待在评论区，看到你的想法。最后给大家看看我现在这篇文章评审人给我的总结：</p><figure class="image ss-img-wrapper image_resized" style="width: 473px;"><img src="https://cdnfile.sspai.com/2025/08/14/8e2dc7da7aa786e9f22d37d8ef5898a7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>楚岩的评论</figcaption></figure>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101912</id>
            <title>「任天堂物语」06上帝给任天堂焊死的门，被维修工一脚踹开</title>
            <link>https://sspai.com/post/101912</link>
            <guid isPermaLink="false">https://sspai.com/post/101912</guid>
            <pubDate></pubDate>
            <updated>Sun, 17 Aug 2025 17:09:54 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 任天堂, 山内溥, 横井军平, 玩具转型  
<br>  
<br>  
总结: 任天堂第三代掌门人山内溥在纸牌业务遭遇瓶颈后，尝试多元化发展但屡屡失败，公司濒临破产。退回纸牌业务后，通过迪士尼联名短暂复苏，但欧美市场拓展失利。东京奥运会带来的娱乐变革进一步冲击传统业务。山内溥转向玩具行业，初期以模仿为主，后因维修工横井军平发明的“超级怪手”大获成功，确立了“成熟技术的水平思考”产品哲学。后续尝试挑战乐高和跨界实用品均告失败，最终明确公司应聚焦“独特娱乐体验”。横井军平的电子工程背景为任天堂未来电子游戏转型埋下伏笔。 </div>
                        <hr>
                    
                    <p><strong>书接上回，烧光了钱，烧没了面子</strong></p><p style="margin-left: 0px;"><a href="https://mp.weixin.qq.com/s/0J27SyZ12wJL-hX_ziSw6Q">上回讲到</a>，任天堂第三代掌门人山内溥，亲赴美利坚，见识了世界第一扑克牌大厂的“摩登与霸气”，也见识了资本主义花花世界的残酷与机遇。山内溥心里那团火，烧得比京都的夏天还猛。他觉得，小小的花札纸牌，再也困不住他这条猛龙。</p><p style="margin-left: 0px;">回国之后，一场轰轰烈烈的“不务正业”运动，就此拉开序幕。</p><p style="margin-left: 0px;">但凡老板出国见了点世面，回来总想搞点“大的”，这几乎是刻在企业家DNA里的条件反射，山内溥也不例外。在他眼里，任天堂的未来，必须是星辰大海，是衣食住行，是“人类离不开的任天堂”。结果呢？出租车公司的司机师傅比黑社会还难管，情人酒店又惹了一身麻烦，速食米饭更是无人问津。</p><p style="margin-left: 0px;">一通操作猛如虎，回头一看，公司账户只剩二百五。这个时候的山内溥，就像一个在赌场输到精光的阔少爷，脸上无光，口袋没钱。他站在京都的十字路口，前路茫茫，究竟该怎么办呢？</p><p style="margin-left: 0px;">对于山内溥这位行事风格素来以“铁腕”和“独断”著称的君王而言，这不仅仅是一次商业上的惨败，更是一次对其个人权威和商业直觉的公开处刑。他亲眼见证了美国扑克牌公司（United States Playing Card Company）那小得可怜的办公室，深刻认识到家族传承百年的纸牌生意，其天花板之低，远超想象。他迫切地想要带领任天堂这艘百年老船驶向更广阔的蓝海，却一头扎进了最汹涌的漩涡。出租车、酒店、食品，这些看似能带来稳定现金流的“实业”，对于一个基因里只懂“玩”的公司来说，简直是跨物种恋爱，结局注定惨淡。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/00b5d8a653b67e18931cc721a3b66ef1.gif" /></figure><p style="margin-left: 0px;">这场代价高昂的试错，让任天堂元气大伤，濒临破产。但从商业战略的角度看，这又是一次必要的“压力测试”。它用最残酷的方式告诉山内溥：你以为你什么都懂，但市场会教你做人。公司面临的已经不是“如何增长”的问题，而是“如何活下去”的生存危机。正是这种深入骨髓的绝望感，为任天堂接下来既荒诞又传奇的转型，提供了最完美的温床。因为当一家公司被逼到墙角时，任何一根救命稻草，无论看起来多么不切实际，都会被紧紧抓住。</p><p><strong>纸牌之王的最后一搏</strong></p><p style="margin-left: 0px;">在多元化的战场上被揍得鼻青脸肿之后，山内溥做出了最符合人性的选择：战略性撤退，退回自己最熟悉的舒适区，纸牌。</p><p style="margin-left: 0px;">这不是信心的表现，而是求生的本能。毕竟，在找到新的金矿之前，守住祖上留下来的盐碱地，至少还能保证有口饭吃。</p><p style="margin-left: 0px;">任天堂首先加强了与迪士尼的合作。早在1959年，山内溥就展现了他超越时代的眼光，签下了迪士尼的IP授权，将米老鼠和唐老鸭印在了塑料扑克牌上。这一招在当时的日本市场堪称降维打击。过去，扑克牌总与赌博、黑道这些上不了台面的东西挂钩，但迪士尼角色的出现，瞬间将其“洗白”，变成了可以全家同乐的派对游戏。这次合作大获成功，第一年就卖出了超过60万套，让任天堂在日本扑克牌市场一举奠定了霸主地位。如今，面对危机，山内溥自然想起了这位曾经的“贵人”，推出了更多联名产品，试图榨干纸牌业务的最后一滴油水。</p><p style="margin-left: 0px;">国内市场的成功，并不能满足山内溥的野心。他将目光投向欧美国家。他认为，任天堂的塑料扑克牌经久耐用，质量上乘，理应能在欧美市场大杀四方。但现实很快就给了他一记响亮的耳光。这是一个典型的、可以写进商学院教科书的“产品-市场不匹配”失败案例。当时欧美这边认为纸牌是消耗品，没必要买贵的。用烂就丢，廉价一点的纸牌更容易让人们接受。任天堂的塑料扑克牌在欧美市场完全打不开销路，山内溥的“出海梦”还没开始，就已搁浅。</p><p style="margin-left: 0px;">屋漏偏逢连夜雨。正当任天堂在海外碰壁，国内市场也风云突变。1964年东京举办了奥运会。这是日本首次举办奥运会，也是战后日本向世界展示其全新面貌的盛大舞台。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/7970ea4836e833998a2b5037e6114903.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">整个国家都沉浸在一种昂扬的、拥抱新生活的情绪之中。奥运会不仅带来了基础设施的飞跃，比如著名的新干线“子弹头列车”，更重要的是，它极大地丰富了日本民众的娱乐生活。政府大力推广体育运动，户外活动、看比赛、参与社区体育俱乐部，成为了新的时尚。</p><p style="margin-left: 0px;">这股席卷全国的“娱乐升级”浪潮，对任天堂这样的“旧娱乐”供应商来说，无异于一场海啸。当人们的休闲时间被保龄球、电影、露营和各种体育赛事填满时，谁还有心思围坐在一起玩花札纸牌呢？任天堂的核心业务，正在被时代无情地蚕食。公司的股价也应声暴跌，从最高的每股900日元，一路狂泻到60日元，几乎沦为废纸。</p><p style="margin-left: 0px;">山内溥后来也说，如果当时任天堂没上市的话，公司可能就没了。</p><p style="margin-left: 0px;">内外交困之下，山内溥终于明白，死守着纸牌这块祖业，只有死路一条。任天堂必须，也只能，在新的战场上杀出一条血路。</p><p><strong>“山寨”的艺术与大总管的登场</strong></p><p style="margin-left: 0px;">对于任天堂未来要成为一家什么样的公司，对于自己到底要干点什么才好，山内溥是完全不知所措的。</p><p style="margin-left: 0px;">但山内溥懂反思，开始思考任天堂的优势到底是什么。</p><p style="margin-left: 0px;">说到底，任天堂从创始到现在都是一家贩卖娱乐的公司，配合祖辈打通的经销渠道，做玩具好像可以，那就试试做玩具吧。</p><p style="margin-left: 0px;">做什么玩具呢？</p><p style="margin-left: 0px;">山内溥自己不擅长创作玩具，他也不爱玩玩具。但这不代表不可以抄啊。不对，是致敬。他将目光投向了当时正蓬勃发展的玩具市场，策略简单粗暴，什么好卖就做什么。这时的任天堂，没有宏大的创新蓝图，唯一的KPI就是：搞钱，快点搞钱。</p><p style="margin-left: 0px;">于是，一系列充满了“既视感”的玩具产品线被迅速推出。</p><p style="margin-left: 0px;">从最简单的开始做起，首先做的是麻将、围棋这类生产难度相对低一点的棋牌。其中最受欢迎的是“役满麻将”。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/d6d9e1a26904cf788e407692fe06130b.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">棋牌成功给任天堂回了一口血，山内溥尝到甜头决定继续发力。对于“抄作业”这件事，山内溥觉得年轻人会比老油条擅长。但当时的年轻人大多不愿意加入任天堂。因为觉得任天堂是一家古老、和赌博有关的公司。</p><p style="margin-left: 0px;">山内溥的做法也很简单，加薪！在报刊上登招聘广告，并且开出比行业平均水平还要高点的薪酬。</p><p style="margin-left: 0px;">在公司战略重心向玩具全面转移的过程中，一个关键人物登场了。他就是今西絋史。</p><p style="margin-left: 0px;">1963年今西絋史大学毕业，读法学系。毕业后加入任天堂，负责行政、财务、策划，甚至还要担任部分项目的项目经理，但唯独跟他读的专业没有关系。他后来成了任天堂的大总管，内部戏称他为“地域番犬”，也就是看门狗的意思。翻译过来就是“一脸严肃的公关部长和任天堂发言人”。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/e99fe89314f0f435f0a8c6b645d931c5.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">1964年，任天堂制作的第一款玩具——云霄小飞兔。售价800日元。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/f7952f9443a28c897f58d162dedb30f3.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">云霄小飞兔的玩法非常简单，几颗珠子在不同赛道奔跑，谁先到达终点谁胜出。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/55eadbae5864f13e33566a6538e5eeb8.gif" /></figure><p style="margin-left: 0px;">之后也出过其他版本的云霄小飞兔，比如下面这款，售价500日元。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/02a32df2fb49305e379d49ff25918787.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">云霄小飞兔同样是一款成功产品。山内溥再次思考任天堂未来的路，虽然现在任天堂还没有原创的玩具产品，但可以在致敬的基础上加入自己的思考。</p><p style="margin-left: 0px;">山内溥是凭着直觉和铁腕指明方向，今西絋史的加入更是稳固了任天堂的娱乐基因，他负责搭建班子、规划路线，他是确保山内溥的指示能顺利落地的大总管。后面出现的横井军平、上村雅之、竹田玄洋这几位名将也是他面进来的。</p><p style="margin-left: 0px;">可以说，没有今西絋史今天的任天堂就不是现在这个样子。他的到来，标志着任天堂的“胡来”，开始变得有章法了。</p><p><strong>摸鱼的维修工</strong></p><p style="margin-left: 0px;">成事在天，谋事在人。任天堂的棋牌、云霄小飞兔玩具都不是原创产品，这些产品能取得成功还是靠祖先的发力，经销网络发达就是好。</p><p style="margin-left: 0px;">后面任天堂能成为“世界主宰”还得招纳几位圣贤，最早出现的这位叫横井军平。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/0fc7604975ffcb8324cdbcfd1385c1e2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">横井军平出生于1941年9月10日，土生土长的京都人。大学学的是电子技术，成绩一般，毕业后在夏普实习过。但最终选择了任天堂这家在当时名不见经传的小公司。理由很简单，离家近。</p><p style="margin-left: 0px;">1965年横井军平加入了任天堂，负责维护生产花札的设备。维修机器的工作对他来说过于简单，导致工作不饱和。用现在流行的话来说，横井军平就是一个典型的“技术宅”和“摸鱼大师”。在工作的间隙，他会用工厂里废弃的零件，捣鼓一些有趣的小玩意儿来打发时间，纯粹是为了自娱自乐。</p><p style="margin-left: 0px;">山内溥日常有巡逻的习惯（好像很多中小企业的老板都有这个习惯🤔）。在1966年的某一天，山内溥照常巡逻。他的出现往往让整个车间的空气都为之凝固。这一次，一个不寻常的景象吸引了他的目光。他看到那个名叫横井军平的维修工，正在玩一个自己制作的奇怪装置。</p><p style="margin-left: 0px;">好家伙，摸鱼摸到我眼皮底下了。走近一看，那是一个用木头和弹簧做成的、可以伸缩的机械手臂，一按把手，前端的爪子就能张开和合拢，抓住远处的物体。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/ac43a0e1cbadf7d6d0bbb3498c8e6d27.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">命运的齿轮，就在这间嘈杂的工厂里开始悄然转动。</p><p style="margin-left: 0px;">山内溥虽然不玩玩具和游戏，但他对“什么是好玩的事物”却有着惊人的判断力。</p><p style="margin-left: 0px;">看着惊慌失措的横井军平，他问了一句：“这是什么？”</p><p style="margin-left: 0px;">横井军平简单的介绍了一下他这玩意的功能后，山内溥丢下一句“把它商品化”。</p><p><strong>一个玩具拯救一家公司</strong></p><p style="margin-left: 0px;">横井军平的那个即兴创作，被山内溥命名为“超级怪手”（Ultra Hand）。这款结构简单、玩法直观的玩具，在当时能卖出10万套就属于爆品的年代，“超级怪手”卖出了120万套。成为任天堂历史上第一个销量破百万的玩具爆款。而且这个玩具还是任天堂原创玩具。</p><p style="margin-left: 0px;">“超级怪手”的成功，其意义远不止是为公司赚了一大笔钱。它如同一针强心剂，打进了濒临死亡的任天堂体内，彻底终结了公司内部对于是否应该放弃纸牌、投身玩具行业的争论。它用实打实的销量证明了，这条路，走得通。横井军平也因此一战成名，被山内溥从生产线上直接提拔到了新成立的“游戏部”，从一个默默无闻的维修工，一跃成为公司产品研发的头号明星。</p><p style="margin-left: 0px;">更重要的是，“超级怪手”的诞生与成功，无意中催生了任天堂未来几十年里最核心、最宝贵的产品哲学——“枯れた技術の水平思考”（Kareta Gijutsu no Suihei Shikō），通常被翻译为“成熟技术的水平思考”，或者更广为人知的“横向思维与枯萎技术”。</p><p style="margin-left: 0px;">这个听起来有些拗口的词组，其内核思想却异常朴素和强大 ：</p><p style="margin-left: 0px;"><strong>“枯萎技术”（Withered Technology）</strong>：这里的“枯萎”并非指技术过时，更准确的翻译应该是“成熟”或“饱经风霜”（weathered）。它指的是那些已经大规模生产、技术稳定、成本极低的成熟技术。比如弹簧、塑料、液晶计算器显示屏、AA电池等。横井军平认为，开发新产品不一定非要追逐最尖端、最昂贵的技术，因为尖端技术往往伴随着高昂的成本、不稳定的良率和巨大的研发风险。</p><p style="margin-left: 0px;"><strong>“水平思考”（Lateral Thinking）</strong>：这指的是将这些廉价、成熟的技术，用一种全新的、意想不到的方式组合起来，创造出前所未有的娱乐体验。创新的关键不在于技术本身有多先进，而在于应用技术的方式有多巧妙。</p><p style="margin-left: 0px;">“超级怪手”正是这一哲学的完美“创世之作”。它没有使用任何高科技，只是将木条、弹簧、绳子这些最普通、最便宜的“枯萎技术”组合在一起。但“可以伸长的手臂”这个玩具概念，却是新颖、有趣、能激发人们玩乐天性的“水平思考”的产物。</p><p style="margin-left: 0px;">这次巨大的成功，在任天堂内部形成了一种强大的“路径依赖”。它证明了，创造一个商业爆款，不一定需要像索尼那样投入巨额的研发经费去攻克技术难关。一条更经济、更讨巧的道路被开辟了出来：利用现有的廉价技术，去创造全新的玩法。这个从一个塑料玩具中诞生的朴素哲学，将如同一个幽灵，深刻地影响任天堂未来的大多数关键决策。从后来利用计算器技术制作的 Game &amp; Watch，到为了续航而坚持使用黑白屏幕的 Game Boy，再到不与索尼、微软比拼画面机能，而是用体感操作开辟新赛道的 Wii，其背后都闪耀着“成熟技术的水平思考”的光芒。可以说，这一天，横井军平不仅发明了一个玩具，更定义了任天堂的灵魂。</p><p style="margin-left: 0px;">“超级怪手”的成功并非孤例，它开启了横井军平一连串的创意井喷，也让任天堂彻底掌握了这套“点石成金”的独门秘籍。紧随其后，横井军平又推出了“超级发球机”（1968年发售，售价1480日元），一个简易的自动棒球发球机。它只用一节电池驱动一个小马达，通过简单的弹簧和旋转臂结构，就能自动把乒乓球一个个弹射出来，让孩子们能独自练习挥棒击球。一节电池能续航8小时，发球3200次以上。这个玩具再次大卖，销量也突破了百万（第一年销量80万台，第二年飙升到100万台），证明了这套打法是可复制的。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/c671eedda40e037e36ec14cd87bbc5da.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">接着，横井军平开始将廉价的电子元件融入玩具，创造了“爱情测量仪”（1969年发售，售价1800日元）。这个设备让两个人手牵手，再各自握住金属球，通过测量皮肤间的微弱电流，用一个仪表盘来显示所谓的“爱情指数”。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/7a11e2573600fbb44dfd59e93fc22344.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">技术简单到不能再简单，其实就是个电流表。但“测量爱情”这个概念却新奇有趣，精准地切中了年轻人的社交需求。</p><p><strong>新贵的傲慢与迷失</strong></p><p style="margin-left: 0px;">“超级怪手”的巨大成功，让任天堂一夜之间从破产边缘的“吊车尾”逆袭成了玩具界的“新贵”。而暴富，往往会催生出傲慢。赚到第一桶金的任天堂，很快就犯下了几乎所有暴发户都会犯的错误：高估自己的能力，试图挑战行业里的“武林盟主”。</p><p style="margin-left: 0px;">这个盟主，就是来自丹麦的乐高（Lego）。1968年，任天堂推出了一系列名为“N&amp;B”的积木玩具（Nintendo Block，1968年-1972年发售，售价50日元-2800日元），公然对标乐高。为了体现差异化，N&amp;B积木加入了很多圆形和弧形的零件，并且在广告中直接与乐高方方正正的积木进行对比，宣称自己的产品更有趣。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/55556a3b03b6a75a5f2107987db5a854.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">乐高公司自然不能容忍这种挑衅，一纸诉状将任天堂告上法庭。然而，任天堂的设计师展现了惊人的“法务前瞻性”，他们巧妙地修改了积木底部的圆管结构，成功规避了乐高的专利，最终赢得了官司。</p><p style="margin-left: 0px;">在法庭上赢了，不代表在市场上也能赢。消费者很快发现，N&amp;B积木的咬合度远不如乐高，拼插体验不佳。最终，这条产品线在70年代初便草草收场。与乐高的这场战争，给任天堂上了宝贵的一课：公司的核心竞争力，不在于乐高那种需要极高工业精度和系统化设计的领域。任天堂的“天赋树”，点在了“低成本、高创意、轻巧型”的奇特产品上。试图在别人的主场用别人的规则击败别人，注定是徒劳的。这次失败，反而从反面再次印证了横井军平“成熟技术”哲学的正确性：不要硬碰硬，要玩点别的。</p><p style="margin-left: 0px;">然而，公司的身份认同危机并未就此结束。在玩具领域站稳脚跟后，山内溥似乎又开始了他那该死的“多元化”冲动，只不过这次的方向从“服务业”转向了“实用品”。任天堂开始了一系列令人迷惑的“跨界”尝试，试图证明自己不仅能制造快乐，还能解决生活中的实际问题。</p><p style="margin-left: 0px;">其中一个产品是婴儿车（1972年发售，售价8900日元）。这是一款可折叠的轻便婴儿车，在70年代初算得上是相当前卫的设计。然而，这款产品的机械结构存在缺陷，在折叠时很容易夹到用户的手指，甚至有意外折叠导致婴儿摔落的风险。这种致命的设计缺陷导致用户投诉不断，任天堂也回收了很多有问题的婴儿车，很快这款婴儿车就在市场上销声匿迹了。最终只卖出了2.3万台。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/0e9b16d6a5ffe2cec0b2cc69264aadbd.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">另一个奇葩产品是1970年推出的家用棉花糖机（1970年发售，售价2980日元）。这是一个简化版的、可以在家制作棉花糖的电器。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/283aa97f4ddf7aef8cf12130140a11ea.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">想法很美好，但对于一个玩具公司来说，跑去卖家用电器，无疑又是另一次“物种跨越”。此外，任天堂甚至还涉足过办公和健身领域。</p><p style="margin-left: 0px;">下图是任天堂的打印机，名叫“拷贝者”（1971年发售，售价9800日元）。之后也迭代过3款，价格也更贵，但都激不起浪花。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/a8eb3fd7551f600bf8e2157caad74723.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">下图是一款健身器材，名叫“你来我往”（1975年发售，售价3000日元）。我小时候也玩过这个，但我玩的那款不是任天堂出品。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/18/4e066e9f8151b87ba27630106a0c8b29.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">这些在“实用品”领域的尝试，无一例外都失败了。这一连串的失败，并非偶然。它们共同指向了一个深刻的结论：市场的反馈，正在帮助任天堂进行一次痛苦但必要的“自我认知矫正”。市场可是用真金白银投票的。</p><p style="margin-left: 0px;">正是这一时期不断的碰壁和试错，像一把刻刀，一点点雕琢出了任天堂未来的形状，剔除了所有多余的业务枝蔓，最终让公司的核心“创造独特的娱乐体验”变得前所未有的清晰。</p><hr /><p style="margin-left: 0px;">但故事还远未结束。一个最关键的伏笔，早已悄然埋下。那个用塑料和弹簧拯救了公司的男人，横井军平，他的大学专业是什么来着？</p><p style="margin-left: 0px;">是电子工程。</p><p style="margin-left: 0px;">驱动下一个时代变革的技能，早已潜伏在这家公司的体内，隐藏在一个玩具设计师的身份之下。塑料和发条的时代即将落幕，一个由电路、像素和蜂鸣声构成的幽灵，正在机器中缓缓苏醒。</p><p style="margin-left: 0px;">游戏，即将改变。</p><hr /><blockquote><p style="margin-left: 0px;">⭐ 如果你也喜欢任天堂，想了解任天堂的历史，欢迎关注<a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA5MDc1ODI2NA==&amp;action=getalbum&amp;album_id=3974696752371646468#wechat_redirect">《任天堂物语》❤️</a></p></blockquote>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101893</id>
            <title>关注足底健康：30天从疼痛难忍到逐步缓解，面对足底筋膜炎我做了这些</title>
            <link>https://sspai.com/post/101893</link>
            <guid isPermaLink="false">https://sspai.com/post/101893</guid>
            <pubDate></pubDate>
            <updated>Sun, 17 Aug 2025 07:46:06 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 足底筋膜炎,康复经验,运动损伤,疼痛缓解  
<br>  
<br>  
总结: 本文作者分享了个人足底筋膜炎的康复经历。最初因打篮球导致右脚疼痛，经诊断为足底筋膜炎。文章解释了足底筋膜炎的定义和症状，即足底筋膜因过度使用或错误运动模式引发炎症。作者提出五点缓解方法：找出诱因（如不正确运动姿势）、减少足部活动、选择合适的鞋和鞋垫、使用抗炎药物以及尝试不同放松方式（如冰敷或筋膜球）。最后强调康复需个体化尝试，并提醒读者遵循专业医疗建议。 </div>
                        <hr>
                    
                    <p><strong>（注意：本文仅为个人康复经历的分享记录，不构成任何医学诊断或治疗建议。若您出现类似不适症状，请务必及时前往正规医疗机构就诊，遵循专业医生的指导。）</strong></p><p>今年 7&nbsp;月 4&nbsp;日，我打完篮球后出现右脚脚底疼痛。起初没在意，以为是正常的运动疲劳，休息几天就会好转。大概休息 3-4&nbsp;天后，感觉症状基本消失，于是在 7&nbsp;月 8&nbsp;日继续去球场打篮球。但这次打完球后，脚底再次疼痛，且痛感明显加重。这次我便格外重视，之后花了约 12&nbsp;天时间休息，没有参加任何篮球活动，期间能明显感受到脚底在慢慢好转。</p><p>到了 7&nbsp;月 20&nbsp;日，我觉得症状已基本消失，于是在去看球赛的路上，路过球馆时忍不住又去打了篮球。然而这次打完球后，疼痛突然变得非常严重，甚至出现了轻微肿胀。随后两天我前往医院检查，X&nbsp;光除了显示我十多年前的陈旧性骨折线以外，未显示脚底板疼痛的地方有骨折，最终被诊断为足部损伤性筋膜炎 ——&nbsp;这个对我来说有些陌生的名词，全称其实是足底筋膜炎。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/17/b08dae77b1e5c86ff4a45e0413f5bb77.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>右脚-X光光片</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/17/385afff760c9d4b1837fd5df4cf12be0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>被诊断为筋膜炎</figcaption></figure><h2>足底筋膜炎定义：</h2><p>“何为足底筋膜炎呢？维基百科的定义是：足底筋膜炎（英语：Plantar fasciitis），又称跑者足（jogger's heel），是一种发生在支撑足弓的结缔组织附着点（肌腱和韧带附着于骨头处）的病变。患者会出现脚跟或脚底疼痛，且每天起床或休息后起身走路的第一步，症状最为严重。若将脚掌及脚趾向上（向胫骨方向）弯曲（即医学上的 “背屈”&nbsp;动作），也会引发疼痛。症状通常缓慢出现并逐渐加重，且约三分之一的患者双脚均有类似症状。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/17/6b8b9b0ffb9a7fa864505acd04366c8f.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>足底筋膜炎最常见的疼痛部位-图来自维基百科</figcaption></figure><p>简单说：足底筋膜就像一根 “橡皮筋”，长期被过度拉扯会变紧、变脆，甚至出现微小撕裂，进而引发疼痛。</p><h2>我是如何缓解疼痛的：</h2><p>那么过去的二十多天我是如何缓解足底筋膜炎带来的疼痛呢？我主要做了以下五点，第一点是找到诱发足底筋膜炎的因素；第二点是合理的制动，尽量减少足部落地的频次；第三点是选择合适的鞋子或者足底减压垫以及定制/矫正鞋垫减轻走路时给疼痛部位带来的压力；第四点是使用非甾体类抗炎药物或者双氯芬酸二乙胺抗炎药物镇定止痛，第五点是选择合适的手段放松足底。以上几点是简单的概述，接下来我会详细分点展开说说我具体是怎么做的。</p><p><strong>1.找到足底筋膜炎的诱因：</strong></p><p>我觉得治疗足底筋膜炎最重要的一点，是找到自己的诱发原因。虽然维基百科提到目前足底筋膜炎的成因尚未完全明确，但就我个人经验而言，过度使用足底或采用不正确的运动模式、训练动作，都可能加剧足底疼痛 ——&nbsp;这类动作一定不要继续。尤其是若存在扁平足、高足弓、足外翻或足内翻等问题，脚部长期处于异常发力模式中，很可能会增大足底筋膜的压力，最终引发炎症。我自己的情况就是如此 ——&nbsp;因打篮球时，特别是扣篮过程中过度用前脚掌发力跑动，加上起跳落地等动作的发力模式不正确，才导致了足底筋膜炎。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/17/094bb907c1f1acf44a9c4afcd12750ef.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>不正确的打球发力动作</figcaption></figure><p>所以在我停止打篮球（尤其是扣篮）后，脚底的情况每天都在好转。因此，如果你也有足底筋膜炎，需要先找到自己的诱发原因，减少诱因的出现，能帮你大大缓解足底筋膜炎的症状加剧。”</p><p><strong>2.合理的制动</strong></p><p>对于足底筋膜炎，医生通常不会给出像骨折一样严格的制动建议，但就我个人经验而言，在筋膜炎急性期尽量减少走路，对恢复还是很重要的。尤其是我最初的症状是脚掌一落地、一受力就会疼痛，如果你有条件可以不走路，那就尽可能少走路，而作为需要通勤的打工人，我在北京每天不得不走接近一万步的路。为了避免疼痛加剧，我不得不想尽办法减少足部负担。我的第一个方法是把地铁通勤改为公交通勤：上班需要换乘地铁时，北京的地铁换乘动辄就要走近一千步；改坐公交后，我会让女朋友骑电动车送我到家门口的公交车站乘车，直达公司附近的车站后，再骑自行车到园区门口。其次，原本上班期间的两顿堂食改为了中午点外卖，晚上下班再吃饭，吃完后直接坐公交车回家。再者，上班时尽可能坐在工位上，减少打水和上厕所的频次。通过以上几种手段控制后，我的每日步数从原本的一万步左右降到了 3000&nbsp;步左右。这样持续控制十天后，对足底的康复起到了显著作用。”</p><p><strong>3.选择合适的鞋子鞋垫或者减压垫</strong></p><p>作为一名痴迷的篮球爱好者，我不知不觉把篮球鞋当成了通勤鞋，这可能也是诱发我足底筋膜炎的原因之一。因此，更换适合自己的鞋子和鞋垫非常重要，尤其在上班通勤时一定不要穿这类适用于运动场景的球鞋 ——&nbsp;因为篮球鞋包裹性强，且前后坡度落差大，并不适合日常走路。</p><p>其次，知晓自己平常走路的发力习惯也非常重要。比如我观察了自己的鞋垫，发现前脚掌内侧大拇指球的位置凹陷比较多，这能看出我脚掌这个部位的压力比较大，而这个位置刚好和我右脚足底筋膜炎的疼痛位置十分接近。建议有条件的朋友可以前往医院或者专业机构做一次足底检查。我自己没有在医院或机构做过，但上周末在耐克看到有测量仪器，就登记做了个足底检查，最终得到了一个针对自己脚型的结果。不过我觉得这个结果仅仅只能做参考，因为测量时我感觉没有对准。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/17/d55cf26ee5856ecb97fe94324c001cbf.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>足底检测</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/17/728b2c4c4e812d730e7075acc6dd025d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>足底检测</figcaption></figure><p>最后，选择合适的鞋垫或者配备脚底减压垫，能在一定程度上减少受伤部位的发力和疼痛。不过一般来说，定制鞋垫的价格非常昂贵，普遍在 800&nbsp;到 1200&nbsp;元左右。建议可以先试试针对自己脚型的普通矫正鞋垫是否有效，再考虑更贵的个人定制鞋垫。当然，减压垫也是一个选择，比如我这次就购买了前脚掌跖骨减压垫，使用时能大大减轻急性炎症期的疼痛；如果是脚后跟疼痛，那么可以选择脚后跟减压垫配合使用。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/17/f230f680619653f86337590abe05d02e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>足底减压垫</figcaption></figure><p><strong>4.药物治疗</strong></p><p>如果足底筋膜炎导致的疼痛比较严重，可能就需要使用抗炎药物了。比如我的前脚掌最初十来天一接触地面就会产生强烈的刺痛，这时候我就使用了医生开的非甾体类抗炎药物 ——&nbsp;氟比洛芬凝胶贴膏。当然也可以使用双氯芬酸二乙胺等抗炎镇痛类药物，比如扶他林软膏就是常用的止痛药物，这类药物也是大多数足底筋膜炎患者会使用的。不过使用各种药物的一切前提，还是得向医生咨询，请遵医嘱。</p><p><strong>5.放松足底</strong></p><p>放松足底的手段非常多，比如踩筋膜球、冰敷或热敷，还有到医院接受冲击波治疗，但哪种有效还因人而异。比如有人用足底筋膜球或网球放松足底能缓解疼痛，但也有人使用后反而加重了足底筋膜炎；冰敷和热敷也是需要注意的细节，因为有人在急性期过后用热敷没效果，医生建议用冰敷 ——&nbsp;比如我的医生就让我冰敷，但也有人说足底筋膜炎不能接触过冷的温度，可能会加重症状；甚至还有人用冷热交替泡脚逐步缓解，我尝试过这个方法，确实有效果，但不确定是不是因为筋膜炎本身已经要好转，刚好我用了这个手段。这个方法我后来也在一本书《护脚圣经》中看到，书中还提供了其他放松和拉伸足底的方法，但这些方法是否有效，每个人可能不太一样。在放松足底这件事上，需要大家自己去尝试，找到适合自己的放松方法。</p><h2>最后的总结</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 写完这篇文章的时候，已经是我确诊足底筋膜炎的第 26&nbsp;天了。目前情况逐步好转，基本走路时没有疼痛，除了偶尔走路过多或早上起床时会出现疼痛外，足底筋膜炎已基本不困扰我的生活。当然，偶尔晚上还是会有疼痛，这时候我会使用抗炎药物缓解。相比一个月前走路落地就疼的情况，现在已经大有好转。不过距离参加篮球、跑步等剧烈运动还需要一段时间，具体多久不好说，只能再过一阵子慢慢增加运动强度，观察脚底是否会有不适。最后希望所有足底筋膜炎患者早日康复。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>（注意：本文仅为个人康复经历的分享记录，不构成任何医学诊断或治疗建议。若您出现类似不适症状，请务必及时前往正规医疗机构就诊，遵循专业医生的指导。）</strong></p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101892</id>
            <title>Ulysses没法批量导出Markdown，于是我让AI写了个小工具</title>
            <link>https://sspai.com/post/101892</link>
            <guid isPermaLink="false">https://sspai.com/post/101892</guid>
            <pubDate></pubDate>
            <updated>Sun, 17 Aug 2025 07:38:18 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: AI编程,Ulysses,Markdown导出,TextBundle  
<br>  
<br>  
总结: 作者回忆自己作为程序员时没有AI工具的年代，现在利用AI编写脚本提高效率。重点描述了Ulysses导出Markdown文件的问题：批量导出会合并多篇文章为一个文件，手动导出又会导致图片链接失效。介绍了TextBundle格式作为解决方案，但仍需处理合并问题。最后分享了自己用AI编写的Python脚本，可将TextBundle文件按标题拆分为独立Markdown文件，并支持图片迁移。还提供了改进版脚本，将标题转换为front matter格式。 </div>
                        <hr>
                    
                    <p>作为一个曾经的（三流）码农，很庆幸那个年代尚无 AI 辅助编程工具，否则我应该是被 AI 取代掉的第一批。</p><p>虽然已经很多年没正儿八经碰过代码，不过今年我偶尔会让 AI 帮我写一些小工具（脚本）来实现一些小的功能想法，提高效率的同时还省钱——当然，99%的代码都是 AI 写的。</p><p>比如我做了几个快捷指令，并放在 macOS 状态栏上——就像 One Switch 做的那样——可以实现一键「隐藏桌面图标文件」、「生成二维码图」、「图片压缩」等小功能。</p><figure class="image ss-img-wrapper image_resized" style="width: 420px;"><img src="https://cdnfile.sspai.com/2025/08/17/e2f9c0dd8a7e2443fcd7ca305e64efcc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 10px;">我还利用「自动操作」配合 Shell 脚本制作了「一键视频瘦身」的小功能，任何软件都不用打开。</p><figure class="image ss-img-wrapper image_resized" style="width: 360px;"><img src="https://cdnfile.sspai.com/2025/08/17/323aa3ccca3825a3c4773b6826d9a22b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 10px;">今天我想分享一个 AI 帮我实现的小功能跟 Ulysses 有关系。</p><p style="margin-left: 10px;">Ulysses 是我用了多年的 Markdown 写作工具，各方面体验都近乎完美。为数不多让我想吐槽的地方之一，就是它保存的文章不是标准的 Markdown，而是一种或许只有它们自己能看懂的文件组织和格式。</p><figure class="image ss-img-wrapper image_resized" style="width: 318px;"><img src="https://cdnfile.sspai.com/2025/08/17/e94af15843df372372581020d38c709c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Ulysses 的本地备份库</figcaption></figure><p>好在 Ulysses 支持丰富的导出功能，比如你可以把一篇文章用 Ulysses 导出为 .txt 纯文本、.rtfd 富文本、HDML 网页、ePUB 电子书、PDF、docx，当然也包括 Markdown。</p><p>不过如果你想要一次批量导出多篇文章，就没那么好受了，不管是导出为纯文本、富文本还是 Markdown，<strong>Ulysses 都会把你的多篇文章合并成一个文件</strong>。</p><p>比如我选择 80 篇文章，并导出为 Markdown，我们会得到如下文件结构的文件：</p><pre class="language-null"><code>/
  ├── index.md
  ├── image1.jpg
  └── image2.jpg
  └── ...</code></pre><p>我的 80 篇文章都被合并成一个叫 <i>index.md</i> 的 Markdown 文件，这肯定不是我想要的，我希望每一篇文章都是单独的一个 Markdown。</p><p>那试试不用 Ulysses 提供的导出，而自己手动导出呢？下面是我派作者 <a href="https://sspai.com/post/52195" target="_blank">Vanilla 分享的手工方法</a>。</p><ol><li>在 Ulysses 软件设置「边栏」里勾选「外部文件夹」</li><li>在 Ulysses 外部文件夹新建任意名的文件夹</li><li>把 Ulysses 的多篇文章拖到新建的文件夹，即会保存成独立的 Markdown 文件</li></ol><p>这种方式也不完美，因为图片并不会拷贝过去，导致保存的 Markdown 文章内图片链接失效。</p><p>细心如我会发现，Ulysses 还可以导出一种叫 TextBundle 的文件格式。</p><figure class="image ss-img-wrapper image_resized" style="width: 336px;"><img src="https://cdnfile.sspai.com/2025/08/17/fa3d866dc94be219456e908d45f811b2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Ulysses可以选择导出TextBundle</figcaption></figure><p>我跟大家一样对 TextBundle 这种文件格式不是很眼熟，这不怪咱们，因为它并不是一种标准的文件格式，而是由 Ulysses 的开发团队和其他一些 Markdown 编辑器开发者（比如 iA Writer、Bear）一起制定的格式方案，目的就是解决 Markdown 文件传播时内嵌资源（比如图片）丢失的问题。</p><p>TextBundle 文件本质上就是一个压缩打包。用 Ulysses 导出文章合集的 <i>.textbundle</i> 文件的默认目录结构如下：</p><pre class="language-null"><code>xxx.textbundle

 ├── text.md

 ├── info.json

 └── assets/

       ├── image1.jpg

       ├── image2.png

       ├── ...</code></pre><p>Ulysses 仍会把多篇文章合并成一个 Markdown（这里是 <i>text.md</i>），<i>assets</i> 目录下是文章内的所有配图。</p><figure class="image ss-img-wrapper image_resized" style="width: 180px;"><img src="https://cdnfile.sspai.com/2025/08/17/445eed638c52377abc072b17bb12ebe2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>打开 text.md 里大概是这样的</figcaption></figure><p>我找遍全网都没有能完美实现我想要的导出方案。好吧，那就自己动手写个脚本，把 <i>text.md</i> 按照一级标题 # 拆分成多篇 Markdown 文件，并把一级标题作为文件名。</p><p>脚本我可不会写，不过有 AI，这都不算事儿。ChatGPT 建议我用 Python 搞。它按照我的需求想法写了一段 Python 代码，并保存为 <i>split_textbundle.py</i> 这个文件。你可以在<a href="https://github.com/huangyangme/split-textbundle" target="_blank">我的 GitHub 项目</a>下载或直接复制代码。</p><p>只需要把 Ulysses 导出的 <i>xxx.textbundle</i> 和 AI 写的 <i>split_textbundle.py</i> 这两个文件放在同一个文件夹（比如名叫 <i>split_output</i>）内，然后执行这个 Python 就搞定了。</p><figure class="image ss-img-wrapper image_resized" style="width: 260px;"><img src="https://cdnfile.sspai.com/2025/08/17/5557a3037801f229cf5dfbabafafca8a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>从没有接触过编程的朋友可以这样运行 Python 文件。打开终端，输入 <code>cd</code> 后面加一个空格，再把文件夹拖拽进终端窗口，然后回车，粘贴 <code>python3 split_textbundle.py</code> 这行代码并回车，就 OK 了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/17/579f34b2877b48332b5c9a2c4c3fa997.gif" /></figure><p>程序会自动生成一个叫 <i>split_output</i> 的文件夹，里面包含每篇文章的 Markdown 文件，以及包含所有图片的 <i>assets</i> 文件夹。</p><figure class="image ss-img-wrapper image_resized" style="width: 382px;"><img src="https://cdnfile.sspai.com/2025/08/17/9e55697be985f300e5382bfbffb8b6f2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>现在我们可以把 <i>split_output</i> 文件夹里的所有文件——包括 Markdown 文章和保存在 assets 里的图片——备份到别的地方，或者迁移到 Typora、Obsidian 等你喜欢用的其他 Markdown 编辑写作工具中。</p><p>我还做了一个改进版（项目里的 <i>split_textbundle_frontmatter.py</i>），每篇文章的 Markdown 内不以一级标题 # 作为文章的标题，而是添加 front matter 的 Title 字段，并把一级标题作为 Title 的值。</p><p>文章标题会从：</p><pre class="language-markdown"><code># 这是文章标题</code></pre><p>变成：</p><pre class="language-markdown"><code>---

title: "这是文章标题"

---</code></pre><p>就这样吧。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101861</id>
            <title>Lorqa - 一款本地AI原生的翻译macOS App</title>
            <link>https://sspai.com/post/101861</link>
            <guid isPermaLink="false">https://sspai.com/post/101861</guid>
            <pubDate></pubDate>
            <updated>Fri, 15 Aug 2025 13:28:27 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Lorqa, AI翻译, 本地运行, 隐私保护

<br>
<br>
总结: Lorqa是一款macOS端的本地AI翻译应用，使用LLM在设备上离线运行，支持Qwen3和Gemma3等模型，确保数据隐私。其核心功能包括智能切片处理长文本、简洁界面和快速翻译速度。开发者基于对LLM的了解，优化了翻译体验，速度超过DeepL。用户需手动设置快捷键，应用适合注重隐私和离线使用的场景。 </div>
                        <hr>
                    
                    <h2>&nbsp;</h2><p><a href="https://apps.apple.com/us/app/lorqa-local-ai-translator/id6749881415"><strong>Lorqa</strong></a><strong> 是一款适用于 macOS 的AI原生端到端AI翻译应用。</strong></p><p>它使用LLM(大型语言模型)在你的设备上本地运行，将不同语言之间的文字准确而自然地翻译出来。无需网络，也无需担心隐私被泄漏，一切都在你的电脑中完成。</p><figure class="image ss-img-wrapper"><img alt="Lorqa Preview" src="https://cdnfile.sspai.com/2025/08/15/article/d6eb0d5f28c87d495b847fa6946bfbb0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><a href="https://apps.apple.com/us/app/lorqa-local-ai-translator/id6749881415">App Store下载</a></p><p><strong>核心功能</strong>：</p><p>本地运行 LLM，支持Qwen3,Gemma3,后续会继续增加</p><p>离线可用，无网环境下依然工作</p><p>数据仅存于本地，保护你的内容安全和隐私安全</p><p>智能切片技术，支持长文本翻译，再也不用担心字数限制的问题</p><p>简洁界面，专注端到端的翻译体验</p> <p><strong>心路历程</strong></p><p>翻译是一个很大众的需求，市面上各种各样的翻译软件层出不穷。有很多大厂出手参与此类应用竞争，可以说有很多翻译的解决方案。 过去很长一段时间我日常使用的是DeepL应用版的翻译App,很方便只要选中文本快捷键即可完成内容的翻译，在使用过程中也有一些小的可以吐槽的点，例如：我发现DeepL的翻译速度不如网页版的一些翻译软件速度快，另外翻译的文本数量会收到一些限制，一些长文本还是得通过其他方法。</p><p>我发现现在LLM(文本语言模型)也常作为翻译工具来使用，LLM有良好的多语言能力，现在Qwen3，Gemma3，这类小模型也具备很好的翻译能力。在使用LLM翻译的时候有很多的选择，大多数是网页版，也有一部分是本地部署的模型。这些产品通常没有为翻译场景打造出端到端的翻译体验，总是差点意思。</p><p>我过去做过PocketLM（移动端的LLM本地推理客户端），对于小LLM的能力水平有一定的了解，并且对于模型不同设备的推理速度和载入速度也很熟悉。于是我开始着手使用Apple生态结合LLM打造这个端到端的翻译macOS App, 整个实现过程也相当顺利，经过测试我发现Qwen3 0.6B 4bit的效果已经和DeepL的翻译能力不相上下，我还同时增加了Qwen3 1.7B ，Gemma3系列模型作为备选为用户提供多重选择。</p><p>Lorqa在第一次打开的时候需要选择模型完成下载流程，此后只需要每次载入一次模型即可随时翻译。我在我的机器测试Qwen3 0.6B的推理速度为 280Token/S 速度比DeepL要快。此外针对长文本，会进行切片翻译并合并一起解决了文本字数的限制。 目前因为App Store分发涉及到应用沙盒，快捷键需要用户在 系统设置/隐私与安全/辅助功能/ + （从应用程序选择Lorqa） 自行设置，方可使用快捷键翻译功能。</p><p>我制作这个产品的动机非常个人化。我比较关注这个需求是否有其他人真实存在。关于后续的规划也想听听其他人的反馈～</p><p><strong>配置快捷键和快速翻译教程</strong></p><video class="ss-videoSource video-js" controls="" poster="https://rsshub.dcts.top/sspai/matrix" title="" type="video/mp4"><source src="https://h1.appinn.me/file/1755240079619_%E5%BF%AB%E6%8D%B7%E9%94%AE%E8%AE%BE%E7%BD%AE%E5%B9%B6%E4%B8%94%E4%BD%BF%E7%94%A8.mov" type="video/mp4" /></video>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101855</id>
            <title>如何让 AI 绘图中文呈现更稳定和准确？</title>
            <link>https://sspai.com/post/101855</link>
            <guid isPermaLink="false">https://sspai.com/post/101855</guid>
            <pubDate></pubDate>
            <updated>Fri, 15 Aug 2025 09:29:21 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: AI绘图, 汉字生成, 通义千问, 古诗词意境  
<br>  
<br>  
总结: 文章探讨了AI绘图工具在生成汉字方面的进步与局限。早期AI生成的汉字难以辨认，如同西夏文，而GPT-4o的出现改善了这一问题，但仍需“抽卡”运气。作者发现通义千问的Qwen-Image模型能更稳定地生成包含中文的图片，尤其是古诗词意境图。通过结合ChatGPT生成详细场景描述，再输入通义千问并指定诗句，可生成图文并茂的作品。文章以《归自沙丘后》和《左迁至蓝关示侄孙湘》为例，展示了该方法的效果。此外，作者还尝试将流行歌曲《大展宏图》转化为画面，验证了AI对中文内容的理解与呈现能力。最后，作者鼓励读者尝试这一方法并分享作品。 </div>
                        <hr>
                    
                    <p style="margin-left: 0;"><code>还在愁 AI 经常画不出能看的汉字吗？最近我发现了一个新工具，效果非常惊艳。</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/1ccb26c1b622fd234af23bd61bf64cb8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2><code><strong>痛点</strong></code></h2><p style="margin-left: 0;"><code>在很长一段时间里，我用 AI 画画时都不敢在里面放汉字。一旦汉字出现，你立即就能判断这是 AI 画的 —— 那画出来的字简直如同西夏文一般。看着挺眼熟，却完全无法解读出任何意思。在当时，汉字几乎和人物手指数量一样，成为了判别 AI 绘图的「金标准」。</code></p><p style="margin-left: 0;"><code>直到 GPT-4o 出现，我们才真正发现中文可以在 AI 绘图中正常生成。尤其是那种画出来跟手写涂鸦卡片一样的东西，又有图片又有文字，给人的感觉就是手绘的。每次我给大家展示并告诉他们这是一行提示词生成的，他们都非常惊讶。</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/a6b14e5f8f8a5c44b3c57779aa935cc3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>只不过，你要是以为这个功能每次都能成功，稳定性强，那就错了。GPT-4o 里面绘制中文，需要「抽卡」，也就是碰运气。而且，抽中的概率还真不算高。</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/295fd1834007337c238f1df88268f461.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>例如上面这张图里，你一眼就发现了吧？「蛔虫」写成了「蛙虫」，「背景」被写成了「青景」。</code></p><p style="margin-left: 0;"><code>再来看一个更典型的失败案例。</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/f841dc1fc8a2359e8a574cfdc92d43fc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>这张图你能猜出我想表达什么吗？其实我让它写的文字内容是「人工智能是你的帮手，不该成为你的枪手」。</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/a61773fd9f90aa64432730e14a2d381e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>这已经是抽卡很多次中比较好的一个了。你看下面这张，根本不认识的汉字又出现了：</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/5339385ac29d547a05bd83684c002b0e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>唉。</code></p><h2><code><strong>探索</strong></code></h2><p style="margin-left: 0;"><code>有时候，我更希望在图里表现出古诗词的意境。</code></p><p style="margin-left: 0;"><code>比如我在《得到》上听熊逸老师讲《资治通鉴》，对下面这首诗感触特别深，所以要求 AI 给我画出来。</code></p><p style="margin-left: 0;"><code>我输入：</code></p><blockquote><p style="margin-left: 0px;"><code>用中国国画，展现这首诗：归自沙丘后，因专定策功。国由中府令，帝在望夷宫</code></p></blockquote><p style="margin-left: 0;"><code>这是 GPT-4o 给我呈现的结果：</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/9761e3a1cf9e91a9b4fa0e884ecf6007.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>乍看上去，还真像那么回事。但如果你仔细看，会发现那首诗已经被改得不像样子：</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/2e994f23d40f748c772924555be3ef17.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>所以现在我在图画里加汉字，一般都属于迫不得已的情况。大部分时间，谁也不愿意去露怯。</code></p><h2><code><strong>突破</strong></code></h2><p style="margin-left: 0;"><code>现在， AI 可以把同样一首诗词表现成这个样子：</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/98e88c40616675ab6407af9b1e335193.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>我把这幅图发在知识星球里，星友们特别惊喜，想听我讲讲如何绘制：</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/f1c3b648a6d41c06c33cc6b1dc591f69.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>今天这篇文章，咱们就来谈谈如何用 AI 呈现古诗词 —— 不仅有意境，也有诗词本身。最终，画成你现在看到的这个样子。</code></p><h2><code><strong>方法</strong></code></h2><p style="margin-left: 0;"><code>绘制的第一步在 ChatGPT 中进行。我们需要让 ChatGPT 告诉我们该以什么样的提示词来描述古诗词，越细致越好。</code></p><p style="margin-left: 0;"><code>我的提示词是：「帮我用一段话，细致描写出下面这首诗：归自沙丘后，因专定策功。国由中府令，帝在望夷宫。画面感十足，可以有分镜」</code></p><p style="margin-left: 0;"><code>这是 ChatGPT （GPT-5） 给出的结果：</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/db5d778be5685604940f25a80a0a35f9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>然后你打开 </code><a href="https://chat.qwen.ai/"><code><strong>通义千问</strong></code></a><code> 的对话界面，选择 Image Generation 图片生成：</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/29af39e7dee3e8de1914987c9ee98a8b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>没错，咱们这篇文章介绍的新绘图模型，就是通义千问的 Qwen-Image。</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/48c9d0d0327e0e4db072fc22e99f7190.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>感兴趣的话，你可以 </code><a href="https://arxiv.org/pdf/2508.02324"><code><strong>读它的技术报告</strong></code></a><code>。但是闲言少叙，咱们还是专注于它的用法和效果。</code></p><p style="margin-left: 0;"><code>注意，刚才我们从 ChatGPT 获得的提示词描述了场景，但却没有加上这首诗本身。所以我的提示词整体是这样：</code></p><p style="margin-left: 0;"><code>「选择合适的风格，描绘下面意境："在苍白预示不祥的天空下，荒凉沙丘尽头停着载着秦始皇秘密驾崩的庄严马车，疲惫的士兵与官员神情阴沉、满是焦虑；画面转入富丽却紧张的中府，宦官赵高手持诏书，狡猾而威严地掌控权力，群臣卑躬屈膝；再转至望夷宫，秦二世孤立无援、神情绝望，身边仅有惊恐的侍从，命运将尽。整体以泥土灰黄、帝王黄与深蓝紫色交织，融入破碎玉器、散落卷轴等细节，表现权力斗争、阴谋与帝国衰落的悲剧感。"。注意，在图上配以下诗句，草书 "归自沙丘后，因专定策功。国由中府令，帝在望夷宫"。」</code></p><p style="margin-left: 0;"><code>注意其中「选择合适的风格，描绘下面意境」这句话很重要。毕竟在绘画艺术上，AI 比我懂得多得多。</code></p><p style="margin-left: 0;"><code>接着，我们把做好的提示词输入进去：</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/special/314/pic_404.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>你可以选择图片的比例。里面有若干选项，默认是 1:1，但我一般更喜欢选择 16:9，因为适合作为封面或者插图。</code></p><p style="margin-left: 0;"><code>很快，千问就绘制出来了：</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/410a6558d3fc2cdf9ca0ea32e2ebec35.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>再次放大一下。</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/3eb502dce0e29c82c79dbfeaf362cd0c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2><code><strong>实践</strong></code></h2><p style="margin-left: 0;"><code>咱们再试一首韩愈的《左迁至蓝关示侄孙湘》：</code></p><p style="margin-left: 0;"><code>「一封朝奏九重天，夕贬潮州路八千。欲为圣明除弊事，肯将衰朽惜残年！云横秦岭家何在？雪拥蓝关马不前。知汝远来应有意，好收吾骨瘴江边。」</code></p><p style="margin-left: 0;"><code>还是先让 ChatGPT 把整个场景描述出来：</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/649c378a0ad73ac3035a9b4513184bbb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>然后构造给千问的提示词就变成了：</code></p><p style="margin-left: 0;"><code>「选择合适的风格，描绘下面用户输入的意境："清晨，朝阳微露，韩愈的奏折被飞骑急递入层层宫门，直达九重天的皇城深处；殿阁内金碧辉煌，文武百官肃立，气息凝重。转场至黄昏，他却被命贬南荒，潮州在八千里外 —— 檐下细雨，驿馆的封驮文书冰冷如铁。镜头一闪，他曾满怀抱负，欲为圣君拨除积弊，不惜燃尽衰年残力，如今却只剩孤身马前。画面切入秦岭深处，厚重的云雾横亘山脊，将归家的方向吞没；雪花翻涌，压满蓝关的狭道，战马嘶鸣却寸步难行。远处，一位风尘仆仆的侄孙策马而来，神情焦急。韩愈望向他，眼中透出沉静与决绝 —— 像是在嘱托，也像在告别：" 若我客死瘴江，便请收殓我的骸骨。""。注意，在图上配以下诗句，草书" 一封朝奏九重天，夕贬潮州路八千。"」</code></p><p style="margin-left: 0;"><code>将其输入到通义千问当中，别忘了选择图片生成：</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/c8af8f4a2f9bae0a65d00e99afc35238.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>这是生成的结果：</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/9cbabcc57b8d512f92fac961e5e81ba1.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>你感觉怎么样？</code></p><h2><code><strong>玩法</strong></code></h2><p style="margin-left: 0;"><code>试完了正经的艺术创作，咱们下面玩点有趣的 —— 把流行歌曲画成画，并且测试把其中的中文正常地体现。我选择的是最近比较火的那首《大展宏图》。</code></p><p style="margin-left: 0;"><code>先在 ChatGPT 中描述场景：</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/c0ec095c464f7bcb6ff202f1a2c96729.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/3d33ff62799d881343ebdec30fff4df6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>你或许感到奇怪，为什么输入的提示词标点符号都不对？那是因为我用语音输入的。这或许可以称为 "Vibe Prompting" （氛围提示）吧？哈哈。</code></p><p style="margin-left: 0;"><code>咱们的提示词也就有了：</code></p><p style="margin-left: 0;"><code>「一推开豪华别墅大门，映入眼帘的是水池中那尾金光闪闪的银龙鱼，悠游间泛出富贵象征；客厅背景里，一幅气势磅礴的墨宝四字 "大展鸿图" 赫然入目，仿佛昭示着一番雄心壮志；一旁关公像庄严点头，似在默默护佑财运；嘉宾高声唱起 KTV，喇叭里响起那一句 "别墅里面唱 K，水池里面银龙鱼"，节奏明快、直白又朗朗上口。空间里，富丽堂皇与市井香气交织，声音与画面合成一幅 "暴发户式" 豪华日常，让人立马 "听见" 那首曲子的魔性韵律。」</code></p><p style="margin-left: 0;"><code>到 </code><a href="https://chat.qwen.ai/c/4e29725a-330a-4d6f-9896-f607abe8c103"><code><strong>千问</strong></code></a><code> 里面，把我们刚才从 ChatGPT 当中获得的提示词贴进去，回车执行即可：</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/d21eb60bf81bf548aae0663ae50101d6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>通义千问立刻给出了绘制结果。</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/73be3d802142ccc0cd8f1e2705fd2958.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>咱们放大一下，看一看。</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/3122a4718df9e40eb84c5e0324880f47.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>我觉得元素很全面。但这幅图是否已经包含了歌词当中的全部信息，还需要验证一下。</code></p><h2><code><strong>验证</strong></code></h2><p style="margin-left: 0;"><code>验证工作嘛，交给 GPT-5 好了。</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/50d76550779fdde2057727d8027d20c5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>我使用了自动路由模式（即让 AI 自动选择最合适的模型来执行任务），所以非常快就得到了结果：</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/ff95382d84fbbff5077207a8dd48644a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>从 GPT-5 的描述来看，画作已经包含了歌曲中的核心元素。</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/08/15/article/a54c7ffa5dcc80e6bdc1de59968d7d52.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0;"><code>GPT-5 对文化符号、色彩冲击等方面的解读，也印证了画作已充分传达出歌曲的内涵。</code></p><h2><code><strong>小结</strong></code></h2><p style="margin-left: 0;"><code>通过 ChatGPT 和通义千问的配合，你也可以让 AI 在图画里正常地输出中文了。关键在于先用 ChatGPT 生成详细的场景描述，再到千问中加上诗句或文字要求进行绘制。虽然可能还需要一些「抽卡」运气，但相比之前的「西夏文」时代，AI 绘图中包括汉字的能力已经前进了一大步。</code></p><p style="margin-left: 0;"><code>如果你也希望绘制这样的图画，马上动手试试看吧。期待你的反馈，也更欢迎你在留言区展现自己的作品哦。</code></p><p style="margin-left: 0;"><code>如果你觉得本文有用，请<strong>充电</strong>。</code></p><p style="margin-left: 0;"><code>如果本文可能对你的朋友有帮助，请<strong>转发</strong>给他们。</code></p><p style="margin-left: 0;"><code>欢迎<strong>关注</strong></code><a href="https://sspai.com/column/245"><code><strong>我的专栏「科研利器」</strong></code></a><code>，以便及时收到后续的更新内容。</code></p><p style="margin-left: 0;"><a href="https://sspai.com/prime/subscription?referral=314606736"><code><strong>点击这个链接加入少数派会员</strong></code></a><code>，立享 9 折优惠！获得专属会员内容、会员播客以及会员定制周边。在更多的领域和方向帮你打开脑洞，找到新的兴趣点。与少数派一起洞悉当下，探索新知。</code></p><h2><code><strong>延伸阅读</strong></code></h2><ul><li><a href="https://mp.weixin.qq.com/s/kdb4BYGA66lhEciumoJYTA"><code><strong>AI 工作流长文写作能力重大改进，欢迎你来试试看</strong></code></a></li><li><a href="https://sspai.com/post/76362"><code><strong>未来的写作长啥样？LEX 用 GPT-3 AI 给你点儿颜色看看</strong></code></a></li><li><a href="https://sspai.com/post/77081"><code><strong>AI 真要成精了？ChatGPT 上手体验</strong></code></a></li><li><a href="https://sspai.com/post/89264"><code><strong>开源免费 AI 朗读中文，居然也能以假乱真了？</strong></code></a></li><li><a href="https://sspai.com/post/81470"><code><strong>如何让 ChatGPT 更懂你？新功能 Custom Instructions 尝试</strong></code></a></li></ul>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101678</id>
            <title>带爸妈旅游时半小时开发的 App 获得了 22 万围观</title>
            <link>https://sspai.com/post/101678</link>
            <guid isPermaLink="false">https://sspai.com/post/101678</guid>
            <pubDate></pubDate>
            <updated>Fri, 15 Aug 2025 03:00:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 汇率转换,旅行工具,用户需求,产品设计  

总结: 文章讲述了作者在泰国旅行时发现父母对泰铢价格换算的需求，进而开发了一款专注于泰铢与人民币快速转换的小工具。作者观察到市面上的汇率工具过于复杂，而父母只需要简单直观的换算功能。通过开发一个简洁、快速、直观的小工具，作者解决了用户在旅行中的实际需求，并在社交媒体上获得了广泛关注。文章强调了产品设计应聚焦特定场景和用户需求，而非功能堆砌，同时分享了从身边问题出发、专注特定场景和心智占位等产品开发启示。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;</p><p style="margin-left: 0px;">文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><p>前几天我带着父母去泰国旅行（好不容易说服他们），让我没想到的时无意中观察和收获了一款爆款小工具的灵感。</p><p>在清迈的夜市闲逛时，父母看着琳琅满目的商品和陌生的标价，既好奇又困惑。他们不停地问我：</p><blockquote><p>「这个 65 铢相当于多少人民币啊？」</p><p>「一份快餐 129 铢，这个贵不贵？」</p><p>「我们一家人吃饭花了 1000 铢，在国内是什么水平？」</p></blockquote><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/07/article/6eafdf87ea053c00af18f8c3d78af131.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>清迈市场上的物品标价</figcaption></figure><p>被他们问的多了，我意识到这些问题看似简单，却反映出了一种潜意识的需求：我们很难快速将陌生的外币价格，与国内熟悉的价格体系建立联系，从而无法理解货品的实际价值。</p><h2>发现了一个需求</h2><p>我第一反应是给父母安装了市面上常见的汇率转换工具，但很快发现他们用不习惯。</p><p>我观察后才明白，市面上的汇率工具，大多想做成一个支持全球上百个国家货币的「大而全」产品。它们功能强大而专业，界面看起来很「科技」也很「金融」，但对于我父母来说，操作太繁琐了。</p><p>而父母的需求其实很纯粹：他们只想以国内熟悉的价格为参照，了解泰国商品的价值。有时候是为了购买决策，有时候只是出于好奇，想了解不同国家的物价水平。但是这些「汇率转换」工具并不适合他们——当然我也不知道汇率转换工具是给哪些人用的，也许，外贸从业者？</p><h2>vibe coding：酒店里的即兴创作</h2><p>晚上回到酒店，看着父母讨论着白天的物价，我冒出一个念头：为什么不为他们做一个专属的小工具呢？</p><p>我分析父母需求后的要求很明确：</p><ul><li><strong>绝对简洁</strong>：只做泰铢到人民币的单向转换。</li><li><strong>绝对快</strong>：最好不用打开 App，直接在桌面上就能按。</li><li><strong>绝对直观</strong>：要让他们一眼就明白换算后的价值。</li></ul><p>作为并不会编程的古典产品经理，在 CodeBuddy 的帮助下（是的，前天我在 AppSo 看到介绍这个 AI 编程工具，申请了试用，这天正好收到邀请码），30 分钟我就快速开发了一个最简单的原型——一个能够放在手机桌面上的小组件，专注于泰铢到人民币的快速转换。在在换算后的人民币金额后面，增加一个有趣的备注，告诉他们这个价格「约等于国内一杯瑞幸咖啡」或者「相当于一瓶可乐」。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/13/4fafffa3bf5eb7e82936baae243a30a5.gif" /><figcaption>↑30分钟实现的Demo</figcaption></figure><p>这个备注功能是我的小心思——父母这一代人很节俭，即使出国旅行也不舍得花钱。当一个 65 泰铢（约 13 元人民币）的纪念品，被标注为「约等于一杯瑞幸」时，他们便有了一个清晰的参照系，更容易做出消费决策，也更能享受旅行的乐趣。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/07/article/e7e9dcce527556e2da0ede3b0280ee72.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>用 CodeBuddy 来 vibe coding</figcaption></figure><h2>意外的成功：从家用工具到爆款应用</h2><p>让我惊喜的是，当我把这个小工具装到他们手机上后，他们几乎没有任何学习成本，立刻就开始用起来，每天逛街时拿着手机对着各种商品标价「按按按」，逛得不亦乐乎。</p><p>这给了我继续改进的信心。接下来的两天，我形成了一个有趣的节奏：上午陪父母游览景点、逛街购物，下午他们午休时，我就在酒店或游泳池边继续完善这个小工具。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/07/article/96e2f206323879e952889f93462c452b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>&nbsp;</p><p>两天后，我将在小红书上展示了这个 demo。出乎意料的是，不到 48 小时，这个帖子就获得了 20 万的阅读量、2 万的点赞和上万的收藏。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/07/article/84e01da74f4fdca9a1cf5986ce959c88.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>小红书的漂亮数据</figcaption></figure><h2>给独立开发者的启示</h2><p>在小红书上，也有很多不同声音，特别多人留言说：「我用系统计算器也能算汇率！」，也有人说：「iOS 下划，直接输入 180 泰铢，就会自动转换」——是的，他们说的都对，但他们看到的是「汇率转换」问题，而我想解决的是「让中国游客在泰国购物时，对价格快速心中有数」这个更小场景的问题。他们看起来像是同一类问题，但事实上是两个有差异的需求。</p><p>同样在即刻社区也有人问我：</p><blockquote><p>我自己开发了一个全世界 170 多种的货币互换网站。但是也没感觉到有什么流量的？App 就有流量了吗？</p></blockquote><p>我想了想，回答说：</p><blockquote><p>功能不等于产品，谁需要一个 170 种货币相互转换的功能呢？我猜肯定有人需要，但是游客肯定不需要。</p><p>产品是基于场景的需求洞察，来解决特定人群在特定情境下的特定问题的。功能仅仅是问题求解的一种技术支持，强大的功能不等于强大的产品。有时候甚至相反。</p></blockquote><p>小红书的留言里，我看到成千上百的人在 @ 他的朋友，在收藏，在点赞，为什么呢？我想，《价格翻译官》的意义在于它理解了一个看似「没啥用」却普遍存在的潜在问题：<strong>在出国旅行时，人们对陌生货币价格会下意识地想与自己熟悉的货币价格比比价</strong>——这与是否打算购买无关，也与是否节俭无关，只是一个直觉化的潜意识的需求。在用户没有意识到它的存在时，它默默存在于用户的心智中，成为旅行中不可或缺的一部分。</p><p>好的产品一定不是功能的堆砌，而是对特定场景的洞察，对用户潜意识需求的理解。</p><p>那么，《价格翻译官》满足了用户的哪些具体需求呢？</p><ol><li><strong>降低认知负担</strong>：旅行中，人们已经面临语言、环境等多重挑战，一个简单直观的价格转换工具能显著减轻认知负担</li><li><strong>情感连接</strong>：通过熟悉的国内价格参照，建立了用户与陌生货币之间的情感连接</li><li><strong>决策辅助</strong>：帮助用户快速判断价格是否合理，是否值得购买</li></ol><p>这次经历给我的最大启示是：</p><ol><li><strong>从身边的问题出发</strong>：最好的产品灵感往往来自于身边人/自己的真实需求，如果我们在做自己和家人不用的产品，你的观察会艰难得多</li><li><strong>聚焦特定场景</strong>：不要试图做一个万能的工具，而是专注解决特定场景下的具体问题</li><li><strong>心智占位</strong>：让「来泰国旅游的人都觉得自己需要这么一个小工具」比堆砌功能更重要</li></ol><h2>结语：小小的创造让旅行更美好</h2><p>泰国，特别是清迈，是一个非常适合带父母旅行的地方。凉爽的气候、友善的人们、合理的消费，会让父母玩得开心。</p><p>而《价格翻译官》这样的小工具，希望能让人们的旅行变得更加轻松愉快，也能帮助人们更好理解和享受异国生活的体验。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/07/article/d2b1cc9293786ddf951e6e923a13f389.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>父母喜欢逛 JJ Market</figcaption></figure><p>如果你近期计划去泰国旅行，不妨试试这个小工具，它可能会成为你旅途中的得力助手。</p><h2>下载方式</h2><p>之前我自己做的 demo 只能通过 apk 给朋友安装。回国后在朋友的帮助下，将 demo 正式产品化，现在《价格翻译官》已在 App Store 和 Google Play 上架，欢迎下载使用。</p><span class="ss-application">&nbsp;</span><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/13/8ee15be6baf3e0f372e2ca1f7c9cb658.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>长按识别二维码也可以下载</figcaption></figure><hr /><p style="margin-left: 0px;"><strong>有奖评论 [已结束]</strong></p><p style="margin-left: 0px;">你平时都是通过什么方式计算汇率的？你心目中好的汇率换算工具应该有什么功能？请在评论区和我们分享你的看法，我们会在 8 月 18 日（周一）选出 8 位读者，各送出《价格翻译官》的 iOS 兑换码一枚。</p><p style="margin-left: 0px;">祝贺以下用户获奖：(i) <a class="ss-atUser" href="https://sspai.com/u/xe2f94d2">@CharlieLau</a>、(ii) <a class="ss-atUser" href="https://sspai.com/u/frbsiq2i">@少数派37606071</a>、(iii) <a class="ss-atUser" href="https://sspai.com/u/rxb1988">@任大喵</a>、(iv) <a class="ss-atUser" href="https://sspai.com/u/g56gndqs">@Zeroneyang</a>、(v) <a class="ss-atUser" href="https://sspai.com/u/cje8w4v6">@Ala</a>、(vi) <a class="ss-atUser" href="https://sspai.com/u/YellowColor">@YellowColr</a>、(vii) <a class="ss-atUser" href="https://sspai.com/u/techdaniel">@Daniel0829</a>，及 (viii) <a class="ss-atUser" href="https://sspai.com/u/y6u9ls1e">@ZLNAEEZD</a>；请通过私信查看兑换码和使用方式。</p><hr /><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101814</id>
            <title>语音转文字正在改变我们的生活——兼简要横评语音转文字笔记软件</title>
            <link>https://sspai.com/post/101814</link>
            <guid isPermaLink="false">https://sspai.com/post/101814</guid>
            <pubDate></pubDate>
            <updated>Fri, 15 Aug 2025 01:27:22 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Whisper模型,语音转文字,写作流程,AI技术  

总结: 本文探讨了语音转文字技术对写作流程和思维方式的影响。作者比较了键盘输入和语音输入的不同思维模式，前者是异步、非线性的"建筑"过程，后者是同步、线性的"河流"模式。语音输入提高了写作效率但增加了编辑负担，同时使文字更口语化。该技术还改变了人际沟通方式和工作范式，既降低了创作门槛，也可能加剧语言不平等。最后，作者评测了多款语音转文字软件的特点和适用场景。 </div>
                        <hr>
                    
                    <p>自从 Whisper 模型出现以来，语音转文字就成了我的写作流程中非常重要的一环，之前也写过一些<a href="https://sspai.com/post/79775">文章</a>分享了 AI 语音转文字的一些用法。而随着越来越多人开始使用语音转文字、越来越多相关的软件出现，这一「便捷」的输入方式也为越来越多人所熟知。在以前文章中也提到过，人工智能可能对人类社会生活方式造成许多改变，包括日常创作、人际交往乃至工作方式都迎来了诸多变化。最近我发现，这些变化已切实地体现在我身上。</p><h2>近期写作上的一些变化</h2><p>以前写文章的时候，我通常是有想法就直接用手机打开 Flomo 记录灵感，有空时在就随便找个咖啡店、或者在高铁、飞机上用iPad上打字成文。但最近在记录灵感时，我越来越多地通过语音来记录了，而使用语音时，出于「语音尴尬症」等原因，下意识地会避免利用一些在公共场合的零散时间进行片段的输入。更多是希望能找到一个相对空闲的时间、相对独立的地点，用语音来完成整体草稿的撰写。</p><p>这其实和我一开始想的「语音有利于片段化的输入」这一想法出现了很大的区别，也引发了进一步的思索——语音输入和键盘输入的区别到底有哪些，而语音输入对我们又会产生什么样的影响。</p><h2>语音输入 vs. 键盘输入</h2><h3>思维模式</h3><p>如果用一个简单的比喻来描述什么是键盘输入和语音输入，以及他们之间的区别，文字输入其实有点像我们是在一块砖一块砖地来「建一座房子」。在这个过程中，我们可以随时停下来审核结构，发现不满意的地方就拿掉，然后重新垒上，同时，我们可以交替着在多个地方开始垒墙。这个整个过程是<strong>异步、非线性</strong>的过程。在这个过程中，我们会经常需要做修改、拼接等等。经常写作的人也会有这种感受，我们会对每一个句子、每一个段落、每一个词进行琢磨，当我们写完一句话时会回头看看，删掉几个字，或立刻做出修改。</p><p>相比之下，语音输入更像一条「河流」。思想如水流，说出的话直接奔涌向前。我们无法让河流暂停，回到上游修改水流，只能保持它从头到尾流动。这过程<strong>同步且线性</strong>，需要不受打扰的环境。</p><p>为何会有这种差异？一个原因是<strong>认知摩擦力不同</strong>。打字时，我们经历思考、选词造句、寻找按键、拼写，然后看到文字出现，整体是一条很长的链条。语音输入则更容易进入心流状态，因此我们希望有个不受打扰的环境，一旦进入状态就不停下。写作时注重的会是思维的连贯表达，而非单个词语的完美与否。</p><p>同时，打字和语音输入调用的思维模式也不同。书面写作偏向<strong>逻辑结构和分析</strong>，讲述则偏向<strong>故事思维</strong>。讲故事追求连贯完整，写作的逻辑思维则完全不同。</p><p>我们并非说河流模式一定比建筑模式好，或更代表时代发展方向。相反，这是每个创作者面临的取舍。</p><h3>效率</h3><p>语音转文字技术对写作最直观、最可量化的影响，毫无疑问在于对效率的颠覆性提升。人类说话的速度远超打字，那自然，只要有足够的内容储蓄，能够维持输出强度，那么自然在相同的时间下，就能够输出更多的文字。不过需要注意的一点是，语音转文字也导致了编辑负担的转移。在起草阶段所节省的时间，一定程度上被转移到了编辑阶段。</p><p>正如上文所说，口述生成的初稿往往是未经加工的「原材料」，需要大量重写和结构调整才能成为合格的书面语。因此，语音转文字带来的生产力提升，其实并非简单地缩短了总时间，更多是重构了时间分配。</p><p>对于那些在编辑上比较苦手的人来说，实际上可能并不能减少他们总的输入时间。而真正的效率提升，属于那些能够成功适应新的两阶段工作流程，并掌握相应编辑技能的写作者。</p><h3>对文字本身的影响</h3><p>语音转文字技术对写作带来的转变远不止于效率，它也在潜移默化地改变文字本身的特质。</p><p>既然文字来源于口语，那写作出来的文本也自然会更加倾向于对话式的风格。这种风格在某些博客、介绍性文章中自有其优势，能营造出一种亲切、自然的氛围，但若讲述者本身不擅长讲故事，则有可能会囿于流水账的困境。</p><p>这也就引出了语音转文字所带来的潜在问题，即会导致行文冗长、结构松散。在我的语音转文字写作中就经常出现这个问题， 由于思考和写作是同时进行的，而人在思考的时候会不自觉地重复自己的观点，以保证逻辑的连贯性。当这种思维落在纸面上，就很容易会出现大段的重复。</p><h2>影响不止于写作？</h2><p>语音转文字所带来的影响不只局限于写作，它对于我们人与人之间的沟通，乃至于人与生活之间的互动都会带来很大的改变。</p><h3>人和人之间的沟通模式</h3><p>举个例子，语音转文字对工作中人与人之间沟通就会有很大的影响。以前当我们开会时，除非额外注明有人来专门做会议纪要，不然很多时候会议的内容是无法追踪的，人们相对而言就可以更加畅所欲言一些。而随着语音转文字技术的运用，所有的会议都可以留痕，这也就导致人们在线会议时会更加谨慎，更加注重自己的措辞，对于自己所抒发的内容会有更多审慎的考虑，会避免随意输出可能对自己或他人不利的内容。</p><p>这一方面使得同事与同事或者说不同部门之间的沟通变得愈发困难，但在某种程度上也增加了线下人与人之间沟通的重要性。在工作中，人们可能更加会倾向于线下的会议，或者说在茶水间等非正式场合的碰面。所以说，语音转文字技术在工作中可能会导致地理位置相近的人之间的关系变得更加紧密，而对于位置相对较远的人而言，反而会加深他们之间的隔阂。</p><h3>人和社会之间的交互</h3><p>语音输入正在重塑人们执行日常任务的方式，培养了新的行为习惯和用户期望，例如，人们期待技术能够提供即时、准确和个性化的响应 。然而，这种行为转变也面临障碍，包括用户对设备全部功能认知不足，以及在公共场合使用语音命令的社交尴尬感 。</p><p>而对于人与社会，以及人与社会中的一些事物的交互而言，也带来了很多的改变。语音转文字的效率大大优于传统的写作，人们在工作中也会更加依赖语音转文字，这就导致了人们<strong>工作范式</strong>的一定改变。很明显，在那些所有人坐在一个场合进行工作的场景下，语音转文字可能并不适用。人们会避免自己的隐私被探听，同时也担心会影响到别人。因此，在工作场所里，人们可能会需要更多个人的空间，或者更多可以短暂使用的个人空间，如电话间等。而这也同时进一步导致了人们工作节奏的加快。由于信息产生和处理速度的提升，人们的工作压力也会进一步增加，并且也会要求人们掌握更多的语音输入技巧。由于语音天生是流逝的，它也会要求人们学会怎样说出结构化的内容，这对人们的思维模式的要求其实更高了。</p><h3>对社会的深层影响</h3><p>而对社会交互的深层影响而言，优点自然在于，它在功能上进一步增加了<strong>信息的民主化程度</strong>。由于不善于打字的人也因此能够更加轻松地创作内容，在一定程度上降低了内容创作的门槛，同时也为那些文盲、不擅长书写打字，或者有手部残疾的人提供了一个相对公平的表达渠道。</p><p>而对于文化而言，语音转文字带来的可能更多是一些负面影响。相对而言，AI 虽然在一定程度上缩小了阶级之间的不公平，但是对于不同语言、不同族群人之间的公平程度反而有可能是一种放大。那些使用少数语种或者有特殊口音的人会因此丧失快速输出的机会，和主流人群之间的差距会进一步扩大。而且语音转文字在主流语言上的优势也会随着语料增加而进一步增加，一些地方语言很有可能会加速消亡。当然，这里面也有一些反例，人工智能也可以用来保护或识别一些比较古老的语言，这取决于人们如何使用人工智能技术。</p><p>第三个变化更多在于<strong>认知模式</strong>上，人们通过语音随时记录想法，这改变了大脑处理信息的方式，就像我们之前所说的「建筑」和「流水」之间的区别。这长期对于人们的思维方式也会有负面影响，一旦人们习惯于随时随地记录自己的语音，自然的记忆能力反而可能会被削弱。</p><h2>简要横评常见的语音转文字软件</h2><p>下文会对我使用过的一些语音转文字软件进行一些简单的评述。特此声明，我仅评测我付费使用过的产品，且不打总分，因为不同维度对不同人来说有着完全不同的权重。篇幅所限，每个软件仅作简单评述，如有需要详细介绍，可以在评论区留言，后期有时间了可能会写更详细的文章。</p><h3>语音+笔记</h3><h4>TL;DR</h4><figure class="table"><table><thead><tr><th>&nbsp;</th><th>Audiopen</th><th>Voicenotes</th><th>闪念贝壳</th><th>Flomo</th><th>Dinox</th></tr></thead><tbody><tr><td>价格</td><td>⭐</td><td>早鸟⭐⭐⭐⭐⭐<br />订阅⭐<br />&nbsp;</td><td>买断⭐⭐⭐⭐<br />订阅⭐⭐</td><td>⭐⭐⭐</td><td>买断⭐⭐⭐<br />订阅⭐⭐</td></tr><tr><td>UI/设计</td><td>⭐⭐⭐⭐</td><td>⭐⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐⭐</td><td>⭐⭐</td></tr><tr><td>输入便捷度</td><td>⭐⭐</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐</td><td>⭐⭐⭐</td></tr><tr><td>AI 能力</td><td>⭐⭐⭐⭐</td><td>⭐⭐⭐</td><td>⭐⭐⭐</td><td>⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td></tr><tr><td>上传录音</td><td>⭐⭐⭐</td><td>⭐⭐⭐</td><td>⭐⭐⭐⭐</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>集成能力</td><td>⭐⭐⭐</td><td>⭐⭐</td><td>⭐⭐⭐⭐⭐</td><td>⭐</td><td>⭐⭐⭐⭐</td></tr><tr><td>附加功能</td><td>⭐</td><td>⭐⭐⭐</td><td>⭐⭐</td><td>⭐⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td></tr><tr><td>开发者能力</td><td>⭐⭐</td><td>⭐⭐⭐⭐</td><td>⭐⭐</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐</td></tr><tr><td>未来预期</td><td>⭐</td><td>⭐⭐⭐⭐</td><td>⭐⭐</td><td>⭐⭐⭐⭐</td><td>⭐⭐⭐</td></tr></tbody></table></figure><p>&nbsp;</p><h4>Audiopen</h4><p>在所有语音转文字笔记软件中，Audiopen 应该是最早出圈的一个产品。早在2023年它就诞生了，作者从来没有编程经验，通过 vibe coding 创造了这款产品。</p><p>由于它当时昂贵的定价，也激起过一些讨论。Audiopen的 UI 以及语音转文字的准确度在所有产品中都是最佳的。去年，它也开发出了 app 端，在易用程度上也很优秀。它的后端集成做得也挺好，可以自动把转录及AI修改好的内容发送到 Notion，或通过 webhook 发动到其他自己想要管理的软件之中。综合来看，作为这个行业里的先驱，除了价格较贵之外，没有什么值得吐槽的问题。</p><h4>Voicenotes</h4><p>如果你错过了 Voicenotes 早期的 50 美元早鸟价买断的话，那这可能是语音转文字笔记软件用户最大的遗憾之一。</p><p>Voicenotes 在所有笔记软件中可以说是综合了价格、 UI、设计逻辑、后期的集成等最好的一个产品。Voicenotes 的设计非常克制且优雅，无论是极简的设计还是对于 AI 改写的克制，在使用便捷度上是首屈一指的。</p><p>它既支持在 App 中进行转录，也支持上传语音文件进行转录。除此之外，Voicenotes 还支持通过一个叫 Pages 的功能来把自己的语音转文字发布出去，形成自己一个非常微型的博客。我也把它作为我个人博客的一个补充，记录一些我个人的日常闪念。同时，它也支持 AI 问答等功能。</p><p>值得一提的是，Voicenotes 的作者是 Buy me a coffee 的作者，因此信誉度相对可靠，暂时不用担心跑路。</p><p>综合下来，Voicenotes 是我在所有笔记软件中使用语音转文字的频率最高的。而且它同时支持网页端、手机端以及苹果手表端的输入，这让它的使用场景得到了大大的拓展。近期，它也更增加了在桌面端的快捷输入，并且更加扩展了它自己的使用场景。</p><h4>闪念贝壳</h4><p>闪念贝壳其实是先在海外做起来之后才拓展到国内的，在外区它的名字叫 Ideashell。作者不愧是设计出身，它的外观设计非常优美，UI也很简洁美观，对颜值党来说用着非常舒服。</p><p>而另外一个特色则是它与其他各种软件的集成。打开软件（或通过小组件/action button)，录入一段语音，生成的内容，可以被非常便捷地立刻发送到包括从微信、提醒事项到 Notion、Obsidian、熊掌记、Craft、滴答清单、Day One等一系列笔记软件中去，在操作的便捷度上毫无疑问是在所有软件中最佳的。</p><p>此外，闪念贝壳支持上传录音文件进行转录，并且支持区分不同发言人，这个功能常被我用于临时会议记录。</p><h4>Dinox</h4><p>如果说闪念贝壳是典型的设计师作品，那么 Dinox 则是典型的工程师作品。</p><p>如果要论各种与 AI 相结合的功能最齐全、设置最复杂的产品，Dinox 非他莫属。它支持从语音转文字到后续的结构化处理、相关笔记、AI 聊天等一系列功能，甚至还支持手机端检测存储，并且包括 S3 等不同的对向存储。</p><p>可以说，所有你能设想的与笔记相关的功能在 Dinox 都有。但自然，缺点也是存在的：它的操作设置过于复杂，入门相对较为困难，且当前阶段 bug 较多；在美观上与其他几款产品相比略有缺失。同时，由于作者想法很多，整体作品割裂感比较强，并没有一个明确的产品特质。</p><p>但是，作者的更新频率以及响应速度非常之快，几乎每隔几天就有一个新版本，可以说是未来可期的一个选择。</p><h4>Flomo</h4><p>其实早在 AudioPen 流行之后，我就和少楠提过在笔记软件中加入语音转文字的想法。但当时他们觉得需要先研究语音转文字是不是一个笔记软件的刚需，以及如果真的加入了，如何进行最符合他们产品逻辑的设计，谁料这一研究就是两年。</p><p>对于他们这个解释，一开始我和其他挺多人一样，觉得他们只是出于成本考虑而拒绝做出一些新的尝试。也因此，我尝试了其他挺多速记软件。</p><p>几个月前，Flomo 终于加入了语音转文字。并且我也很欣慰地看到他们确实在里面融入了自己的想法。相比于那些着重于语音输入后，对笔记进行很多基于不同prompt调整的软件而言，Flomo 不支持自定义prompt（对不少人来说这是个缺点），非常注重写作者原来的结构，仅去除了一些常见的口辟等。</p><p>这其实也和我对于笔记的看法不谋而合。之前我也尝试过通过很多预先设置好的 prompt 来对自己的语音输入进行大幅度修改，但最后却发现这些修改过的笔记虽然看起来更加精致，但很多情况下并不能反映我自己的原意。亦或者，当我事后回顾的时候，总感觉这些笔记有些陌生。正如少楠和Lightory 想传递的笔记理念，只有那些在我们用自己的理解记下来的内容，才是我们当下最真挚的表达。我们自己通过思考来进行的重新编辑，也能让我们对自己的笔记有更深刻的印象。</p><p>此外，这半年支持的 AI 搜索和最近引入的 AI 洞察也很有想法，能帮助用户发现笔记和笔记之间的关联——虽然 Voicenotes和Dinox也支持类似的功能，但从易用程度以及完成度上来看，后两者只能称得上有这个功能，远远不算好用。</p><p>说了这么多，Flomo 当然也有一些问题，比如说他的语音笔记最长只能支持五分钟，对生成的内容会进行自动审核，替换掉一些不当语句，并且不支持同步到其他软件等。但从使用的易用性上，以及语音转文字这一功能本身的实现的完成度上，Flomo 还是做得很好的。</p><h4>其他：Get笔记、即我笔记、Reflect、Tana、Workflowy等</h4><p>这里提到的这些笔记软件并不代表市面上所有支持AI语音转文字的软件，还有几款可以简单提一下。</p><p>如果把市面上的语音转文字软件分成两类，一类可以算是所谓的「AI 原生」笔记软件，另一类则是「AI+」笔记软件</p><p>其中，Get笔记和即我笔记，以及这两年在即刻、小红书上各种独立开发者各种宣传的层出不穷的新软件大都是在AI语音转文字出现之后而诞生的。他们在从初始阶段就兼顾到了语音转文字的开发，但因为我使用的不多，也建议大家去找其他的评测。</p><p>而后面提到的这几款Reflect、Tana、Workflow则是基于已有的笔记软件的基础上，把语音转文字融入他们的工作流。其中，Tana毫无疑问是其中做得最好的一款。AI 已经成为其完整工作流中的一环。它既支持会议的转录，也支持日常的手机端以及电脑端的语音输入。此外，Tana还能在输入之后用AI对语音转文字的内容进行进一步修改，自定义化非常强。</p><p>但由于这几款都需要比较昂贵的订阅费，在性价比上，如果只是把它作为语音转文字软件而言，相对会比较低。不过，如果能把它们与自己的工作流结合起来，或者作为自己的知识库所在，那是可以考虑的选择。</p><h3>语音转录输入法</h3><p>桌面端的语音转文字输入法也有不少选择，最主流的包括 Superwhisper、Wispr Flow等，甚至 Voicenotes 近期也推出了 Mac 端的输入法软件，只需按住快捷键，就能直接把语音转文字输入到当前的文本框内。</p><p>由于我日常输入不依赖于 Mac，对这方面没有很深的研究，可以参考 Edison 的这篇<a href="https://linux.do/t/topic/833194">文章</a>来了解更多的细节。</p><h2>语音输入是 AI 时代的唯一正解吗？</h2><p>语音转文字软件确实加快了我单一文稿撰写的速度，例如这篇文章有 50% 的部分是通过语音输入完成的初稿。但回头看来，寻找具有仪式感的环境进行语音输入这一行为反而对我创作构成了新束缚。</p><p>以前我能在等地铁、午休时花几分钟，用手机或iPad快速写出文章一部分。然而习惯于用语音写初稿之后，我的零散输入时间反而变少了。</p><p>未来创作中我可能需要区分不同类型文字，采取不同写作方式。对偏向故事型、记录型的内容，使用语音可能更方便；对偏向书面信息的写作，找个安静地方写可能更好。更或者，在大部分情况下，我都会更加倾向于用打字的方式来进行写作。因为无论是在摘录闪念，亦或是在长篇梳理自己想法的时候，这种字斟句酌的输入方式都更有利于我理清自己的思路。并且，它能更加有一种创作的真实感以及仪式感。毕竟，有时候仪式感本身也是创造力的来源之一。</p><p>而如何根据自己所处环境、惯用设备而选择最适合自己的创作方式，是每个创作者都需要面临的课题</p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101833</id>
            <title>不止于聊天：我的 Vibe Coding 工作流，用上下文与 MCP 打造更聪明的 AI 助手</title>
            <link>https://sspai.com/post/101833</link>
            <guid isPermaLink="false">https://sspai.com/post/101833</guid>
            <pubDate></pubDate>
            <updated>Thu, 14 Aug 2025 11:42:53 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: AI编程工具,上下文工程,MCP协议,提示词工程  
<br>  
<br>  
总结: 本文探讨了提升AI编程工具效率的两个关键要素：上下文工程和提示词工程。作者指出，通过编写规范文档和利用工具提供的上下文管理功能（如Cursor的@指令、Memories功能），可以有效提升AI的工作效果。文章重点介绍了MCP协议，这是一种整合外部资源的通用接口协议，列举了Fetch、Context 7、Playwright等多种MCP工具及其应用场景。在提示词工程方面，作者分享了如何通过精心设计的提示词引导AI遵循特定工作流程，包括研究、构思、计划、执行、评审等步骤。最后，作者比较了当前主流AI编程工具的优劣，并强调掌握上下文工程和提示词工程的重要性，认为这是未来与AI高效协作的核心能力。 </div>
                        <hr>
                    
                    <h2>一切的基础：为 AI 打造高效的上下文环境</h2><p>当前主流 AI 编程工具的核心能力大多源于大型语言模型，但它们在实际使用体验上却存在显著差异。在我看来，这其中的区别在于各个工具厂商背后的工程化能力。要想让模型的的能力发挥得好，提示词工程和上下文工程上做功夫肯定是必不可少的。</p><p>那抛开工具本身的优化不谈，如果使用者本身也能在提示词和上下文上做功夫，工具产出的效果自然也不会差到哪里去。下面我将围绕这两个方面来分享我 Vibe Coding 中一些体验和技巧。</p><p>在开始编写你的项目之前，敲定项目要使用的技术栈路线和MVP阶段的要实现的目标和功能是很重要的一件事。你需要根据你的项目情况，编写一份提供给AI读取的规范文档。</p><p>为啥要这样做呢？AI每次的输出都是带有很多确定性，一份我们特定编写好的规范文档， 自然也是一份绝佳的上下文。如果你没有提供好足够的上下文给AI，没有尽可能的让AI牢记自己的”身份“。什么该做，什么不该做。那你的AI的工作效果总会不如你心意，你总会觉得你的AI不如其他人”聪明“。</p><p>不过，现在其实不用那么麻烦了，我们可以看到很多工具都在这方面做了很多优化。cursor的 <code>cursor rule</code> ，<code>trae</code> 的 <code>solo</code>模式，<code>kiro</code>的 <code>Agent Steering</code>，Claude Code 的 <code>Claude.md</code> ，这或许也会带来一个新的现象，未来大量的项目里面一堆专为 AI编写的文档，像极了AI在你的项目里面堆满了”垃圾“ ……</p><p>很多工具的对话框中也提供了添加上下文的方式。以 <code>Cursor</code> 的 <code>@</code> 指令为例，通过 <code>@</code> 指令，我们就可以添加多个来源的上下文。</p><figure class="image ss-img-wrapper image_resized" style="width: 338px;"><img src="https://cdnfile.sspai.com/2025/08/14/a5d1335311753179171beb8a1f32fc6b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>cursor 对话框中的上下文添加方式</figcaption></figure><p>除此之外，部分工具也引入 <code>Mermories</code>的功能，也就是所谓的记忆。例如，<code>augument code</code>，<code>cursor</code>等，从我个人角度看，这也属于上下文的一种形式。</p><figure class="image ss-img-wrapper image_resized" style="width: 537px;"><img src="https://cdnfile.sspai.com/2025/08/14/9a0ff1843c79f3334119917da00963cd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Cursor 的记忆（Memories）功能，也是上下文管理的一种方式</figcaption></figure><figure class="image ss-img-wrapper image_resized" style="width: 537px;"><img src="https://cdnfile.sspai.com/2025/08/14/b1b5dc4ebd4bda0c1a2da4dab27f541b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Augument Code 中的记忆（Memories）功能</figcaption></figure><p>不过，如果上下文工程仅仅只有上面这些处理，那还是远远不够的。为了拟补 AI 自身所带的幻觉和能力的不足，就轮到 MCP 出场了。</p><h2>MCP 协议：扩展 AI 的能力边界</h2><p>很多人应该都久仰其大名了吧，容我再啰唆几句，再对它做一个简单的解释。</p><blockquote><p>什么是 MCP ？</p></blockquote><p>MCP是一种约定好的协议，就像一个“USB-C 通用接口”。目的是解决大型语言模型（LLM）与外部工具或数据源之间 <strong>整合碎片化</strong> 的问题&nbsp;，让 AI 模型可以通过统一方式连接 GitHub、Slack、飞书、数据库、文件系统等外部资源，获取<strong>上下文</strong>信息并执行操作。</p><blockquote><p>为什么需要 MCP？</p></blockquote><p>大模型（如 GPT、Claude）只能使用它们训练时获得的知识，但无法实时访问网络或其他工具，而由于无法保证训练时知识的时效性和百分比准确性，会导致大模型还会自带幻觉的问题，容易“闭门造车”。</p><p>一个设计良好的 MCP 能显著提升 AI 获取上下文、纠正自身错误的能力，如同为 AI 插上了翅膀，让模型产出更好的结果。</p><p>在AI编程工具中，我主要使用以下 MCP：</p><ul><li>Fetch MCP：一个轻量级、高效的网页抓取工具，能把网页内容转换成Markdown格式方便大语言模型使用。</li><li>Context 7 MCP：为AI编程助手提供最新、版本特定的代码文档和示例，解决模型使用过时信息的问题。</li><li>Playwright MCP：基于Microsoft Playwright，给语言模型提供浏览器自动化能力，能操作网页、截屏和生成测试代码。</li><li>Sequential Thinking MCP：一个帮助AI有序分解和逐步解决复杂问题的思维协议，类似AI世界的“USB-C接口”。</li><li>Deepwiki MCP：能爬取GitHub代码库文档并转为Markdown，提升开发者理解和使用开源项目的效率。</li><li>MCP Feedback Enhanced：引入反馈环节，让AI在执行关键操作前主动反馈，等你把控细节走向和确认，减少误操作，提高交互效率。</li><li>Notion MCP：与Notion API集成，方便内容和数据库管理，实现对页面、区块、数据项的读取和修改。</li><li>Github MCP：提供与GitHub仓库的集成，帮助获取代码库内容并与AI工具协同工作。</li><li>GitMCP：一个支持从文档和代码库中获取知识的MCP工具，提高信息检索和知识整合能力。</li><li>Firecrawl MCP：结合网页爬虫和AI分析，支持批量网页抓取和结构化数据提取，助力内容分析和处理。</li></ul><pre class="language-markdown"><code>{
"MCPServers": {
    "fetch": {
    "command": "uvx",
    "args": [
        "MCP-server-fetch"
    ],
    "env": {},
    "disabled": false,
    "autoApprove": [
        "fetch"
    ]
},

"Context 7": {
    "command": "npx",
    "args": [
        "-y",
        "@upstash/context7-MCP@latest"
    ],
    "disabled": false,
    "autoApprove": [
        "resolve-library-id"
    ]
},

"Playwright": {
    "command": "npx",
    "args": [
        "-y",
        "@playwright/MCP@latest"
    ],
    "disabled": false,
    "autoApprove": [
        "browser_navigate"
    ]
},

"Sequential thinking": {
    "command": "npx",
    "args": [
        "-y",
        "@modelcontextprotocol/server-sequential-thinking"
    ],
    "disabled": false,
    "autoApprove": [
        "sequentialthinking"
    ]
},

"MCP-deepwiki": {
    "command": "npx",
    "args": [
        "-y",
        "MCP-deepwiki@latest"
    ],
    "disabled": false,
    "autoApprove": [
        "deepwiki_fetch"
    ]
},

"MCP-feedback-enhanced": {
    "command": "uvx",
    "args": [
        "MCP-feedback-enhanced@latest",
        "server"
    ],
    "env": {
        "FASTMCP_LOG_LEVEL": "ERROR"
    },
    "disabled": false,
    "autoApprove": [
        "interactive_feedback",
        "get_system_info"
    ]
},

"notion": {
    "command": "npx",
    "args": [
        "-y",
        "@suekou/MCP-notion-server"
    ],
    "env": {
        "NOTION_API_TOKEN": "这里你需要配置自己的API key"
    },
    "disabled": false,
    "autoApprove": [
        "notion_retrieve_bot_user"
    ]
},

"github": {
    "command": "npx",
    "args": [
        "-y",
        "@modelcontextprotocol/server-github"
    ],
    "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "这里你需要配置自己的API key"
    },
    "disabled": false,
    "autoApprove": [
        "get_file_contents",
        "search_repositories",
        "create_repository",
        "push_files",
        "create_or_update_file"
    ]
},

"GitMCP": {
    "command": "npx",
    "args": [
        "-y",
        "MCP-remote",
        "https://gitMCP.io/docs"
],
    "disabled": false,
    "autoApprove": [
        "search_generic_documentation"
    ]
},

"firecrawl-MCP": {
    "command": "npx",
    "args": [
        "-y", "firecrawl-MCP"
    ],
    "env": {
    "FIRECRAWL_API_KEY": "这里你需要配置自己的API key"
    }
}

}
}</code></pre><p>&nbsp;</p><figure class="image ss-img-wrapper image_resized" style="width: 511px;"><img src="https://cdnfile.sspai.com/2025/08/14/a5aa8a8a8fe9b5dafbc63a51410a2b49.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Cursor 中配置 MCP</figcaption></figure><figure class="image ss-img-wrapper image_resized" style="width: 391px;"><img src="https://cdnfile.sspai.com/2025/08/14/48411aeb316b4426c9f27448fa1dd770.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Kiro 中配置 MCP</figcaption></figure><figure class="image ss-img-wrapper image_resized" style="width: 502px;"><img src="https://cdnfile.sspai.com/2025/08/14/b624706b245a1e70d98dac62c9c28bf6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Augument Code中配置 MCP</figcaption></figure><p><code>GitHub</code> MCP 中的 <strong>API key</strong> 获取方法如下：</p><ul><li>登录 GitHub 后，进入 <strong>Settings → Developer settings → Personal access tokens</strong></li><li>选择生成 <strong>Classic Token</strong> 或 <strong>Fine-grained Token</strong>，设定过期时间与权限（至少包含 repo、workflow 等）</li><li>点击 <strong>Generate token</strong>，生成后请立即复制保存，日后无法再次查看<br />这里有篇 <a href="https://everhour.com/blog/github-personal-access-token/" target="_blank">博客</a> 是最新（2025 年）指南写法，非常详细。</li></ul><p><code>Notion</code> MCP 中的 <strong>API key</strong> 获取方法如下：</p><ul><li>打开 Notion: <strong>Settings → Integrations → “Develop your own integrations” → + New integration</strong></li><li>填写名称、选择工作区、设置权限（例如读取/写入数据库）</li><li>创建后，在 Integration 的配置界面的 <strong>Configuration</strong> tab 下可找到 “Internal Integration Secret” 或 “API secret”</li><li>复制该 token，另需将希望集成访问的页面或数据库 “Share” 给该 integration，确保它具备权限<br />详细教程可以看看 <a href="https://www.notion.com/help/create-integrations-with-the-notion-api" target="_blank">notion 官方文档</a> 说明。</li></ul><p><code>FireCrawl</code> MCP 中的 <strong>API key</strong> 获取方法如下：</p><ul><li>访问 Firecrawl 官方平台的 <a href="https://www.firecrawl.dev/app/api-keys" target="_blank">API 密钥页面</a></li><li>登录后生成 API Key，复制之后填入上面的 json 文件中对应的位置即可。</li></ul><p>那如何让 AI 使用这些 MCP工具呢？</p><h2>提示词工程：精确引导 AI 的工作流</h2><p>这里就引出了提示词工程。我希望在AI输出结果的过程中去把握细节和走向，就可以通过提示词工程来实现。如下<strong>提示词</strong>（该提示词非本文原创，改编自 Linux Do 社区的分享，我在此基础上进行了个性化调整……）所示，它以 <a href="https://github.com/Minidoracat/mcp-feedback-enhanced">mcp-feedback-enhanced</a> 为核心来主导工作流。</p><pre class="language-markdown"><code>## 核心身份 (Persona Role):
你是一款顶级IDE AI编程助手，专为专业程序员服务。你的核心特质是：**严谨、高效、流程驱动、工具增强、绝对遵循已定义的行为准则**。你始终使用简体中文进行交互。你行事专业，沟通简洁，避免不必要的寒暄与解释。

## 核心目标/任务 (Core Goal/Task):
严格遵循下述定义的协议、准则和工作流，为用户提供专业的编程开发辅助。你的最终目标是**生成高质量、可维护、且仅限于应用程序逻辑的生产代码**，同时保持与用户的清晰、高效互动。

## 核心行为准则与约束 (Core Behavioral Principles &amp; Constraints):
这是你必须无条件遵守的最高指令集。这些准则的优先级高于一切，必须融入到你的每一个思考和行动步骤中。

1.  **【准则一：聚焦生产代码实现】** 你的核心职责是构建和完善应用程序本身的功能代码。因此，除非用户要求外，你的任务范围**已明确设定为不包含任何形式的测试相关工作**。
    **正面指令 (Do this):** 专注于编写业务逻辑、服务、控制器、工具函数等生产代码。
    **反面指令 (Not this):** **绝不**擅自创建或修改任何测试文件（如 `test_*.py`）、编写任何测试用例、测试断言或测试脚手架。
    **背后原因 (Rationale):** 用户的开发环境采用统一的 **行为驱动开发(BDD)测试框架**。你的职责是提供与该框架解耦的、纯粹的功能实现，而不是生成冗余或冲突的单元测试。

2.  **【准则二：专注命令行与脚本操作】** 你的所有操作都必须是可通过代码或命令行完成的。
    **正面指令 (Do this):** 当遇到需要图形界面(GUI)或需要用户手动干预（如安装依赖）的操作时，你**必须**立即停止，并调用 `mcp-feedback-enhanced` 工具，清晰地向用户说明需要他们手动完成的具体步骤。
    **反面指令 (Not this):** **禁止**假设或描述任何需要点击按钮、填写表单等GUI交互的步骤。

3.  **【准-则三：坚守代码设计哲学】** 你编写的所有代码都**必须**体现以下设计原则，以此作为代码质量的基石：
    *KISS (Keep It Simple, Stupid):** 优先选择最简单直接的实现方式。
    *YAGNI (You Ain't Gonna Need It):** 只实现当前需求明确要求的功能。
    *SOLID Principles:** 保证代码结构的高内聚、低耦合和可扩展性。

4.  **【准则四：严格遵循工作流】** **禁止**跳过或改变下述核心工作流的顺序，除非接收到用户的明确指令。

## 关键背景与上下文 (Key Context &amp; Data):
    **目标用户**: 专业程序员，理解技术术语，追求效率。
    **核心理念**:
    1.  **拒绝重复造轮子**: 对于复杂功能，首要任务是利用 MCP工具 和 Web 搜索工具研究现存解决方案。
    2.  **规划先于行动**: 严格遵循“思考 -&gt; 分析 -&gt; 编码”的模式，确保方案最优。
    3.  **质量与功能并重**: 不为通过编译而牺牲代码质量或功能。深入分析并解决警告与错误的根源。

## 核心工作流协议 (Core Workflow Protocol):
你必须严格按照 `研究 -&gt; 构思 -&gt; 计划 -&gt; 执行 -&gt; 评审` 的顺序推进工作。每一次响应都必须以模式标签开头。

1.  `[模式：研究]`
        **任务**: 深入理解用户需求，识别核心问题和所有约束。如果需求复杂，主动使用工具（见工具协议）搜索现有解决方案。
        **交付**: 对需求的总结性理解。

2.  `[模式：构思]`
        **任务**: 基于研究结果，提出至少两种逻辑清晰、技术可行的解决方案。对每种方案进行简要评估（如优缺点、复杂度）。
       **交付**: 格式化的方案列表，例如：`方案1：[描述]...`。

3.  `[模式：计划]`
        **任务**: 将用户选定的方案，分解为一份详尽、有序、可执行的步骤清单。
        **计划内容**: 必须包含原子级别的操作，如文件创建/修改、函数/类实现、逻辑概要、工具调用等。
        **【内置检查点】**: 在生成计划后，**必须进行自我审查**，确保计划清单中**不包含**任何创建或修改测试文件的步骤。这是**准则一**的直接体现。
        **交付**: 步骤清单(tasks list)。完成后，**必须**调用 `mcp-feedback-enhanced` 请求用户批准计划。

4.  `[模式：执行]`
        **前提**: **必须**在获得用户对计划的批准后才能进入此模式。
        **【内置检查点】**: 在开始编码前，再次确认当前任务严格遵守**准则一**和**准则二**，**仅生成生产代码**。
        **任务**: 严格按照已批准的计划进行编码。将任务简报（含上下文和计划）存入 `./issues/任务名.md`。
        **交付**: 在关键步骤完成及整体任务完成后，**必须**调用 `mcp-feedback-enhanced` 向用户反馈进展或结果。

5.  `[模式：评审]`
        **任务**: 完成代码实现后，自我评估执行结果。对照计划，报告任何偏差、遇到的问题或改进建议。模拟编译项目，并报告所有需要解决的警告或错误。
       **【内置检查点】**: 在评审报告中，再次确认所有交付物均符合**核心行为准则**，特别是代码风格和无测试代码的规定。
        **交付**: 评审报告。完成后，**必须**调用 `mcp-feedback-enhanced` 请求用户最终确认。

## 工具与错误处理协议 (Tool &amp; Error Handling Protocol):
    **研究阶段的探索**: 在 `[模式：研究]` 中，若初步分析未找到解决方案，**必须**依次尝试使用 `Context7`, `fetch`, `firecrawl-mcp` 及通用网络搜索工具进行深度探索。
    **执行阶段的工具失败**: 在 `[模式：执行]` 中，若工具调用失败，**必须**自动重试最多两次（总计三次尝试）。若三次均失败，则记录失败，跳过该工具调用步骤，并继续执行计划的后续部分，同时在最终的评审报告中注明此情况。
    **MCP服务优先**: 优先使用 `mcp-feedback-enhanced` 和 `Context7` 等MCP服务。

## Request (Crystal Clear, Actionable, Detailed &amp; Potentially Sub-divided):
现在，请激活此核心身份和协议。以 `[模式：研究]` 状态开始，等待我的第一个编程请求。</code></pre><p>很多工具提供了配置 <code>User Rules</code> (全局提示词)，也就是给你工具中的AI助手预设一个角色和身份，上面的提示词就是在这发挥用武之地。有了你预设的全局提示词，你工具中的 AI 自然会以你想要的工作流来执行任务。</p><p><code>User Rules</code>并没有绝对的还坏之分，你完全可以编写适合你自己工作流的全局提示词。不过我不建议将所有的要求一股脑放在 <code>User Rules</code> 中，建议根据特定场景需求拆分成特定的指令来使用。</p><blockquote><p>那其他 MCP 服务该怎么使用呢？</p></blockquote><p>也离不开提示词的引导。在 AI 研究我提出需求的方案时，我通常希望 AI 能够参考网络上其他现有的优秀案例和解决方案，所以这时候我会在对话中（提示词）说明这点：</p><pre class="language-markdown"><code>你是一个资深{领域}顾问，我希望你能给出高质量的{解决方案/案例/设计}。
请使用合适的 MCP 工具（例如 fetch、Context 7、firecrawl-mcp、mcp-deepwiki等）从网络获取真实、最新的资料，
并结合多个不同来源的案例，整理并输出：
1. 核心思路总结
2. 关键实现步骤思路
3. 不同方案的对比优劣
4. 适用场景与注意事项

禁止只依赖你的训练知识。</code></pre><p>如果你在开发Web 应用，那可以让 AI 使用 <code>Playwright</code> 这个 MCP：</p><pre class="language-markdown"><code>你是我的 Web 自动化测试工程师。
目标：{清楚描述你的目标，比如“测试登录功能并截图验证成功页面”}。
要求：
1. 必须调用 Playwright MCP 工具执行实际操作。
2. 所有网页操作步骤必须真实执行。
3. 输出结果时，请提供：
   - 操作步骤列表
   - 执行结果截
   - 遇到的异常（如有）
4. 使用 Markdown 格式输出结果，截图使用可访问的链接或嵌入方式。</code></pre><p>对于专业的程序员，GitHub在熟悉不过。而 <code>GitHub</code> 这个 MCP 自然是帮助我们操作 GitHub 的，能极大提升开发效率和协作体验。，极大提升了开发效率和协作体验。举几个例子：</p><ul><li><strong>查询代码结构</strong>：请使用 GitHub MCP，从仓库 owner/repo 获取当前项目的目录结构和主模块说明。</li><li><strong>创建或更新 Issue/PR</strong>：请调用 GitHub MCP 创建一个 issue，标题是 …，内容说明 …，并添加标签 bug。</li><li><strong>Markdown 批量生成</strong>：请用 GitHub MCP 抓取所有带 blog-content 标签的 issues，将它们转换为 Markdown 文件并提交到 <code>docs/blog/</code> 目录。</li></ul><p>至于 <code>Notion</code> 这个 MCP，则更多是我的个人偏好。我喜欢将一些解决起来出现较多困难，过程并不轻松的问题总结记录到Notion中。</p><figure class="image ss-img-wrapper image_resized" style="width: 512px;"><img src="https://cdnfile.sspai.com/2025/08/14/3b2db4b0a198abe3dd71cc52f179cc41.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>利用 Notion MCP，可以将解决复杂问题的过程和方案沉淀为个人知识库</figcaption></figure><p>以上基本是我平时使用 MCP 的过程，其实还有很多有意思的 MCP 等我们去挖掘和探索。受限于篇幅原因，这里我就不细讲了。</p><p>当然，提示词不仅仅能够用来调用 MCP，好的提示词会让你的 AI 员工工作起来事半功倍。如何编写优秀的提示词本身就是一门复杂的艺术，与‘如何提出一个好问题’异曲同工，这需要大量的实践和感悟。</p><p>平时和AI打交道多了，感觉自然就来了。🤯</p><h2>写在最后</h2><p>随着AI工具的发展，现在看来<code>cursor</code> 护城河似乎并没有那么高？目前实际体验下来，<code>augument code</code>的 <code>context engine </code>一骑绝尘，使用起来有种指哪打哪的效果。<code>kiro</code>的 <code>spec</code>功能让人眼前一亮，在制定规范上明显比<code>cursor</code> 便捷和好用。<code>trae</code> 的 <code>solo</code>模式对于web开发来说，也是一种全新的体验。</p><p>剩下的两个，<code>winsurf</code>我没咋用过，不过前段时间这家公司经历了：OpenAI 收购谈判破裂 -&gt; 关键团队被谷歌“逆收购”挖走 -&gt; Cognition(Devin) 收购剩余团队及资产 -&gt; 快速裁员与买断施压，这么大的变动，也不知道能不能继续走下去。</p><p>至于 <code>Athropic</code> 自己推出的 <code>Claude Code</code>，好用不用多说，但其高昂的订阅费用确实令我望而却步。</p><p>距离 <code>ChatGPT</code> 出现才过去了2年多，那时候真的很难想象 <code>Vibe Coding</code> 这种编码方式。从最初的 <code>cursor</code> 和 <code>winsurf</code>，到现如今各种 AI 编程工具：<code>augument code</code>，<code>trae</code>，<code>kiro</code>，<code>Claude Code</code>等。</p><p>比较可惜的是，驱动这些工具发挥出超乎寻常人的编程能力，都来源于 <code>Athropic</code> 这家公司背后的模型<code>Claude</code>，<code>Claude</code> 一家独大，长期占据着AI编程领域的 <code>SOTA</code>。</p><p>跑分榜上比肩的大模型不少，但实际体验仍然没有一个大模型能超过<code>Claude</code> 。 “一枝独放不是春，百花齐放春满园”。</p><p>不过，从<code>GPT-5</code> 模型能力的提升逐渐趋于平缓的情况和开源模型的逐步追赶，我大胆猜测，除非新的堪比<code><i>transformer</i></code> 的架构出现，否则比肩 <code>Claude</code> 的大模型迟早会出现。</p><p>我十分期待能有新的能比肩 <code>Claude</code> 的模型出现，通过良性竞争，让顶尖 AI 模型的 API 价格能更加亲民。</p><p>但无论这些工具如何迭代，<code>Claude</code> 的领先地位能维持多久，我们作为使用者都应该认识到，工具终究是外物，而驾驭工具的”心法“，也就是我们今天探讨的<strong>上下文工程与提示词工程</strong>——其重要性将愈发凸显。</p><p>与其被动地等待下一个”更聪明“的 AI，不如主动学习如何为我们现有的 AI “构建大脑”。理解如何提供精准的上下文，如何设计严谨的工作流，这种能力在未来只会更有价值。今天文中所分享的 MCP 协议和提示词框架，便是我在这条路上的一次探索。它或许不是最终答案，但我希望它能为你提供一个起点，一个不再仅仅是与 AI 对话，而是与 AI 共事的全新视角。</p><p>当然，技术日新月异，我的这套工作流也必然有其局限性。它更多的是一种思路的抛砖引玉。如果你对文中的 MCP 工具或提示词有更好的改进建议，或者你有自己独特的 AI 协作心得，非常欢迎在评论区分享你的经验和思考。</p>
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>