<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>少数派 -- Matrix</title>
        <link>https://sspai.com/matrix</link>
        
        <item>
            <id>https://sspai.com/post/100979</id>
            <title>被忽视的游戏“系统字体”设计。</title>
            <link>https://sspai.com/post/100979</link>
            <guid isPermaLink="false">https://sspai.com/post/100979</guid>
            <pubDate></pubDate>
            <updated>Tue, 15 Jul 2025 06:16:53 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 字体设计,游戏UI,复古风格,易读性  

总结: 文本探讨了字体设计在游戏中的重要性，强调字体需兼具易读性和与游戏主题的契合度。通过《控制》《使命召唤：黑色行动6》《毁灭战士：黑暗时代》《寂静岭2》《光与影：33号远征队》等游戏案例，分析了不同字体如何传递特定风格和情绪，如复古工业风、硬朗军事感、古典石刻特征等。文章指出字体选择需考虑功能分工（如标题、正文、数字显示）、历史渊源（如受罗马铭文启发的Cinzel）以及多语言适配（如Noto Sans）。最后以《光与影》为例，指出过度追求风格可能牺牲易读性，需通过MOD优化。 </div>
                        <hr>
                    
                    <p>选字体可不是件容易事，首先得保证好读，字体得清晰，哪怕字号小、屏幕分辨率不一样，也得让玩家能轻松看清。</p><p>字体还得跟游戏的主题、氛围、剧情搭调才行，这一点大家都懂。要知道，字体设计这东西，能直接成就一款游戏的美感，也可能毁掉它。对设计师来说，字体是和玩家沟通的重要工具，不光是文字内容本身在说话，文字的呈现方式，也就是字体的模样，同样在传递着信息和情绪。</p><hr /><h2><strong>控制</strong></h2><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/30cfe6fdf9a4ef182eb1006ba8c452ed.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>《控制》这款游戏的美术设计真的很有意思，采用了 20 世纪 60 年代野兽派的设计风格，故意让游戏里的内部空间看起来不那么现代，<strong>充满复古工业风的厚重感</strong>。特别是字体设计这块，设计师用有限的实用字体，把这种复古美学拿捏得很死。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/c9c48d2d09022405c409444cc1cb8ba7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>游戏里那些档案和信件用的是 Linotype 版本的 Akzidenz-Grotesk 字体，这是 “瑞士设计” 风潮里的流行字体，也是 20 世纪 60 年代商业设计的常用款。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/9b67ecc2948d35856ff698a97372d10e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/57c10467dd266fdf6775dba3d0d45d93.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>对了，玩《控制》的时候注意留意，游戏里的建筑物内部会移动，所以一定要跟着绿色方向指示牌走，不然很容易迷路。这些指示牌用的是 Interstate 字体，它的设计灵感来自 20 世纪 60 年代美国州际公路系统扩张时常用的 FHWA 字体，认路又醒目。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/bd2ddebafb0f318fc602e9a8dc052f23.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/96cae61d168181ae1a456773ac6e3c1d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>还有 ITC Avant Garde Gothic 字体的用法也讲究。它只在玩家进入主要区域时，用粗体字出现，就算游戏里打得热火朝天，玩家也能一眼注意到。而且这字体用得特别克制，就一个连字符，没有其他多余的字母样式，看着又简洁又有个性。虽然这字体 70 年代才诞生，但它的灵感来源是 60 年代《Avant Garde》杂志的标识，跟游戏整体调性还是搭得上。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/e5e92c98de9f23f8ea0a9a3c8be863b0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>设计师把游戏里外的字体和标识都统一了风格。不管是界面 UI 还是游戏内的 HUD 元素，我觉得很棒。</p><h2><strong>使命召唤：黑色行动6</strong></h2><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/9ea02599ae894b7c0400f169becb0cf1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在FPS游戏里，用方正无衬线字体就像不成文的规定，《黑色行动 6》当然也稳稳接住了这个传统。</p><p>整个游戏 UI 几乎被 Kairos Sans Condensed 字体承包，大标题和部分次要文本都用它，看着硬朗又醒目。而遇到大段文字时，就换成 TT Lakes Neue 及其 Condensed 变体，毕竟 Kairos Sans 棱角太明显，读长文容易累眼，字体分工相当科学。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/d27fab75b73fc485c221dc7b551606d6.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>字幕用的 Helvetica 等宽字体也很讲究，打眼一看就像在看文字记录，跟《黑色行动》系列那种 “非官方机密感” 完美适配。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/98c36350640aa93b107975d253eb254c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>Helvetica 在游戏里还有另一重身份，专门负责数字显示。至于计分板和玩家名，则启用经典的 Noto Sans 字体，多语言适配很稳，完全不用担心乱码。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/cc3419775991efaaf212de7d0d6de2e0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/1cf49b7f81daebb4cc7ca9dbb4f3759c.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2 style="margin-left: 0px;"><strong>毁灭战士：黑暗时代</strong></h2><p style="margin-left: 0px;">所有 UI 字体都用了 Cantoria 。这字体是设计师罗恩・卡彭特在1986 年设计的，属于带石刻字体特征的衬线字体。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/04c980f0b5f752ad205c9b47c4201c0f.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/06fe4d4063738b3a64d281d4d891d4d2.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">字体以开放形态和大写字母为特点，还有 10 种字重可以选，应用场景特别广，用在游戏 UI 上，既贴合界面风格，读起来也清晰，把那种硬核又有设计感的氛围衬得挺到位 。</p><h2 style="margin-left: 0px;"><strong>寂静岭2</strong></h2><p style="margin-left: 0px;">在研究游戏截图的时候，发现它的 UI 用了衬线字体。后来仔细查，才搞清楚：Noto Serif 是主要字体，撑起界面文字的基本风格，Barlow 算次要字体，存在感弱一些，就按钮提示、部分制作人员名单这些地方会用到 。</p><p style="margin-left: 0px;">Noto Serif字体，左侧显示物品，右侧显示弹药计数器</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/2778a537015971e888a0c4e40b50472b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>Noto Serif字体</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/44f72304a34f8f94e0b6fa8255edf320.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>Barlow字体 用于右下角按钮提示。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/884f1aa14081b8732eda40c248af7033.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>主菜单，整个界面以红色为主色调。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/2941e861e8e444b190cccd3aa2eb26ec.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>&nbsp;</p><h2 style="margin-left: 0px;"><strong>光与影：33号远征队</strong></h2><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/93ae5fe7d8566ccf26b33a69f1554c76.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>标题的字体使用了谷歌字库的Cinzel，可免费使用</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/a71454e7154df6404219bc7872268b10.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这字体设计灵感，能追溯到公元一世纪的罗马铭文，是照着古典比例来设计的。但它不是单纯玩复古，在传承拉丁字母那老长历史的同时，还往里头掺了现代感，让古典和当下来了个有意思的融合 。是葡萄牙 字体设计公司 NDISCOVER的作品，其他作品也不错。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/929ca82ce32fcc2094f652ef9fd8c290.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>UI<strong>正文</strong></h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/d7e2eca6f3e6d68b2d1f3b83706a6593.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">UI里技能描述、功能标题这些正文部分，用的是 IM Fell Double Pica 字体。字体历史悠久，早在 1686 年，约翰・费尔把它送给牛津大学，传承到现在。</p><p style="margin-left: 0px;">从字体本身来讲，它是用于印刷排版的（字体的母版最早出现在牛津印刷厂）。在印刷排版中，字体的易读性、协调性以及对氛围的营造都很重要。而 “IM Fell Double Pica” 字体被应用到游戏里，也延续了它在印刷领域的一些特质。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/17608f6784e972ed1cc5127d27a383c4.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>现在在谷歌字库能免费下载用，游戏里用它当系统字体，古朴感一下就出来了，和游戏整体风格还挺搭 。</p><h3 style="margin-left: 0px;"><strong>数字</strong></h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/89e1c9d5d035bd170bc4a8a9541a0a4b.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">用的是 Bebas Neue ，常被拿来做标题、说明文字，属于一个通用又好用的字体。</p><p style="margin-left: 0px;">说起来，这游戏挺会选字体的。Bebas Neue字体是在 Bebas 原版字体基础上改的，有 OpenType 功能，在游戏里显示数字这些内容，清晰又利落，和 UI 界面适配得挺好，既让信息好读，又给界面添了份利落的设计感 。</p><p style="margin-left: 0px;">我找到了原版字体，截止2019年，目前在谷歌字库免费使用。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/e1d29655ba688be466a84df665293033.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3 style="margin-left: 0px;"><strong>战斗/连击效果</strong></h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/7a75b79ee988d4a241ebd1fcf6a36628.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>战斗里那连击效果显示的字体，用的是 The Sherloks Vintage，在游戏一堆字体里，算很华丽的了。这是 Dikas 字体工作室的作品，有常规、斜体常规、复古、斜体复古四种风格，还带手绘字符和 OpenType 功能，本来就特适合做复古设计，游戏整体风格融合得也不错，让战斗反馈的视觉体验更好了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/3e2f230323fd8c7d397a90190449c6c2.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3 style="margin-left: 0px;"><strong>过场动画</strong></h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/99c52392974a9740d663dd04c3cd0bb4.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">过场动画字幕用的是EB Garamond字体。它其实是 Garamond的免费开源版本，连由 罗贝尔·格朗容（ 法国刻字师 ）设计的斜体、希腊文和西里尔文字符都有。它名字是 Egenolff–Berner Garamond 的缩写，而且字母样式是从 1592 年印刷的 Egenolff–Berner 样本里取来的。</p><p style="margin-left: 0px;">字体看起来既优雅又有历史感，和整个游戏氛围一致。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/1788b2b285fa38c2dc4f4c6ff82c096e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3 style="margin-left: 0px;"><strong>其他问题</strong></h3><p style="margin-left: 0px;">设计师统一了整体视觉风格，但是忽略了易读性。就像技能、字幕、说明这些文字，原版字体看着不够清晰，对玩家理解技能机制多少有点影响。不过好在 N 网有网友上传了更换字体的 MOD ，对比原版和 MOD 后的界面，换了字体后，信息读取顺畅多了。</p><blockquote><p style="margin-left: 0px;"><a href="https://www.nexusmods.com/clairobscurexpedition33/mods/57">https://www.nexusmods.com/clairobscurexpedition33/mods/57</a></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/61619bc3520abf69dbbd1fb83fd91611.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/400fefdf743b74a8cf29d8db18d22bb6.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/be8838d560bed05599fa11d612633f09.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure></blockquote>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101046</id>
            <title>一个人的编年史：用 Lifelog 记录属于你的生活日志</title>
            <link>https://sspai.com/post/101046</link>
            <guid isPermaLink="false">https://sspai.com/post/101046</guid>
            <pubDate></pubDate>
            <updated>Tue, 15 Jul 2025 06:08:18 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 记录软件,日常生活,数据统计,隐私保护

<br>
<br>
总结: 本文介绍了一款名为Boring的生活记录软件，旨在帮助用户记录日常饮食、咖啡、排便等生活细节。软件提供多种记录模式（图片、文字、图文）和主题，支持时间线浏览和数据分析功能。附加功能包括日记、体重、纪念日等，并能与健康App和天气数据同步。软件注重隐私保护，支持离线存储和iCloud同步，即将推出批量照片记录功能。 </div>
                        <hr>
                    
                    <p>昨天早餐吃了什么？</p><p>点过的咖啡中，哪一杯最美味？</p><p>有时候总会记不起昨天吃了什么，于是萌生了做一款记录自己吃什么，喝什么的软件。刚开始和别人介绍自己的想法时候，大家都觉得很无聊，说你怎么能想到这种点子，但我还是很坚持的做了下来，我觉得不爱记录的人是体会不到记录的快乐。</p><p>当然也为了对抗这种“无聊”的点子，最开始 App 的代号就是 Boring。</p><hr /><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/15/04100c46dd644b60b17dfa493b7ebaa4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>主页、详情页和事件日历页</figcaption></figure><h3><strong>记录最为了更好的回顾。</strong></h3><p>在主页可以直接滑动时间线，浏览自己最近的三餐记录或咖啡记录。</p><p>除了这些基本的日常记录，我还会记录自己今日是否💩了么？骑车了吗？</p><p>同时为了兼顾各种信息的展示，主页支持多种主题模式：</p><ol><li>图片模式（多图展示，支持最多 9 张图片自动拼图。单图模式，默认显示第一张图片。）</li><li>文字模式（适合不爱拍照的记录者，更加专注事件发生的内容频率。）</li><li>图文模式（图片+内容的同时展示。）</li></ol><hr /><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/15/a80a9c34b70112059ec88e44a0c9eb18.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>统计页</figcaption></figure><h3>数据统计，随时查阅。</h3><p>完成记录后可以在统计页面查看发生的频率和天数。</p><p>方便回顾上次理发是何时？上次吃麦当劳是何时？今日是否可以敞开大吃碳水。</p><hr /><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/15/2d3cd20ce0550d2f7962a9b9887f9b64.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>快捷添加菜单页</figcaption></figure><h3>附加功能。</h3><p>除过最核心的事件记录功能，App 也附带有其他一些额外功能，适合放入时间线中查看的。</p><ul><li>日记</li><li>每日体重</li><li>纪念日</li><li>待办</li><li>天气</li></ul><p>这些功能内容在创建后，都非常适合在主页时间线上查看和浏览，方便回顾近期情况。</p><p>体重支持自动读取 iOS 健康 App 中的数据，若健康 App 当日已存在记录，则会自动添加记录到 App 中。同时也支持 App 内记录完成后会自动保存到健康 App 中。</p><p>天气也支持系统数据自动读取，根据当前定位自动记录。天气预报可以查看未来，但是当你回顾过去的时候，过去的天气也是组成回忆的关键信息。</p><hr /><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/15/f44475f60ca202bb42b9d89b6888e2c3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>导出数据和 iCloud 同步</figcaption></figure><h3>数据与隐私。</h3><p>App 是完全离线存储数据的，支持 Apple 多设备实时同步，可以在设置-常见问题中查看同步方法。</p><p>对于没有额外购买 iCloud 空间的用户，可以使用「导出数据」，进行第三方存储和备份。待需要时候进行备份恢复即可。</p><p>若您需要完全的隐私可以在「设置」-「关于」中关闭「共享匿名数据」。（在 App 首次下载时候就会专门的页面提示是否关闭。）</p><hr /><h3>即将到来的新功能。</h3><p>本周将会发布 3.9.0 的版本，新版本上线后，支持一次性选择所有照片，完成当日所有事件的记录。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/15/df9c9166839b7942b187195a94477a61.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><hr /><span class="ss-application">&nbsp;</span><p>欢迎大家下载体验。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101029</id>
            <title>词迹：收集句子或段落来学习英语短语的 App</title>
            <link>https://sspai.com/post/101029</link>
            <guid isPermaLink="false">https://sspai.com/post/101029</guid>
            <pubDate></pubDate>
            <updated>Tue, 15 Jul 2025 00:59:03 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 英语学习工具,生词收集,语境记忆,自定义释义  
<br>  
<br>  
总结:  
1. "词迹"是一款通过收集阅读中遇到的生词及上下文语境来辅助英语学习的工具  
2. 支持标记单词、词组和句子，保留原始语境帮助记忆  
3. 允许用户自由编辑释义、音标，并可添加个性化注释  
4. 提供"快捷操作"功能，可自定义模板快速调用翻译等外部服务  
5. 采用"完形填空"方式强化单词拼写和语义回顾  
6. 支持按来源归类生词，适配不同设备屏幕显示  
7. 强调在真实语境中自然积累词汇的学习理念  
8. 认为AI工具应辅助而非替代语言学习 </div>
                        <hr>
                    
                    <p>“词迹” （WordsCollect）是我目前正在开发的一款英语学习工具</p><p>这个 App&nbsp;的最初想法是根据我自己的需求而来：收集阅读过程中遇到的生词，而不是孤立的背单词</p><p>它可以被归类为一个背单词工具</p><p>但是和其他的背单词工具相比有一些不同</p><figure class="image ss-img-wrapper image_resized" style="width: 300px;"><img src="https://cdnfile.sspai.com/2025/07/15/826efd1ff080f987ef1a34ebfbf66154.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>词迹 LOGO</figcaption></figure><h2>收集句子、段落来记录生词</h2><p>通过添加包含生词的句子或者段落，然后标记出生词的方式记录</p><p>适用于日常阅读中遇到生词或者不理解的句子的情景，标记的过程自然也有了这个生词、短语或者句子的语境</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/1edc7fd8a321817f096fb3e873db36a2.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>词组标记</figcaption></figure><p>&nbsp;</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/8df69a96e37ad9ee3da3bf727719a401.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>同一段英文可以标记多个单词或词组</figcaption></figure><h2>支持标记词组和句子</h2><p>我发现很多背单词的工具都是以“词”为中心，但是在日常英语阅读中，有非常多的单词往往以词组，或者是约定成俗的固定搭配，甚至是短句的形式出现，所以 App&nbsp;在开发的时候就支持记录词组，把词组当作生词一样平等对待</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/4e797826e308ec091609e098e402e5ba.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>单词都认识，放在一起组成的词组未必认识</figcaption></figure><p>&nbsp;</p><p>例如，我自己有时候会把一些比较好的表达方式标记出来</p><figure class="image ss-img-wrapper image_resized" style="width: 351px;"><img src="https://cdnfile.sspai.com/2025/07/14/a36e27193b7ee6d1bf02a86a8f9880ce.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>标记表达方式</figcaption></figure><h2>所有的释义都可以编辑</h2><p>App 提供基础的单词释义，用户可以添加自己的释义。</p><p>释义词条可以编辑、删除、添加，数量没有限制，</p><p>你可以当作笔记一样添加对这个单词自己的理解或者其他需要注意的点，</p><p>也可以把从其他专业词典、学习资料中的解释添加进去，汇总到一起，方便后续回顾</p><p>有的同学喜欢全英文的释义，有的同学只想保留释义中的例句，完全可以自己编辑自己做主</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/4560f27bcc50717abf7b9288be096808.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>可以编辑、删除任意词条</figcaption></figure><figure class="image ss-img-wrapper image_resized" style="width: 351px;"><img src="https://cdnfile.sspai.com/2025/07/14/13aa240df792c3afa49dbdc51a3b3508.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>释义自由编辑</figcaption></figure><h2>“快捷操作”无限拓展</h2><p>特别设计了一个第三方扩展功能，我把这个功能命名为“快捷操作（Quick Action）”</p><p>可以把“快捷操作”理解为一个自定义模板，可以是网址模板，App URLScheme 模板，系统剪贴板模板，大模型提示词模板</p><p>例如创建 Google 翻译的网址模板后，可以一键跳转 Google Translate并翻译当前的句子或者段落</p><p>提示词模板可以结合当前单词和语境，一键复制自定义的提示词用于和大模型交互</p><p><strong>这是我自己最喜欢的一个功能</strong></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/ef463f7ad229635a94fa4fbd0b4952ff.gif" /><figcaption>快捷操作 - 一键 Google 搜图</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/64b7d88dff24bf069ec68ee3b62646ca.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>快捷操作的编辑和预览</figcaption></figure><p><strong>为了说明白这个功能，我单独录了一个演示视频：</strong></p> <p>&nbsp;</p><h2>“完形填空”回顾单词</h2><p>回顾功能支持使用系统键盘以“完形填空”的方式拼写出单词</p><p>回顾的过程不仅是回忆生词的含义，选择“记住”还是“忘记”，也要求必须回忆生词的拼写，可以直接用系统键盘输入</p><p>回顾的过程中，可以随时点击“上一个”查看之前回顾过的所有单词，修改回顾结果</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/7d04b6621735810c5ada25f2f2ef169a.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>单词在句子中的含义回顾</figcaption></figure><p>&nbsp;</p><figure class="image ss-img-wrapper image_resized" style="width: 351px;"><img src="https://cdnfile.sspai.com/2025/07/14/32733d9e8bc20f80dffd25d086eeb844.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>“完形填空”来回顾单词的拼写</figcaption></figure><p>目前“回顾”功能还在开发中，现在的版本仅仅是预览，</p><p>“回顾”功能的UI 设计和算法逻辑还没有完善</p><p>还有很多关于“回顾”的想法会在后续开发中实现</p><h2><strong>还有一些细节</strong></h2><h3><strong>按照来源归类浏览单词</strong></h3><p>支持记录生词来自于哪个网址，特别适合精读网上文章的场景，可以按照来源归类汇总单词，方便同一篇网络文章的单词放在一起回顾</p><p>（目前暂时只支持记录来源网址，后续会支持其他来源类型的记录，例如书籍、文档、论文等等）</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/e1866ecdb0f8f2ce8b96113969514a7b.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>按来源网址分组</figcaption></figure><h3>可以随意编辑“音标”</h3><p>其实前面已经说过，“释义”是完全允许自由编辑和添加，这里额外提一下“音标”也是</p><p>一方面，有一些单词或者词组，特别是专有名词， App&nbsp;本身提供的查询没有音标数据，用户可以从其他参考资料中查询然后手动添加上</p><p>另一方面，可以添加一些自己独特的发音助记</p><p>例如我老是记不住 <strong>diesel&nbsp;</strong>这个单词的发音，老是错误的读作“呆走”，其实应该读“低走”，我直接就可以编辑音标，写上“低走”（自从标上这两个汉字后，我再也没有读错了）</p><figure class="image ss-img-wrapper image_resized" style="width: 351px;"><img src="https://cdnfile.sspai.com/2025/07/14/44d40c1eb3e9c1fe0b6e2ad6ffebd1e1.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>使用自己的发音助记</figcaption></figure><p>我个人并不纠结于是不是应该用汉字来标记读音，甚至有时候我还用汉语拼音来标记单词读音，只要能让我记住。</p><p>我能够认识并正确读出国际音标，但是我还是认为用汉字标记是很有意义的，因为能记住怎么发音是最重要的。</p><p>以前我也纠结，强迫自己找到正确的音标，后来有了孩子，观察了小宝宝学习说话的过程，小孩根本不知道什么拼音，一切都是模仿，在后续的语言环境中不断纠错下越说越好。</p><p>我想发音和听力也是一样，首要是能说出来能听出来，不标准没关系，这样有了基本的听说能力后，再去用大量的听的方式纠正和巩固。</p><h3>关于 App 的 UI 设计</h3><p>鉴于自己并不是专业的设计师，所以 App 的设计都是尽量和系统UI 保持一致，尽量做到简洁</p><p>App 首页 UI主体是卡片式，支持横屏，所有 UI 界面都支持横屏，对横屏进行了适配，不是单纯的拉伸。</p><p>确切来说是适配不同屏幕尺寸，横屏或者iPad 大屏幕下，卡片是瀑布流排布。</p><p>在 iPad 上支持窗口大小的拖拽</p><p>没有使用 TabView，没有底部的 tab 栏，尽量使纵向可视空间最大化</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/75ebf3ffaff302d33a170f484c1b15f0.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>iPhone 也支持横屏</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/d6583652bf1108448a5daf2a4d6d6222.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>iPad 上卡片瀑布流式排布</figcaption></figure><h3>原生开发</h3><p>采用的是UIKit 原生开发</p><p>iOS 最低版本要求目前是 iOS 13.0，对老设备比较友好</p><p>随着生词数据的积累，App 首页可能会展示大量的文字段落卡片，所以针对文字渲染进行了优化，滚动会比较顺滑，实测 3000 多卡片在 iPad Pro 2018 （第一代 120Hz 的设备）滚动不掉帧，不用担心数据多了会卡顿的问题</p><h2>关于英语学习我的一点体会</h2><h3>可持续是最重要的</h3><p>如果对语言学习感兴趣，那么你很幸运，充分发挥你的兴趣</p><p>如果本身对英语学习不怎么感兴趣，没关系：</p><p>语言是承载信息的，英语也是，寻找英语世界你非常渴望了解的信息，以读懂理解为目的</p><p>例如：</p><p>遇到一个棘手的技术问题，在英文互联网看看有没有相关的经验，阅读的过程中记录下生词</p><p>喜欢研究美股，找找国外投资者的分析，看看英文原始的财报</p><h3>背单词很重要</h3><p>理解单词是理解英语的基础</p><p>只不过有的人是刻意完成了单词积累这一阶段，有的人单词积累的阶段是在无形中（自己没意识到）的过程中完成。每个人的基础和所面临的客观条件都不一样，没有对错好坏，完成了这一阶段就会豁然开朗</p><h3>背景信息很重要</h3><p>文化背景，时下的新闻，网络热搜等等，都对语言的理解和沟通有影响，可以充分地使用ChatGPT来帮助你了解背景信息</p><p>比如，以前我遇到专有名词都跳过，现在无论是地名还是人名还是一些大机构的名称我都会刻意去记一下，有时也会问问ChatGPT这些专有名词的来源，背景等信息</p><h3>有 AI 了还需要学习英语吗</h3><p>需要。</p><p>能够有不经过转换的原汁原味的获取信息的能力不酷吗？</p><p>而且有些字里行间的信息是不容易翻译的，人工翻译会有“信达雅”的思考和取舍，大模型也会有倾向，本质都是对信息进行了加工和处理，或多或少都有信息的“损耗”</p><p>即便 AI 能够满足我的语言翻译需求，那么在无法使用 AI 的场景下呢？</p><p>不要依赖 AI翻译，要让 AI 帮我们更快速高效地学习外语</p><h2>欢迎测试</h2><p><strong>目前只有 TestFlight</strong>：<a href="https://testflight.apple.com/join/dawtZGAt" target="_blank">https://testflight.apple.com/join/dawtZGAt</a></p><p>当前的正在开发（按优先级排序）<br />1. 单词”回顾”功能的交互以及算法<br />2. 相同单词在不同场景的关联<br />3. 搜索功能比较孱弱，需要增强<br />4. iCloud 同步</p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101028</id>
            <title>BetterLyrics - 一款专为 Windows 打造的沉浸式流畅歌词显示软件</title>
            <link>https://sspai.com/post/101028</link>
            <guid isPermaLink="false">https://sspai.com/post/101028</guid>
            <pubDate></pubDate>
            <updated>Tue, 15 Jul 2025 00:58:18 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: BetterLyrics, WinUI 3, 歌词显示软件, 开源软件  
<br>  
<br>  
总结: 本文介绍了开源歌词显示软件BetterLyrics的开发过程和功能特点。该软件基于WinUI 3框架开发，支持捕获多种播放器的音乐信息并从本地或网络获取歌词，提供沉浸式体验和流畅动画。软件具有标准模式、停靠模式和桌面模式等多种显示方式，并支持颜色自适应。开发过程中借鉴了Lyricify和Salt Player等软件的界面设计，使用Win2D库实现丰富的动画效果。文章还提到了媒体信息监听的技术实现和感谢的第三方库。最后鼓励用户下载体验并提供反馈。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;<br />文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><h2>前言</h2><p>借助于基于 Fluent Design 设计语言和对 Win32 API 极强支持性的 WinUI 3 框架，BetterLyrics 的开发之路显得充满乐趣而不乏味。</p><p>自项目新建文件夹以来已过去 2 个月。过去的一个月，把软件发布到应用商店、收集用户的反馈建议、迭代数个版本，到今天终于有了一个较为完善的成品，现在终于有空闲下心来，分享一下这个我自己做的开源软件和一些开发相关的内容吧。</p><h2>软件简述</h2><p>这是一款沉浸式歌词显示软件，支持捕获当前播放器（如系统播放器、QQ 音乐、酷狗音乐、Spotify、Apple Music 等）播放的音乐信息并实时从本地（本地 lrc、eslrc、ttml 文件）或联网（QQ音乐歌词源、网易歌词源、酷狗歌词源、LrcLib、amll-ttml-db）检索歌词并辅以沉浸式体验、流畅动画展示给用户。</p><ul><li>开源及<a href="https://github.com/jayfunc/BetterLyrics" target="_blank">体验地址</a></li><li><a href="https://github.com/jayfunc/BetterLyrics/blob/dev/README.CN.md" target="_blank">中文 README</a></li></ul><p>觉得好用请点个 star 支持开发者~</p><p>（当前最新版本正在应用商店审核中，若要体验最新版请在 GitHub release 页面中的谷歌云盘链接下载体验，安装方法及更多信息请参见 README）</p><h2>软件截图</h2><p>不过，在分享之前还是先把截图放出来，不然大家看到满满一屏文字说不定就划走了。</p><h3>标准模式</h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/article/7e2806ecd3491e2ee713dcd5f105dc7a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这就是软件的主界面了，可以看到默认状态下无多余元素，只有专辑图片、歌曲名、歌手名、歌词（和翻译）</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/article/1a079aa3a4fe44ffc7eb88a5e26a0a9a.gif" /><figcaption>辉光+上浮动画</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/article/267c1c9f699c0c4dc12b6eb08398bd4c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>扇形歌词</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/article/734fbdeedd0049a50f068379bff2cfee.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>仅显示歌词</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/article/b1654e88ecee0f7e27717e6cdfecd412.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>仅显示专辑封面</figcaption></figure><h3>停靠模式</h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/article/cb05e3ae49a16803b9c17b25b470c433.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>背景、歌词颜色会自适应当前窗口背景、动态更换</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/article/ebc948b8636d3eff5b3715af36292de9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>暗色背景下文字为亮色</figcaption></figure><h3>桌面模式</h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/article/30e5aeecf6b10a7a94459b21af61bbbb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>同样的思路，亮色背景下文字为暗色</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/article/d2389d5cd369b4054127205755ef0498.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>而暗色背景下文字为亮色</p><h3>设置界面</h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/article/174f1ae30db156e368c191254b97cd51.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/article/f3ffb92957505f20556a70f55f3d028d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>众多设置项可供调整</figcaption></figure><h2>开发背景、动机与展望</h2><p>Windows 上的歌词显示/本地播放器软件现在也不算缺乏，相信大家都知道 Lyricify 这一系列的软件，还有 Salt Player。这两个软件的效果当然很不错，但是他们有各自的局限性：Lyricify 4 仅支持 Spotify，Lyricify Lite 仅有灵动岛、桌面歌词两种模式；Salt Player for Windows 主要是针对播放器，歌词方面较为平滑稳重。</p><p>本软件的开发借鉴了这两款软件的界面（当然，不涉及代码，因为这两款软件均为闭源软件），除此之外还参考了 BetterNCM 的 refined-now-playing-netease 插件，停靠模式设计实现灵感来自 MyToolBar。</p><p>未来开发展望是做成本地播放器（本地文件夹+局域网/NAS扫曲），开发期限不确定，看之后的时间分配了。</p><h3>重要部分实现</h3><p>歌词显示软件，顾名思义，怎么显示/渲染歌词就是重头戏。</p><h4>歌词绘制</h4><p>最初开发的时候选择的是构建一个 TextBlock 的 List（现在看来这个想法很傻），但随着动画需求的增加、动画复杂度的堆叠，依靠控件实现的效果并不好。</p><p>于是开始搜怎么优化性能，搜着搜着发现了一片博文【Win2D 中的游戏循环：CanvasAnimatedControl】，再顺着 Win2D 的文档看下去，就找到了最终的解决办法了。</p><blockquote><p>Win2D 是一种易于使用的 Windows 运行时 （WinRT） API，用于使用 GPU 加速进行即时模式的 2D 图形呈现。 它非常适合用于创建简单游戏、显示（如图表）和其他简单的 2D 图形。<br />——引用自微软官方文档</p></blockquote><p>这个库提供了非常多的 Effect 可供使用，例如 GaussianBlurEffect（高斯模糊）、OpacityEffect（透明度）、DisplacementMapEffect（扭曲）、BrightnessEffect（明度）、ShadowEffect（阴影）等等，这些都是能够开发出这款动画丰富的歌词软件的基础。</p><p>整体思路就是先计算、再绘制，绘制的时候要考虑层级关系（遮挡关系，即哪一层先绘制、哪一层后绘制）、哪些层是要当作一个整体处理的，慢慢写下来就差不多了。</p><h4>媒体信息监听</h4><p>这一部分主要想说一下跨线程访问的问题，从SMTC触发的事件所在的线程并不在程序所在的UI线程，所以回调前一定要 <code>DispatcherQueue.TryEnqueue(()=&gt;{ /* Your code here */ })</code> &nbsp;让事件处理在 UI 线程中进行。</p><h4>其他</h4><p>这里还要感谢很多第三方 Nuget 包，包括 Lyricify-Lyrics-Helper（对，就是 Lyricify 那个软件的作者发布的帮助类包，该包提供了歌词下载、解密、解析等功能）、WinUIEx（提供了众多有关窗口的封装方法）、Audio Tools Library (ATL) for .NET 和 TagLib#（提供了读取本地文件元信息的方法）、Vanara.PInvoke（封装了大量的 Win32 API 以供使用）</p><p>感谢你看到这里，别忘了去 https://github.com/jayfunc/BetterLyrics 留下 star 、下载体验。有任何问题欢迎加群（详见 GitHub 内群信息）或创建 issue 反馈。也更欢迎 pull requests。</p><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101011</id>
            <title>让LyricEase起死回生</title>
            <link>https://sspai.com/post/101011</link>
            <guid isPermaLink="false">https://sspai.com/post/101011</guid>
            <pubDate></pubDate>
            <updated>Tue, 15 Jul 2025 00:56:56 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: LyricEase, Charles Proxy, 接口转发, 二维码登录

<br>
<br>
总结: 文章介绍了如何通过Charles Proxy工具将LyricEase软件的登录请求转发到第三方接口，以解决因官方接口验证问题导致的无法登录。具体步骤包括获取unikey、处理二维码生成和状态检测，并提供了详细的配置方法和常见问题解决方案。作者分享了相关工具和脚本文件的下载链接，并说明了安装和使用过程中的注意事项。最后提到登录后可能出现的网络服务错误问题及解决方法。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;">本文发表于 <strong>2025/5/1 22:25</strong></p><p style="margin-left: 0px;">上次修改于 <strong>2025/7/14 13:24</strong></p><blockquote><p style="margin-left: 0px;"><a href="https://www.bilibili.com/video/BV1zv3DzDENN/" target="_blank"><i>此链接为操作步骤，若遇到问题，请按顺序重复视频中的操作两次，若仍无法解决，请在文章末尾查看up联系方式进行协助</i></a></p></blockquote><p style="margin-left: 0px;">本文章与 Bilibili 同名专栏同步，转载请表明 <a href="https://www.bilibili.com/opus/1062021335016800261" target="_blank">链接</a></p><p style="margin-left: 0px;"><strong>建议在动手操作前先看一遍文章内容</strong></p><h2 style="margin-left: 0px;">起因</h2><p style="margin-left: 0px;">&nbsp;</p><p style="margin-left: 0px;">前几天才知道有LyricEase这个软件，但是等我赶过去的时候已经不能正常登录了（悲，为什么每次我发现这种工具的时候都是这样）</p><p style="margin-left: 0px;">但是我甘心吗，我不甘心！看着这么好的一个软件就这么没了，我是真感到失落。<i><s>其他开源替代品我不是没试过，主要是我还是更喜欢LyricEase的界面</s></i></p><figure class="image ss-img-wrapper"><img alt="cut-off" src="https://cdnfile.sspai.com/2025/07/14/article/6b1c4302ccffa09742f6fb81db3fa582.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2 style="margin-left: 0px;">分析</h2><p style="margin-left: 0px;">&nbsp;</p><p style="margin-left: 0px;">咳咳扯远了，虽然但是，根据调试软件来看，我发现它还是能正常发送请求的，貌似只是因为冈易加了个新设备验证（云盾或者什么东西）而Lyric不支持它而已</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/08fce9c0f9e9fbad7763565fec502767.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Charles 中获取到的返回信息</figcaption></figure><p style="margin-left: 0px;">既然官方的请求不行，那我们看看第三方？</p><p style="margin-left: 0px;">巧了，我发现了一个曾经存在的接口项目，虽然现在被冈易封杀，但还是能找到的</p><p style="margin-left: 0px;">那我们应该做什么也已经显而易见了，就是把请求转发到第三方接口上。</p><p style="margin-left: 0px;">我使用了Charles Proxy(charlesproxy.com)来转发请求，使请求格式与第三方接口能够对的上 二维码获取一共三个步骤：&nbsp;</p><h3 style="margin-left: 0px;"><strong>一，获取unikey</strong>&nbsp;</h3><p style="margin-left: 0px;">在Charles上这样配置：</p><p style="margin-left: 0px;"><code>/weapi/login/qrcode/unikey</code>-&gt;<code>/login/qr/key</code></p><p style="margin-left: 0px;">根据文档，我们要在/login/qr/key请求后面加上时间戳来防止缓存，像这样：&nbsp;</p><p style="margin-left: 0px;"><code>/login/qr/key?timestamp=xxx</code></p><p style="margin-left: 0px;">但这样还不够</p><p style="margin-left: 0px;">官方生成的key长这样：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/3789a5e5e4bf2006284eb2408b03acd5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>官方返回的数据</figcaption></figure><p style="margin-left: 0px;">而第三方接口返回的是这样：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/9be32eb4dc55b1ff33d999c2e717d71a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>第三方接口返回的数据</figcaption></figure><p style="margin-left: 0px;">所以我们要在转发时把data层去掉</p><h3 style="margin-left: 0px;"><strong>二，二维码生成</strong>&nbsp;</h3><p style="margin-left: 0px;">第二步研究了一整天，然后才发现Lyricease压根不需要这一步，在客户端中自己就给生成好了</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/2f9597dc4ccaa31e881aa3163eed98c9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>只获取了key，没有状态码的客户端</figcaption></figure><h3 style="margin-left: 0px;"><strong>三，状态检测</strong>&nbsp;</h3><p style="margin-left: 0px;">与unikey一样如法炮制即可：&nbsp;</p><p style="margin-left: 0px;"><code>/weapi/login/qrcode/client/login</code>-&gt;<code>/login/qr/check&nbsp;</code></p><p style="margin-left: 0px;">同样的，这个也要在结尾加时间戳，不过还多了一个unikey的值，所以我们需要在转发时提取上一步获取的key加在后面，然后再把时间戳加后面，像这样：&nbsp;</p><p style="margin-left: 0px;"><code>/login/qr/check?key=xxx&amp;tamp=xxx</code></p><p style="margin-left: 0px;">就这样把接口运行在本地，让转发层把接口的返回值返回给客户端，大功告成</p><p style="margin-left: 0px;">整个的流程大概是这样的：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/3f5fa4b37a9aa40575565f93ac390230.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2 style="margin-left: 0px;"><strong>使用</strong></h2><p style="margin-left: 0px;">要登录很简单，下载Charles，上方工具栏：Tools-Map remote</p><p style="margin-left: 0px;">点击左下角加号添加配置，一共两个，一个是：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/9354276e78414b70048ec41668ab435f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">另一个是：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/2f018c7e5751ac3bb27bbf1a09917cf4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">&nbsp;</p><p style="margin-left: 0px;">然后勾选Enable Map remote就好了（不买许可也能用）</p><p style="margin-left: 0px;">然后看看脚本文件。解压后有俩脚本文件， 一个 start.ps1 文件</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/2760e576fd9f8690381c634dc29a2539.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">与一个 server.js 文件，</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/cbdd4681b286916edd215c6a73917f41.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">请把他们解压到一个空文件夹里，保证无任何程序占用3000或3001端口，然后右键 start.ps1 文件-使用 PowerShell 运行即可。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/d8dacf4bc9efb860e5015c7b41bc5e3f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">成功登录后终端窗口会关闭。 <strong>待脚本成功运行后打开LyricEase，点击右上角齿轮，勾选</strong><i><strong>网络请求使用HTTP协议</strong></i><strong>，</strong></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/14/14de1bb71feab6ea2716d73c525d2445.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;"><strong>随后点击扫码登陆</strong></p><p style="margin-left: 0px;"><a href="https://www.123912.com/s/YdU9vd-15Q8d" target="_blank">Charles与Lyricease的安装包和脚本文件在这里</a>，提取码:mOAZ</p><h4 style="margin-left: 0px; text-align: center;"><strong>常见问题</strong></h4><p style="margin-left: 0px;">1》如果你遇到了窗口一闪而过的情况，请尝试在 Windows Power Shell(管理员) 输入：</p><p style="margin-left: 0px;"><code>Set-ExecutionPolicy RemoteSigned</code></p><p style="margin-left: 0px;">这将允许系统执行脚本操作</p><p style="margin-left: 0px;">2》如果你遇到"<code>未找到指令npm</code>" "<code>MODEL_NOT_FOUND</code>"一类的错误，请重新运行脚本&nbsp;</p><p style="margin-left: 0px;">3》如果你遇到“检测本地服务”超时的问题（最多30s）请检查任务栏中的一个命令提示符窗口是否有让你确认什么东西，如果有请输入y后回车&nbsp;</p><p style="margin-left: 0px;">4》如果在解除应用回环时遇到问题，请在 Windows Power Shell(管理员) 窗口中定位到脚本文件并手动执行</p><h4 style="margin-left: 0px;"><strong>关于LyricEase的安装</strong></h4><p style="margin-left: 0px;"><strong>先去设置打开开发者模式，然后回到安装包，安装包里有个cer证书文件，已经过期了，你需要调整你的系统时间为证书有效期（2023/10/17-2024/10/16），然后双击证书-安装证书-本地计算机-将所有的证书都放入下列存储-浏览，选择[</strong>受信任的根证书颁发机构<strong>]，然后完成就可以直接双击appx了（完成后别忘了把时间改回来）</strong></p><p style="margin-left: 0px;"><s>我不会代码，这些代码都是ai写的，出问题我不一定会但我尽量帮忙（</s></p><p style="margin-left: 0px;"><strong>只支持扫码登陆！！登录一次后能够自动登录。</strong></p><p style="margin-left: 0px;"><strong>我知道你很急（扔到回收站），但你先别急</strong> <strong>这种方法登录后过几天可能会弹出提示：网络服务出错</strong> 别慌，<s>你不需要思考自己最近是不是看片看多了，电脑中毒了</s> 你只需要重新按照文章流程走一次就好，很简单 打开Charles，运行脚本，扫码登陆就行 这个问题我暂时不清楚，貌似是随机的，不过不太影响正常使用<s>，再怎么说也比网易那个好用就是了</s></p><p style="margin-left: 0px;">如果遇到了一些网站无法访问的情况，是正常情况，因为 Charles 用的是 Windows 代理，只需要关掉它或者在上方的工具栏里的 Proxy-Windows proxy 就好了<s>（但这样就不能再转发或捕获了喵）</s></p><p style="margin-left: 0px;">有问题加我QQ：2663942560</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/100978</id>
            <title>18 年后回看 Windows Vista：它真的那么糟糕吗？</title>
            <link>https://sspai.com/post/100978</link>
            <guid isPermaLink="false">https://sspai.com/post/100978</guid>
            <pubDate></pubDate>
            <updated>Mon, 14 Jul 2025 15:10:45 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Windows Vista, Frutiger Aero, 设计风格, 操作系统  

总结:  
1. 文章回顾了Windows Vista的设计风格和技术特点，特别是其Frutiger Aero美学，包括玻璃质感、动效和拟物化元素。  
2. Vista引入了多项创新技术，如UAC权限管理、DirectX 10图形API、SuperFetch/ReadyBoost缓存优化和DWM窗口合成器，但当时硬件门槛高且兼容性差。  
3. Vista因性能问题、频繁弹窗和驱动不完善而口碑不佳，但其技术为后续Windows 7奠定了基础。  
4. 文章将Vista与iOS 26/macOS 26的设计回潮对比，指出两者在美学和权限管理上的相似性，但用户接受度因时代差异而不同。  
5. Vista被视为超前但生不逢时的产品，其理念在后来系统中得到优化和继承。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;</p><p style="margin-left: 0px;">文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><h2>前言</h2><p>在 WWDC 2025 上 Apple 发布了 iOS 26/macOS 26，这套新系统一改沿用了多年的扁平化设计风格，带来了液态玻璃和丰富的动效设计，也再度掀起了对界面质感和视觉空间感的热烈讨论。有人感慨「历史果然是个轮回」，也有人调侃「iOS 26 不过是把 2007 年 Windows Vista 没能真正实现好的那套东西做出来了」。</p><p>毛玻璃、柔和光泽投影，这些曾被扔进「过时设计」垃圾桶的元素，确实也让我重新想起了 18 年前那一代极具争议的操作系统——Windows Vista。Vista 所代表的 Frutiger Aero 美学，正是当下 Liquid Glass 风格的早期雏形。</p><p>2007 年，微软发布了 Windows Vista，Vista 即拉丁语中的「远景」。彼时 Windows XP 已统治全球 PC 桌面超过 5 年，堪称史上最成功的 Windows 版本，几乎所有人都在期待微软的新系统能再次革新操作体验。同一年，Apple 推出了以重新设计的桌面为卖点的 Mac OS X Leopard（10.5），Linux 社区则在玩着 Compiz 的 3D 桌面旋转特效。微软对 Windows Vista 寄予厚望，它开发历时 5 年，几乎重写了系统内核、安全机制、图形渲染架构，除了全新的 Aero 界面，DirectX 10、DWM 等新特性也引人注目。</p><p>然而发布之后，Vista 却迅速成为微软历史上争议最大的一代 Windows。硬件兼容性差、频繁弹出的 UAC 权限确认，再加上高昂的硬件门槛，让它口碑逐步崩塌。当你问出「史上最糟糕的操作系统排名」，除了砍掉开始菜单的 Windows 8，Vista 往往也位列前排。</p><p>但 Vista 与今天这场设计回潮竟有着某种微妙的呼应，回头再看 Vista，它真的那么糟糕吗？还是因为太超前、太过生不逢时？ 这篇文章便想带你回顾这款曾经被痛骂的系统。</p><h2>设计风格</h2><h3>Windows Aero</h3><p>微软官方将 Windows Vista 的界面语言命名为 Windows Aero，也就是 Authentic、Energetic、Reflective、Open 这几个单词的首字缩写。这是自 Windows 95 以来，微软对 Windows 操作系统界面设计的一次全面升级，涉及系统控件、任务对话框、向导程序、控制面板、图标、字体、用户通知、文本排版等方方面面。这套视觉体系后来在 2005-2012 年间广泛应用于微软产品，包括 Windows Vista / 7、Office 2007 / 2010 和 Windows Live 系列等。</p><p>即使是 2025 年在虚拟机中重新体验，Vista 的 Aero 界面那层泛着柔和动态模糊的玻璃窗框，和 Win+Tab 下的 3D 窗口切换动效，以及在界面逻辑和交互细节上的成熟度，都显得毫不逊色。</p><figure class="image ss-img-wrapper image_resized" style="width: 654px;"><img src="https://cdnfile.sspai.com/2025/07/12/e497364c3457003d5e682fec2c5a8d9c.gif" /></figure><p>控制面板的分类进一步细分，所有设置条目层级一致、排布整齐，还加入了搜索和用户安全设置。无论是图标设计、侧边导航栏还是默认壁纸，都和系统整体的风格非常契合。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/85973a5f696a676d0e4b51f000ee5d21.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>任务栏窗口缩略图实时预览也是第一次出现在 Windows 上，即使是视频播放窗口即便最小化也能通过缩略图实时更新，这一功能在 macOS 上可以通过类似 HyperDock 这样的工具实现<strong>。</strong></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/798fbeb2b66451f8a3501df27cc6a774.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>Windows Vista Ultimate 版本独占的 Windows DreamScene 动态壁纸功能，更是当年先于时代的尝试。它允许用户将任意视频作为桌面动态壁纸播放，而微软此后在 Windows 7 中取消了这一功能，成为 Vista 独有的视觉彩蛋。不过受限于时代机器配置，实测只能够支持最高 720P 的视频。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/ef7c813422ad9922ab31a2f3e067a589.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>此外，Vista 也是 Windows 平台第一次引入 Widgets。它将常用功能如时钟、天气、日历、RSS、系统监控等以小型动态挂件形式固定在屏幕右侧栏，这个功能也被延续到了 Windows 7 当中。通过 IE 浏览器订阅少数派的 RSS 源就可以在桌面看到实时的文章更新。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/0cc6f7a6aa617236927a2d61001f2332.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这些看似「配套设施」的交互细节，其实才是 Vista 真正耐得住重新体验的部分。它不只是一套炫酷的 UI 皮肤，而是一种围绕统一视觉语言、清晰操作逻辑和实时交互反馈设计出来的整体。</p><h3>Frutiger Aero</h3><p>在设计和美学社区，人们更喜欢用一个非官方却极具代表性的名字来称呼 WIndows Vista 的视觉风格：Frutiger Aero。<a href="https://cari.institute/aesthetics/frutiger-aero">这个名称</a>最早由消费者美学研究所（Consumer Aesthetics Research Institute）的 Sofia Lee 在 2017 年提出，并在 2022 年前后开始于网络社群广泛传播。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/43928a92f0ebdc1459ffb17ef2381699.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Consumer Aesthetics Research Institute 对于 Frutiger Aero 的陈列</figcaption></figure><p>「Aero」 源自Windows Aero，而 「Frutiger」 则取自瑞士平面设计师 Adrian Frutiger，他设计的同名无衬线字体曾广泛应用于公共空间导视与平面设计。</p><p>不过严格来说，Windows Vista 实际使用的并非 Frutiger 字体，而是由 Monotype 设计的 Segoe UI。这款字体的结构、笔画比例和字母造型与 Frutiger 极为接近，尤其是小写 a、e、g 以及数字 1、4、7 的细节特征，被视作 Frutiger 风格的屏幕优化版本。<a href="https://www.reddit.com/r/FrutigerAero/comments/1fqdjog/no_frutiger_aero_uis_do_not_use_frutiger_font_not/">Reddit 上的网友认为</a> Adrian Frutiger 推广了一种名为「人文主义无衬线字体」的设计技法。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/e308cdb24f7c7a9af4d3a6d37e0715b6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Frutiger 字体与 Segoe UI 字体的对比，由 identifont 提供</figcaption></figure><p>Frutiger Aero 美学的核心特征包括：</p><ul><li>拟物化：界面元素看起来像真实物体，有质感和立体感。</li><li>光泽与玻璃质感：大量使用渐变、光晕、反光效果，让界面仿佛覆盖了一层玻璃。</li><li>自然元素：如水、泡泡、天空、极光等，常见于壁纸和 UI 装饰。</li><li>色彩：以蓝色、绿色和白色为主，营造清新、科技感和未来感。</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/ac730b20933c18a713f590e490217133.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Windows Vista 提供的壁纸</figcaption></figure><p>如果以上描述对你来说仍然十分抽象，不妨在社交平台搜索 Frutiger Aero 相关的帖子。对不少 95 后用户来说这种风格绝不陌生，可能现在的你会觉得这种风格十分压抑，但它代表了那个时代人们对数字科技、未来生活与数字界面情感化的想象。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/0b301a59f9c5246c449b3071f593b1bd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>拟物化</h3><p>拟物化是指在 UI 设计里指的是界面元素模拟现实物体的外观、材质、纹理、投影、光泽或结构，让用户产生熟悉感，降低学习成本。</p><p>在这件事情上 Apple 和微软走的是两条截然不同的路线。Windows Aero 通过毛玻璃窗口、高光按钮、立体材质等手法，强调界面的空间感和数字质感，试图营造出「带物理属性的虚拟材质界面」。它不打算让用户觉得这是现实中的物品，而是数字世界里的一种虚拟玻璃、科技水晶。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/ee52c4a417e770c7334edff0b34374f6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Windows Vista 的窗口</figcaption></figure><p>而当年拟物化风格的 iOS 和 macOS，则更倾向于直接还原现实物件的材质（皮革、木纹、金属）和形态，唤起用户的直觉操作习惯，让界面看起来就是现实生活中的「皮革日记」、「木质书架」。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/c56f2c942712b078194349fc8fcefda8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>拟物化时代的 Dock 也包含了反射效果</figcaption></figure><p>Windows Vista 所代表的 Frutiger Aero，不仅是微软操作系统美学的重要转折点，也是 2000 年代桌面操作系统界面设计的高光时刻。Frutiger Aero 虽然起源于 Windows Vista，但凭借其广泛应用，逐渐成为 21 世纪初科技界面美学的重要标志。</p><h2>Vista 的「激进」技术野心</h2><p>Windows Vista 并不是简单的「换个界面」，它实际上是微软有史以来最彻底的一次操作系统内核与体系改造。许多今天我们在 Windows 和 macOS 上习以为常的机制，正是 Vista 时代初步建立的。换句话说，Windows Vista引入了多项黑科技，但这些技术并没有完全被用户接受和认可。</p><h3>安全性：UAC 的误解与贡献</h3><p>如果当年你和我一样，使用操作系统的跨度从 Windows XP 直接来到了 Windows 7，你一定对那恼人的用户权限请求弹窗不陌生。</p><p>2001 年发布的 Windows XP，几乎默认以管理员权限运行应用，恶意程序、蠕虫、木马随意篡改系统，全年病毒灾情不断。特别是「震网」、「熊猫烧香」「冲击波」等病毒频繁攻陷家庭和企业内网，微软深感自身安全机制形同虚设。</p><p>Windows Vista 引入了 UAC (User Account Control)机制，强制将普通用户操作权限降至受限状态，任何可能修改系统级内容的操作，都必须显式确认授权。这和 macOS/Linux 下 sudo 权限模型类似，但 Vista 把 UAC 广泛应用到：</p><ul><li>安装程序</li><li>注册表写入</li><li>系统设置</li><li>驱动操作</li><li>...</li></ul><p>然而用户对这个改动并不领情，因为微软当年激进到几乎所有操作都触发 UAC 弹窗，用户点个控制面板、改个系统设置就会弹出确认，体验极差。加之界面是全屏毛玻璃弹窗，中断感强，用户怨声载道。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/bb22eaca9c2e41150dfb74313847a2d2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>启动 App 也会触发 UAC</figcaption></figure><p>即便被骂，Vista 之后 Windows 平台恶意程序入侵率明显下降。后来 Windows 7 调整 UAC 弹窗触发频率，界面也改为轻量式提示，沿用至今。</p><h3>DirectX 10：图形架构革命</h3><p>Windows Vista 还发布了全新的 DirectX 10 图形 API，这是 Windows 平台图形渲染体系的一次彻底重构。相比 DirectX 9，DirectX 10 取消了沿用多年的固定功能流水线，转向完全程序化的渲染架构，统一了像素着色器、顶点着色器、几何着色器的编程接口，并引入 Shader Model 4.0。</p><p>DirectX 10 带来了更高的渲染精度、动态阴影、体积光、粒子与流体模拟效率，同时首次支持多线程渲染 API，解决了以往渲染过程依赖单核 CPU 的瓶颈问题。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/8a7030a01420d740acc0642d628cb1fc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>DX10 vs DX9 图像画质对比，图片来自 TechCrunch</figcaption></figure><p>尽管技术进步巨大，DirectX 10 并未在当年游戏开发领域获得热烈响应。一方面，DirectX 10 强制要求新一代显卡，最低起步是 GeForce 8800 和 Radeon HD 2000 系列，导致大量用户和网吧机器无法满足硬件门槛。另外在<a href="https://techcrunch.com/2007/11/05/dx10-vs-dx9-absolutely-no-image-quality-differences/">媒体测评</a>中指出部分游戏如《<i>Gears of War</i>》在开启DirectX 10 并没有带来任何可见的画质提升，反而会让显卡性能大幅下降。作者还调侃自己花了很多精力和金钱买DX10显卡，结果发现并没有实际好处，反而觉得不值得。</p><p>另一方面，Vista 本身市场表现不佳，兼容性和性能问题频发，游戏厂商担心强推 DirectX 10 会劝退主流 XP 用户，影响产品销量。最终，游戏市场依旧围绕 DirectX 9 生态，经典作品如《魔兽世界》《反恐精英：起源（CS: Source）》《侠盗猎车手：圣安地列斯（GTA: San Andreas）》依旧活跃，真正基于 DX10 特性的游戏屈指可数。</p><p>尽管如此，DirectX 10 的架构意义远远超越了当时的市场反馈。它确立了多项现代 GPU 渲染标准，为 DirectX 11、DirectX 12 乃至 Vulkan 和 OpenGL 4.0 的设计奠定了技术基础。今天诸如实时光线追踪、延迟渲染、多线程渲染管线等技术，所依赖的正是当年 DX10 所确立的核心理念。可以说，DirectX 10 虽然叫好不叫座，但依然是现代图形 API 架构进化史上的关键节点。</p><h3>SuperFetch / ReadyBoost</h3><p>2000 年代 PC 大多装备的是 5400rpm-7200rpm 的 HDD 硬盘，不仅是开机、启动应用还是切换程序都非常慢。Windows Vista 为此引入 SuperFetch 和 ReadyBoost 两套缓存优化机制。在当时 1GB 内存+机械硬盘的主流机器上，ReadyBoost 可提升 10%-20% 响应速度。</p><p>SuperFetch 能够后台监控用户的程序使用习惯，根据时间、频率、模式（如每天早晨打开浏览器、晚上玩游戏），将常用程序和数据提前预加载到内存里，如果遇到内存需求高峰 SuperFetch 会智能释放部分缓存。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/c77f262a7a7e3e414c6c83e6b98dc8a4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>SuperFetch 在 Windows Vista上默认打开</figcaption></figure><p>然而 SuperFetch 在机械硬盘环境下经常导致硬盘灯狂闪，因为它在后台不停扫描、预取数据，影响性能，也因此饱受诟病。当用户看到任务管理器里空闲内存很少，误以为「内存被吃光」，所以在当年论坛也常见「Vista 吃内存」、「内存泄露」的抱怨。由于常用程序缓存进内存，导致大型游戏加载内存不足，进而引发卡顿，使得 Vista 在游戏玩家中口碑很差。</p><p>尽管 Vista 时期用户体验糟糕，SuperFetch 本身的思路没有被废弃，反而在后续系统中持续改进和更名，从 Vista → Win7 → Win10（SysMain）→ Win11，一直是 Windows 内存管理体系的重要部分，只是 Vista 时代算法激进，负面影响太大，直到后续版本逐渐成熟稳定。</p><p>而 ReadyBoost 会在用户插入闪存设备会通过检测设备性能并根据结果创建 ReadyBoost.sfcache 缓存文件，SuperFetch 把部分常用数据缓存到闪存设备（通常是小文件、程序 DLL），当程序需要这些数据时，优先从闪存设备读取，因为闪存设备速度远快于机械硬盘。</p><figure class="image ss-img-wrapper image_resized" style="width: 303px;"><img src="https://cdnfile.sspai.com/2025/07/12/188b036545b0efd565940e0772cba06b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>ReadyBoost 会在插入优盘后弹出菜单</figcaption></figure><p>到了 SSD 普及的今天，ReadyBoost 这项优化技术已经没有现实意义了。</p><h3>DWM：桌面窗口合成器</h3><p>Windows XP 及之前，窗口渲染靠 GDI（Graphics Device Interface）直接向屏幕绘制内容，效率低并且效果有限。当用户将一个窗口拖过另一个窗口时，若被覆盖的窗口未能及时重绘，最上层的窗口可能会留下拖影轨迹。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/ad2103b057a4ae53f8d49db51a4591c7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>在老 Windows 系统上常见的尾影</figcaption></figure><p>Windows Vista 推出了 DWM（Desktop Window Manager），从根本上改变了窗口的绘制方式，每个窗口独立绘制到离屏内存缓冲区（Off-screen Buffer），再由 DWM 动态合成输出。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/5cb24668c83d8e0220de6e518d58e60f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>DWM 渲染机制，图片来自微软</figcaption></figure><p>这项机制除了减少了视觉伪影，还使得 Win+Tab 3D 窗口堆叠切换以及窗口缩略图实时更新、半透明毛玻璃模糊特效等功能得以实现，但由于特效全靠 GPU 渲染，导致了GPU 性能门槛提升，例如在老显卡上无法流畅运行 Aero 主题。</p><p>DWM 实际成为 Windows 7、8、10、11 全部视觉特效的核心，macOS Quartz Extreme 也是同期的机制，只不过 macOS 比 Windows 早四年实现全系统 GPU 加速桌面。</p><h2>Vista 为什么失败？</h2><p>经过前两节的讲述，你或许已经发现，Vista 的技术路线其实相当前瞻，许多设计即便放在今天，也依然不过时。为什么这样一款站在时代前沿的系统，最终却沦为口碑低迷的失败作品？</p><p>我们不妨来拆解一下 Vista 的败局。</p><h3>硬件门槛过高，硬盘+显卡双重劝退</h3><p>时间回到 2006 年，彼时中国家庭电脑普遍仍以单核 Intel Pentium 4 处理器、512MB 内存、80GB 硬盘以及集成显卡的组合为主流配置。如果你恰好在这一年购入了一台新电脑，次年满怀期待地安装上了刚刚发布的 Windows Vista，在开启 Aero 界面后，你极有可能立刻遭遇严重的卡顿与卡死现象。</p><p>愤怒之下，你大骂 Vista 是「史上最烂的 Windows」，然后拎着主机下楼，去小区电脑店请师傅帮你重装那个熟悉、顺畅、朴实无华但好用的 Windows XP。</p><p>根据中关村在线在 2007 年发布的<a href="https://diy.zol.com.cn/76/763484.html">《07年12大经典配置终极点评》</a>一文，当时国内装机市场的主流趋势已经发生了变化：</p><ul><li>CPU：Intel Core 2 Duo 和 AMD Athlon 64 X2 成为双核时代主力</li><li>内存：年初以 512MB×2（1GB）为主，年中到年底则逐渐过渡到 1GB×2（2GB）</li><li>硬盘：7200 转 SATA 硬盘普及，容量从 160GB 到 320GB 不等</li><li>显卡：下半年上市的 Radeon HD 2600XT 才开始支持 DirectX 10，而像 GeForce 7600GT、7900GS 和 Radeon X1650GT 则仍属于上一代产品</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/ac9a88e5466ec6ef45e0fdda98613f5b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>中关村在线给出的经典配置清单</figcaption></figure><p>事实上，只有配备这类新硬件的电脑（微软官方建议至少配备 128MB 显存独立显卡与 2GB 内存），才能真正保证 Windows Vista 中 Aero 界面的流畅运行。即便关闭 Aero 特效，Vista 的基础界面资源占用依旧显著高于 Windows XP。</p><p>为了缓解低配机器的性能瓶颈，前文中的提到的 ReadyBoost 缓存方案受限于 USB 2.0 带宽和当年 U 盘普遍偏低的随机读写速度，这种补救措施带来的实际体验提升非常有限。</p><p>更令用户不满的是，当时微软还联合 OEM 厂商推出了所谓的「Vista Capable」认证标签，但其中大量机型实际上只能运行功能阉割的 Vista Basic 版，根本无法开启华丽的 Aero 特效界面。从这篇央视网发布的<a href="https://news.cctv.com/science/20070108/104727.shtml">《选购三要诀谨防三误区 买台能跑 Vista 的笔记本》</a>足以窥见 Vista 认证让用户选购电脑成为了一件头疼的事情。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/5850c6afbe84911448cc2f2170d85d79.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Windows Vista Capable 标签</figcaption></figure><p>许多用户满心期待地将贴着「Vista Capable」标签的新电脑带回家，开机后却发现 Aero 根本无法启用，系统运行缓慢，体验大打折扣。这一营销误导严重劝退了不少消费者，最终更在 2008 年引发了一场<a href="https://arstechnica.com/gadgets/2008/03/the-vista-capable-debacle-intel-pushes-microsoft-bends/">美国消费者集体诉讼</a>，成为 Windows 发布历史上最具争议的一幕。</p><h3>Windows XP 用户粘性极强，兼容性事故频发</h3><p>Windows Vista 上市时，XP 用户对Office 2003、Photoshop 7、AutoCAD 2004以及各种工具、游戏 Mod 有着极高的依赖，而这些软件大多无法兼容 Vista 新的内核签名机制，运行时频繁报错、崩溃，严重影响使用体验。与此同时，Vista 对驱动签名与内核调用权限实行了更为严格的管理，导致大量 XP 时代的旧驱动程序无法继续使用。</p><p>2007 年上半年，市面上大量品牌打印机、显卡、声卡、USB 设备的 Vista 驱动缺失或不稳定，蓝屏、死机、硬件识别失败现象屡见不鲜，成为用户口中「装 Vista 冒险」的代名词。而在企业和内网环境中，许多依赖 XP 专用软件和定制系统的单位，因 Vista 全面改写的权限控制、安全体系，常见旧程序无法正常安装或运行，导致兼容性问题频发。</p><p>相比之下，Windows XP 在市场口碑和软件生态方面积累多年，企业、学校、网吧用户普遍选择观望，Vista 升级动力远不如当年 Windows 95 → 98 → 2000 → XP 那样顺畅接力，反而让 Vista 在发布初期就陷入了性能瓶颈与兼容性灾难并行的尴尬境地。</p><h3>Windows 7：Vista SP3 的逆袭</h3><p>如果说 Vista 是微软「超前而鲁莽」的一次尝试，那么 Windows 7 就是一次「听劝且靠谱」的修订版，由于内核并没有大的变动只是优化了一些诟病的功能点，所以 Windows 7 也被用户戏称为 Windows Vista Service Pack 3（Windows Vista 只发布了两个版本的 Service Pack）。</p><p>例如 Windows Vista 推出的 UAC 机制，本意是防止恶意程序未经授权篡改系统，提升安全性。但在初版设计里，几乎所有涉及系统权限的操作都会触发全屏毛玻璃弹窗，打断用户操作节奏，包括安装程序、修改系统时间、调整注册表等等，频繁弹窗、强制打断的设计让用户、媒体一片吐槽。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/e8b19cca5387e738649ec816f36ce189.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>WIndows Vista 下的 UAC</figcaption></figure><p>微软最终在 Windows 7 中将 UAC 调整为四档分级管理，默认降低弹窗频率，既保留了核心安全防护，又显著改善了用户体验，自然也换来了用户的好评如潮（虽然我还是认为屏幕变黑卡顿的问题时有发生）。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/bc2505d7531fc29d473a00dd05174fce.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>WIndows 7 下的 UAC</figcaption></figure><figure class="table"><table><thead><tr><th>功能</th><th>Vista (NT 6.0)</th><th>Windows 7 (NT 6.1)</th></tr></thead><tbody><tr><td>Aero Glass</td><td>✅</td><td>✅</td></tr><tr><td>DWM 桌面窗口管理器</td><td>✅</td><td>✅</td></tr><tr><td>UAC</td><td>激进</td><td>四档调节，默认弱化</td></tr><tr><td>DirectX</td><td>10</td><td>11</td></tr><tr><td>SuperFetch</td><td>✅</td><td>✅</td></tr><tr><td>ReadyBoost</td><td>✅</td><td>✅</td></tr><tr><td>驱动签名强制</td><td>✅</td><td>兼容性调整</td></tr></tbody></table></figure><p>不过在我看来，Windows 7 真正做对的，是等来了正确的硬件环境和驱动生态：</p><ul><li>2009 年，主流 PC 内存普遍提升至 2GB+，独显基本普及</li><li>Vista 时期缺失的驱动程序，在 Windows 7 发布前夕已逐渐完善</li><li>UAC 改进，弹窗大幅减少，用户不再频繁被打断</li><li>系统安装体积与内存占用优化，启动和响应速度显著改善</li><li>再加上 Vista「烂口碑」的反衬，Windows 7 顺理成章成为一代「口碑逆袭之作」</li></ul><p>说到底，Windows 7 就是「优化版 Vista + 更成熟的硬件 + 不那么激进的用户策略」，只不过这次微软学聪明了，不再试图强行革新，而是选择了在合适的时机稳步打磨。</p><h2>iOS 26/macOS 26 与 Vista 的奇妙平行</h2><h3>美学考量</h3><p>iOS 26 / macOS 26 的这套视觉风格，其实是在原本极简扁平的界面基础上，重新加入了材质感、半透明毛玻璃效果和适度动效。比如控制中心和通知中心背景会出现柔和的动态模糊，按钮、卡片元素多了些高光和阴影，看上去不再是单薄的纯色平面，画面变得更有层次感。</p><p>不过，它和 iOS 6 年代那种「真实物品复刻」的拟物化不同，iOS 26 没有回头做皮革纹理、金属拨盘之类的极致拟物，而是保留了简洁的界面结构，只在部分细节上增加材质感和空间层次。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/fa6075d689772fefd785a8e23aabc664.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这套风格很容易让人想起 2007 年 Windows Vista 推出的 Aero 界面。Aero 用了大量半透明玻璃、镜面反射、渐变高光和 3D 窗口堆叠动画，试图在桌面系统里营造出晶莹剔透、数字水晶般的视觉效果，展示当时 PC 硬件性能。但正因为这些视觉特效过于炫技，对当年普及率有限的独显和内存要求极高，普通家用 PC 根本无法流畅跑动，最终 Aero 反倒成为 Vista 口碑崩盘的重要原因。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/04cad37dfb73f912b74c5b1081057e03.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Aero 甚至允许用户调整效果，Apple 或许不会给用户这个选择</figcaption></figure><p>有意思的是，类似的情况也正在 iOS 26 测试版中上演。新系统加入的大量动态毛玻璃、实时模糊和复杂动效，部分效果仅最新款机型才能满帧运行。首个 Beta 发布后，不少用户反馈「动画太多、发热明显、帧率不稳」，Apple 也在最新的 Beta 中下调了「液态玻璃」模糊强度，试图换取性能上的平衡。由此见得，即使硬件性能持续进步，如何平衡特效表现和流畅体验，依旧是桌面和移动系统共同面对的难题。</p><h3>安全弹窗和权限管理</h3><p>Windows Vista 推出的启用 UAC 机制初衷是提升安全性，防止恶意程序篡改系统，但频繁打断操作的设计严重破坏了用户体验，最终导致口碑翻车。</p><p>iOS 26 下类似的权限管理依然存在，甚至在日常使用中更加高频。用户在启动 App 时，往往要依次授权定位、相机、麦克风、蓝牙、健康数据等多项权限，且部分敏感操作（如调用定位、后台刷新、跨 App 通信）每次触发都会弹窗确认。与 Vista 不同的是，今天的用户已经逐渐习惯了这套机制，并接受了它作为隐私保护手段的一部分。</p><figure class="image ss-img-wrapper image_resized" style="width: 375px;"><img src="https://cdnfile.sspai.com/2025/07/14/602514d9bedce3383f44dc24e8637631.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>iOS 26 下的 「UAC 机制」</figcaption></figure><p>同时，App Store 的审核规范也愈发严格，应用在首次请求权限时，必须以系统弹窗明确说明用途，用户可以选择拒绝，且随时可在系统设置中逐项管理和撤销授权。</p><p>本质上，Vista 和 iOS 26 的权限弹窗机制，目的都是为了保障系统安全与用户利益，差别只在于当年的用户心理预期尚未建立，而今天的移动设备用户则已对高频权限提示与细化管理形成习惯，接受度远高于当年。</p><h3>用户习惯迁移周期</h3><p>Windows XP 长达 6 年的市场统治，培养出极强的用户粘性。Vista 发布后，面对全新的 UI 风格、频繁的权限弹窗、驱动兼容性问题，用户普遍排斥升级，最终形成「XP 坚守阵地，Vista 集体劝退」的局面，成为当年微软战略失误的重要案例。</p><p>而放到今天，iOS 用户早已习惯权限管理、高频动效和系统毛玻璃背景，哪怕 iOS 26 权限确认次数更多、硬件门槛更高，用户也普遍视作常态，鲜有抱怨。如果把 iOS 26 的弹窗频率和硬件依赖放在 2010 年的 iOS 4 时代，口碑大概率也会翻车。</p><p>两者的差别并非技术优劣，而是用户心理预期的差异。Vista 太超前，脱离了当时主流用户习惯和硬件条件；而今天的 iOS 26，恰好出现在用户对动效、权限细节愈发敏感且接受度成熟的时点，同样激进，但环境适配度刚刚好。</p><h2>结语</h2><p>如果放在 2007 年，Windows Vista 确实是一款失败的产品。激进的权限机制、沉重的视觉特效、不成熟的驱动和软件兼容，注定它无法在当时的硬件和用户认知下被广泛接受。但客观来看，Vista 并非全然无用。它在安全架构、图形渲染、窗口合成和缓存优化等底层体系上的改进，为后续好评如潮的 Windows 7 和之后十余年的 Windows 系统打下了基础。Windows Aero 所代表的数字拟物化视觉，也成为 2000 年代桌面设计高峰之一，只是那个年代的主流设备和软件生态还不具备支持它的能力。</p><p><strong>Windows Vista 就像它的命名</strong>「<strong>远景</strong>」<strong>（Vista）所寓意的那样，提前预览了未来 PC 操作系统应有的样子，只不过它自己没能等到那个属于它的时代。</strong></p><p>今天 iOS 26 面临的处境有些相似，同样激进的动效、毛玻璃效果，在硬件性能和用户心理预期成熟的前提下，逐步可以被主流用户接受。两者的不同，不是理念优劣，而是所处环境和发布时机。</p><p>我在虚拟机里安装并体验了一阵子 Windows Vista，只是找到适配的显卡驱动和虚拟机驱动都要花一些功夫，抛开这些它的问题不谈，Windows Vista 使用下来问题仍然不少，在当年被市场淘汰也不冤。但在深入了解了它背后的设计理念，以及这些功能如何在 Windows 7 里被优化继承后，我对 Vista 的认知也发生了变化。它依然算不上成功的产品，却也不是彻底的失败。很多当年被诟病的东西，如今早已成了 Windows 系统不可或缺的一部分。</p><h2>引用</h2><ul><li>https://en.wikipedia.org/wiki/Windows_Aero</li><li>https://aesthetics.fandom.com/wiki/Frutiger_Aero</li><li>https://en.wikipedia.org/wiki/Adrian_Frutiger</li><li>https://betawiki.net/wiki/Desktop_Window_Manager</li><li>https://learn.microsoft.com/en-us/windows/win32/learnwin32/the-desktop-window-manager</li><li>https://grafismasakini.com/article/frutiger-aero-and-the-nostalgia-for-early-2000s-digital-aesthetics/en</li><li>https://www.reddit.com/r/FrutigerAero/comments/1fqdjog/no_frutiger_aero_uis_do_not_use_frutiger_font_not/</li><li>https://diy.zol.com.cn/76/763484.html</li><li>http://www.identifont.com/differences?first=Frutiger&amp;second=Segoe+UI</li><li>https://vocus.cc/article/65929e94fd89780001c2c9bd</li><li>https://en.wikipedia.org/wiki/DirectX#DirectX_10</li><li>https://techcrunch.com/2007/11/05/dx10-vs-dx9-absolutely-no-image-quality-differences/</li><li>https://tech.sina.com.cn/h/2007-12-08/0635513908.shtml</li><li>https://arstechnica.com/gadgets/2008/03/the-vista-capable-debacle-intel-pushes-microsoft-bends/</li><li>https://www.cnbeta.com.tw/articles/tech/1505658.htm</li><li>https://news.cctv.com/science/20070108/104727.shtml</li><li><a href="https://support.microsoft.com/zh-cn/topic/usb-and-sd-storage-media-readyboost-with-a-sd-card-or-a-flash-drive-f19ab915-5f8a-b131-e6d8-a6900154a42c">https://support.microsoft.com/zh-cn/topic/usb-and-sd-storage-media-readyboost-with-a-sd-card-or-a-flash-drive-f19ab915-5f8a-b131-e6d8-a6900154a42c</a></li></ul><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/100887</id>
            <title>小宇宙非官方报告：数据解析内容生态</title>
            <link>https://sspai.com/post/100887</link>
            <guid isPermaLink="false">https://sspai.com/post/100887</guid>
            <pubDate></pubDate>
            <updated>Mon, 14 Jul 2025 13:15:57 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 小宇宙, 幂律分布, 内容类型, 收听量  
<br>  
<br>  
总结: 小宇宙作为中心化内容分发平台，流量呈现幂律分布，少数内容占据多数流量，不足1%的内容收听量超过10万。平台内容类型丰富，分为9大类，其中“娱乐与群聊闲谈”和“对话与访谈”是收听量最高的两类。高收听量内容的时长普遍更长，可能与创作者的信心和能力有关。样本分析显示，娱乐圈内容在高收听量中占比显著，但总收听时长分布较为均衡。 </div>
                        <hr>
                    
                    <p>自 2020 年 3 月<a href="https://sspai.com/post/59722" target="_blank">上线首个公测版本</a>以来，小宇宙已面世 5 年有余。官方自 2022 年起每年发布过去一年的年度大赏，自 2024 年起每年发布过去一年的年度趋势，除此之外我并未能找到太多小宇宙平台上内容方面的数据，毋宁说从更数据化的视角出发进行的梳理。秉承「自己动手，丰衣足食」的原则，基于机缘巧合获得的 7 万多条样本数据，我对小宇宙上的内容作了简单的分析，是为本文。</p><h3>不足 1% 内容收听量 10 万+</h3><p>幂律分布主宰互联网，小宇宙作为同样是中心化的内容分发平台，也不能免俗，平台的多数流量集中在少数内容上。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/10/4ccf88f2a4fa09800442dc84da694ecd.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>幂律分布转换横座标后，正态程度有所提升</figcaption></figure><p>具体而言，只有不到 1% 的内容收听量达到十万以上，不到 10% 的内容收听量达到一万以上，接近六成内容收听量不足一千。</p><p>说实话，在之前我没想过小宇宙上一条内容收听量超过 1000 可以是这么难跨过的一道坎。另一边厢，在这次的样本中，有唯一一条收听量超过 100 万的内容，是 2024 年 11 月 13 日发布的《S6E9 鲁豫对话陈果 | 命运无常，我有常》。人与人之间的悲欢并不相通。</p><p>常用于描述分布集中趋势的中位数、平均数之间的差异，从另一个角度呈现了这种现象。本次样本的收听量中位数是 655，平均数是 4410，后者数倍于前者，但显然中位数更能代表小宇宙平台上大多数内容的状况。其实收入也是如此。</p><p>在上线早期，小宇宙的流量分发与少数派类似，内容是否有机会在公域曝光，依靠编辑推荐。和所有人工分发流量的机制类似，它容易让人吵起来，常逛即刻和少数派的朋友对此应该不会感到陌生。到了 2025 年的现在，小宇宙也已经改为将算法推荐作为主要分发机制，无论是创作者还是用户，对算法也都会有抱怨，但和对人的抱怨并不在同一个维度。在算法分发之下，有理由相信小宇宙流量分配的马太效应会愈演愈烈。</p><h3>小宇宙的内容类型还算丰富</h3><p>在算法推荐机制下，内容类型是一种常见的模型特征。对于内容平台，算法会从数据角度去了解平台上有什么样的内容、用户对什么样的内容更感兴趣。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/10/f2e937a6b11af8ec768341a5982685fe.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>尽最大可能降低内容类型之间的重合度</figcaption></figure><p>第一个问题在小宇宙的答案如图所示：小宇宙的内容可以被归类为上述 9 大类。有读者可能在<a href="https://justpodmedia.com/document/JustPod-china-podcast-survey-2022-CN.pdf" target="_blank">其它地方</a>看到过似曾相识的分类，这并不让人意外；毕竟上图的分类由大语言模型输出，而它截至目前为止实质上由互联网喂养而成。</p><p>其实小宇宙在营销侧、用户侧对于内容也都进行过分类。前者散落于<a href="https://mp.weixin.qq.com/s/6QfV0c4zweBAs5BI8Ty2IA" target="_blank">年度大赏</a>、<a href="https://mp.weixin.qq.com/s/w6_-RrfqG_z88ryZpEhJ9w" target="_blank">年度趋势</a>的文案之间，后者在 App 端有直接的交互界面「分类」，用户可以从以下类别进行选择：人文、商业、自我成长、社会、科技、故事奇谈、影视娱乐、阅读、趣味闲谈、医疗健康、治愈陪伴、文旅、职业探索、艺术、兴趣生活、饮食、音乐、体育运动、动漫游戏。</p><p>对于小宇宙用户侧的分类，我有两个地方想吐槽：一是我觉得 19 个类别实在是太多了，用户操作成本可能有点高；二是「动漫游戏」这个类别的命名实在太难听，如果想吸引这个领域的核心用户，叫 ACG 显然更好，如果想破圈，哪怕叫「二次元」都比现在的好。</p><h3>现在的小宇宙属于娱乐圈吗？</h3><p>小宇宙对于 ACG / 二次元的标签肯定是不上心的，毕竟这类内容从小宇宙诞生至今影响力还很小，何况连 bilibili 都不上心好久了。将刷数据视为常态的娱乐圈才是平台的香饽饽。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/10/71057f0b285bad718dd081377ee5be3c.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>XX 可能会 XX，但永远不会 XX</figcaption></figure><p>娱乐圈人士进军小宇宙在 2025 年早已不是新闻，它们能带来流量也不是新闻，但是看到「娱乐与群聊闲谈」成为「收听量十万以上」内容占比最高的类型，我还是有点意外，这个比例略高于 30%，远高于排在其后的「对话与访谈」，后者不足 20%。</p><p>和其他收听量级的内容对比，「娱乐与群聊闲谈」在「收听量十万以上」的占比也明显更高：无论是在全样本范围内、还是在「收听量 1~10 万」这个级别的内容范围内，「娱乐与群聊闲谈」的占比都没有超过 20%。在这两个组别里，「对话与访谈」的占比最高。</p><p>另一方面，「知识分享与深度解读」「行业观察与商业故事」「生活方式与兴趣探讨」在高收听量内容的占比低于全样本范围内的占比，可以认为这 3 类内容相对而言没那么受用户欢迎。作为对比，「纪实故事与案件讲述」则颇受小宇宙用户喜爱。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/10/744e9dc3598982b949cb9247a1f2946c.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>今天下英雄，唯使君与操耳。本初之徒，不足数也</figcaption></figure><p>如果同时考虑内容数量、收听量、内容时长，可以认为「对话与访谈」「娱乐与群聊闲谈」都是小宇宙的扛把子。以「人生哲思与心灵探索」类内容为基准，前述两类内容的总收听时长是它的两倍以上，也是唯二达到这个程度的内容类型，抛离其他类型不少。</p><p>这两类内容在小宇宙上数量多、听的人也多，每条内容的时长大概率也不会太短，是小宇宙这个内容平台最容易被贴上的标签。它们彼此之间差别倒是不大，「对话与访谈」略高。对于这两个标签的看法，就见仁见智了。</p><p>现在的小宇宙属于娱乐圈吗？这个问题的回答取决于选择的角度。</p><p>如果看收听量最大的那些内容，我觉得这个问题的回答是肯定的。从收听量来看，可以认为「娱乐与群聊闲谈」是收听量最高的内容类型，听的人多，用户都奔着娱乐圈的内容去，那可不就属于娱乐圈。新浪微博就是一例，毕竟娱乐圈数据刷得最狠的，除了视频平台，就是新浪微博。</p><p>如果看总收听时长，我会简单粗暴地把小宇宙分成 3 份，其中 1 份是娱乐圈的，另外 1 份属于访谈节目，还有 1 份属于其余内容类型。</p><h3>有人听才更有可能把内容做长</h3><p>内容收听时长 = 内容收听量 ✕ 内容时长。小宇宙上的内容有多长，用户心中可能会有不同的答案。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/10/a4e928b42d178527c5c00057324b4bc4.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>差别还是挺明显的</figcaption></figure><p>内容类型对时长会有一定影响，但我发现更有趣的是不同收听量的内容，时长也有明显的差异。总体趋势如上图所示，收听量越大，内容的时长也越长。收听量 1000 以下的内容 50 分钟左右，一千至一万的 1 小时左右，一万至十万的 70 分钟左右，十万以上的 90 分钟左右。</p><p>小宇宙上的内容可以有多长？单条三四个小时的肯定听到过，它们的收听量在什么量级，我相信日常使用小宇宙的读者心中有数。值得好奇的是为什么收听量和时长会呈现出这样的关系。思来想去，我并没有能够获得让自己满意的答案。我能想到的推论是：把内容做长本身并不是一件容易的事，内容收听量大的创作者，更有信心也更有能力把内容做长。</p><p>&nbsp;</p><p>对小宇宙内容的分析暂且告一段落。这次的样本量有 7 万多，难得我不需要为样本量不足而发愁。虽然绝对数量并不少，但和小宇宙内容总量相比，也只是沧海一粟。这个方便样本的代表性如何，我无从判断。之所以在不确定样本代表性的情况下还是做了这些分析、写了这篇文章，主要原因是在公开可搜索的互联网范围内，我没能找到类似的内容。我发出来了，如果运气好，说不定能抛砖引玉，哪位大神看不过眼露一手，满足我的好奇心。</p><blockquote><p>附录</p><p>小宇宙电台 URL 来自<a href="https://xyzrank.com/#/hot-podcasts" target="_blank">这里</a>，<a href="https://fyfy.fm/" target="_blank">枫言枫语</a>在发布于 2022 年 7 月 19 日的<a href="https://justinyan.me/post/5043" target="_blank">这期</a>节目进行了介绍</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/10/074599e44849f635a142ac57adb0eb73.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>确实是机缘巧合</figcaption></figure></blockquote><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/101015</id>
            <title>如何将短信自动转发到群聊</title>
            <link>https://sspai.com/post/101015</link>
            <guid isPermaLink="false">https://sspai.com/post/101015</guid>
            <pubDate></pubDate>
            <updated>Mon, 14 Jul 2025 07:23:50 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 验证码分享,快捷指令,企业微信,自动化  
<br>  
<br>  
总结: 本文介绍了如何利用iPhone的快捷指令和企业微信等工具实现短信验证码的自动转发。首先需要准备iPhone和办公IM工具，然后通过企业微信创建群聊机器人获取Webhook地址。接着在快捷指令中设置推送消息的流程，包括文本拆分和HTTP请求。最后通过自动化规则触发短信转发，并完成授权测试。这种方法可以解决频繁手动转发验证码的烦恼，提高工作效率。 </div>
                        <hr>
                    
                    <p>我们在工作中，有的时候需要将收到的验证码分享给其他同事。比如：</p><ul><li>同事共用一个账号，这个账号每次都需要手机验证码登录。</li><li>订单、通知绑定的是某一个人的手机号码，但是处理后续工作需要其他同事协助。</li></ul><p>这个时候，每次都需要这个手机号码持有人，将短信内容进行转发。一两次还可以，如果频率很多就有点烦人，而且处理及时性也不好。有没有方法，可以自动将收到的短信，转发给同事呢？当然是有的，让我在本篇文章中手把手教学。</p><h2>准备工作</h2><ul><li>一台iPhone，并安装「快捷指令」这个App，此App苹果官方出品无需登录。</li><li>企业微信、钉钉、飞书这些办公IM，或其他支持群聊机器人的工具，下文以企业微信为例。</li></ul><h2>设置步骤</h2><h4>一、企业微信环节</h4><p>1、新建一个企业微信群聊，把需要接收消息的同事拉进群。</p><p>2、在群聊里「添加群聊机器人」，确认后可以获取到一个Weebhook地址。</p><p>3、记录下这个Webhook地址，后续步骤会用到。如果使用的钉钉、飞书，过程类似。</p><h4>二、快捷指令环节</h4><p>1、创建一个「推送消息到企微」的快捷指令，这个快捷指令中的动作依次如下：</p><figure class="image ss-img-wrapper"><img alt="推送消息到企微快捷指令示例" src="https://cdnfile.sspai.com/2025/07/14/article/fb2218d310231d0c61bcfb16d1ad9af2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><ul><li>注释，这里只是介绍了该快捷指令的使用方法。</li><li>文本，把调用这个快捷指令时传入的内容放在一个文本中，方便后续处理。</li><li>拆分文本，把上一步的文本按照“｜”进行拆分，拆分会形成一个类似列表的数据类型。</li><li>从列表中获取项目1，从拆分后的列表中，获取第一项数据，就是webhook地址。</li><li>从列表中获取项目2，从拆分后的列表中，获取第二项数据，就是要推送的内容。</li><li>获取URL内容，实际上就是发起一个HTTP请求，请求地址就是webhook地址，内容按照API要求进行传递。</li></ul><p>如果感觉创建麻烦，可以直接引用我创建的模板，复制链接或长按识别二维码之后在Safari中打开，即可安装。</p><p>推送消息到企微：https://www.icloud.com/shortcuts/abd64491ba754ad0ac74915ddc2aeab7<br />&nbsp;</p><figure class="image ss-img-wrapper"><img alt="推送消息到企微快捷指令安装地址" src="https://cdnfile.sspai.com/2025/07/14/article/c83cc4ca1c1b58e1cba438a8a7f96a0e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>推送消息到飞书：https://www.icloud.com/shortcuts/4bf90815ef624ae8853a914f305b87c4<br />&nbsp;</p><figure class="image ss-img-wrapper"><img alt="推送消息到飞书快捷指令安装地址" src="https://cdnfile.sspai.com/2025/07/14/article/0bd587d2d8183ffc20c572c44f6de72c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>推送消息的钉钉：https://www.icloud.com/shortcuts/600b0f6c9ac5476db0467191f096966a<br />&nbsp;</p><figure class="image ss-img-wrapper"><img alt="推送消息的钉钉快捷指令安装地址" src="https://cdnfile.sspai.com/2025/07/14/article/e5fad75375dee2e7f9164855a8cc9c2f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>2、在「自动化」中添加一个自动化规则，自动化流程如下：</p><ul><li>触发事件：选「信息」。</li><li>触发条件：选择触发条件，信息包含「菜鸟驿站」这个关键词。</li><li>执行方式：选「立即运行」。</li><li>新建执行动作：「新建空白自动化」。</li></ul><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/14/article/27443f94c2211952cf6af8587462c609.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><ul><li>执行动作1：添加「文本」操作，将上面获取到Webhook地址粘贴进来，再输入一个英文的"｜"，再点击页面底部的「添加变量」，轻点「输入快捷指令的信息」。</li><li>执行动作2：搜索操作&gt;快捷指令&gt;运行快捷指令&gt;选择上一步创建/安装的快捷指令。</li><li>完成。</li></ul><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/14/article/bc45d31dfaa682f46eb8fcdb8d16bfd1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>3、手动执行一次并授权，快捷指令在第一次运行时需要做一些授权。所以最后手动触发一次，完成授权。可以用其他人的手机，向自己的手机发送一条符合条件的短信，来测试触发。</p><h2>体验效果</h2><p>因为第二条短信，触发了两个规则，所以推送了两次。<br />&nbsp;</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/14/article/d6229a0d527a3d4b4e36bae48920205a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>进一步思考</h2><p>快捷指令中的「自动化」，让iPhone变成了一台小型“自动化运行服务器”，用短信、邮件、时间、专注模式、地点位置、NFC来触发这台服务器，而借助快捷指令的丰富动作，可以完成非常多的工作，如果完成不了，还可以通过「获取URL内容」这个动作调用API来获取远程的资源。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/100983</id>
            <title>探寻Liquid Glass的实现原理</title>
            <link>https://sspai.com/post/100983</link>
            <guid isPermaLink="false">https://sspai.com/post/100983</guid>
            <pubDate></pubDate>
            <updated>Sun, 13 Jul 2025 14:22:37 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Liquid Glass, CABackDropLayer, SDFLayer, iOS 26  
<br>  
<br>  
总结: 文章探讨了苹果Liquid Glass效果的实现原理和技术细节。通过分析发现，该效果由三层CALayer实现，包括高光轮廓、阴影和内部形变模糊。iOS 26新增了CABackDropLayer私有类，提供多个可调参数控制玻璃效果。进一步研究发现，底层使用SDFLayer（Signed Distance Fields）实现动态融合效果，并配有丰富的SDFEffect子类进行参数调节。性能测试显示Liquid Glass的资源消耗是传统高斯模糊的两倍。文章还介绍了使用工具进行调试和参数修改的方法。 </div>
                        <hr>
                    
                    <p>首先，苹果对开发者开放的API十分的简单，只需要一行代码就能让你的按钮拥有Liquid Glass效果。但是开发者无法对其做更多的调整。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/13/597e111523e4ed3f647d4b8da8ab1e79.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><br />接下来我们使用第三方的视图Debug工具去寻找Liquid Glass的实现。<br />&nbsp;</p><p><br />通过开关几个Layer的isHidden属性我们可以发现，其效果是通过三层CALayer实现，一层负责高光轮廓，一层负责阴影，最后一层负责渲染玻璃内部的形变和模糊。<br />渲染玻璃内部的形变和模糊的私有类叫做CABackDropLayer，这里我们可以使用 OC Runtime Browser 工具，在iOS 26的模拟器下运行，提取出这个私有类的头文件。</p><p><a href="https://github.com/nst/RuntimeBrowser">https://github.com/nst/RuntimeBrowser</a></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/13/f72c49e6b2ea329b4b2b481a9911e49a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>iOS 26 CALayer头文件</figcaption></figure><p><br />通过和 iOS 18 的头文件diff可知，新系统多了几个关键参数，我们可以通过lldb来调用和调整这几个参数，以下是参数和它的含义。</p><ul><li>tracksLuma //是否跟踪玻璃下方的背景来调整玻璃颜色的深浅</li><li>lumaSubrect //跟踪背景色的区域</li><li>allowsFilteredLuma //是否允许给玻璃添加黑色或白色图层</li><li>lumaUpdateRate// 跟踪背景亮度的速度</li></ul><p>比如这里的玻璃效果，通过设置只跟踪左上角的一个像素，可以生成这样背景大部分都是白色，但是玻璃自动变成了黑色效果。</p><pre class="language-htmlembedded"><code>(lldb) expr (void) [(CABackdropLayer *) 0x60000172dcc setLumaSubrect: (CGRect){0,0,1,1}]</code></pre><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/07/13/e2475d4f3ad45a557dcaab02a844e6ef.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/07/13/cf3c1dc444dfa23fde5fb7596c265db6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>&nbsp;</p><p>在iOS26之前，苹果大量使用的高斯模糊风格，同样是通过CABackdropLayer实现的，他的原理是通过私有的高斯模糊CAFilter 采样下方像素并作替换。这里我们猜测他的原理近似，于是我们可以通过lldb打印出filter。</p><pre class="language-null"><code>(lldb) po [(CABackdropLayer *) 0x6000017655c0 filters]
&lt;__NSSingleObjectArrayI 0x600000028fc0&gt;(
glassBackground
)</code></pre><p><br /><br />我们看到果然是这是iOS 26新增的CAFilter类型 glassBackground。<br />同样的，我们可以参照头文件设置其相关参数。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/13/6446fb133d883bf37b72f47c79aafea1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>CAFilter 头文件</figcaption></figure><p>https://github.com/ktiays/GlassExplorer<br />更详细的Keypath 参数设置，可以参考上方的开源项目</p><p>&nbsp;</p><p>那么我们想要探究filter下的原始图像究竟是什么，就需要禁用掉glassbackground Filter，这里我们直接使用一个简单粗暴的method swizzle去block掉所有的setFilters方法。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/13/eae5566eabf781804adb31a27ea66daf.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Method Swizzle具体实现</figcaption></figure><p>于是我们就可以看到下方SDFLayer长什么样子了。<br />&nbsp;</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/07/13/ee03eb78c58fb109b8da4e7ed2abb983.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/07/13/17bc7a8c70b954e0b08dd7657ba033ac.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>&nbsp;</p><p>所有的Glass效果都变成了这样的蓝绿相间的纹理。<br />这就到了下一层SDFLayer了，SDF的全称叫做，Signed Distance Fields 是一种图形轮廓的描述方式。他不直接描述物体表面的坐标，而是存储空间每个点到图形的最近距离。能够实现动态的和连续的物体融合效果。这就是苹果Glass之间实时动态融合的原理。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/13/1941d5d5fc9ea7dc9a762a9b9f7d3c44.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>融合动画</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/13/c87040e9f285f72fa65e24a8f1461766.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>两个使用SDF描述的物体，可以轻松实现参数可调的平滑融合</figcaption></figure><p>而这些纹理似乎是每一点的SDF梯度贴图，但由于映射原因无法展示完全。</p><p>同时SDFLayer又有SDFEffect类作为其配置。<br />可以看到头文件中有大量的SDFEffect子类，提供了特别丰富的物理参数可供调节。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/13/0a2ca52b95bb58b19754cf05da5f4d44.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>比如在选择锁屏这个典型场景下，仅需要在SDFEffect中，将高光的采样范围调整到非常大的数值，就能获得特别棒的效果。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/13/01c2a85eacfb6f6a7da63270f0bacfd6.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>简单总结一下Liquid Glass的原理如下图所示。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/13/e2235647391103f518a35979c03adf59.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>&nbsp;</p><hr /><p>而在性能上，我这里做了一个极端场景下的实验，将整个屏幕铺满Liquid Glass，并滑动屏幕让其不断渲染，同时使用Instruments获取CPU主线程（UI绘制线程）的资源占用情况。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/13/68dd67d0c9fd6d60a9c9209c62127ea3.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/13/7e08b2291063a63ba527b02974f48b91.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/13/4515a456cb43f28094911d449775cd78.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/13/cf4861d535eced26a5decf7e2f8fde49.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>可以看到，Liquid Glass的平均资源消耗，是过去Material高斯模糊的两倍。这对iPhone的性能和续航又提出了更强的要求。</p><p>好了，以上就是我对Liquid Glass的简单的定性探索，欢迎大家批评指正。</p><h3>关于我</h3><p>我是一名客户端程序员，一位前不知名数码博主，一位iOS独立开发者。全网同名，欢迎关注，带你探索不一样的数码世界。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/100947</id>
            <title>挣扎，疼痛，然后成为人类：一个阿斯伯格人的自述</title>
            <link>https://sspai.com/post/100947</link>
            <guid isPermaLink="false">https://sspai.com/post/100947</guid>
            <pubDate></pubDate>
            <updated>Sat, 12 Jul 2025 05:53:20 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 阿斯伯格综合征,社交缺陷,特殊爱好,神经典型人士  
<br>  
<br>  
总结: 文本通过个人经历和学术资料探讨了阿斯伯格综合征的核心特征。阿斯伯格人士具有社交困难、特殊兴趣和高智商的特点，他们在日常生活中需要付出巨大努力来应对社交挑战。文章对比了神经典型人士（NT）与阿斯伯格人士的差异，指出阿斯伯格人士往往通过逻辑推理和模仿来弥补先天的社交缺陷。作者分享了自身经历，描述了对社交互动的困惑和挫折感，并强调了对阿斯伯格综合征的理解和接纳的重要性。最后，文章提出“和而不同”的理念，呼吁社会包容这种差异。 </div>
                        <hr>
                    
                    <p>&nbsp; &nbsp; 《魔法禁书目录》小说第20-22卷（或动画第三季）中描述了一方通行与魔法师的战斗。对魔法一无所知的一方通行不得不利用他高超的计算力，将一种“未知但存在的法则”添加到他对世界的理解中，以此为基础重新进行演算，最终在自身浑然不知的情况下成功使用了魔法。镰池和马（小说作者）没有在作品中体现他对神经发育问题有无研究，但远离剑与魔法的日常生活对一类人来说无异于处处是魔法，他们不得不像一方通行一样时刻花费巨大的心理能量进行推理、演算、解析，只为了做到对大多数人来说易如反掌的事情。这种努力可能会持续一生。这类人通常被其他人称作阿斯伯格综合征人士。&nbsp;</p><p><strong>“你很特别”</strong>&nbsp;</p><p>&nbsp; &nbsp; 当偶然读到阿斯伯格综合征专家托尼·阿特伍德 （Tony Attwood）未能成功识别自己的孩子是阿斯伯格人士的新闻时，我猛然回忆起十多年前时幼年的自己得到过的诸多诊断中确实有一个是“阿斯伯格”。将阿斯伯格的表现与自己逐一对照，我意识到环绕着自己的谜团突然解开了。我明白了为什么许多人认为我与众不同（尽管通常是正面的含义），为什么我和别人对“普通和理所当然”的定义有如此大的差别。我也明白了自己从小体育不及格并不是因为与同龄人相比疏于锻炼，我认不出别人的脸不是因为我是个傻子，我所感慨的人类对我表现出的不可预测性也好、别人感到的我散发出来的疏离甚至因此产生的对我的畏惧也好并不是因为这世界本就是混沌而无可救药的、也不是因为人类之间本就是不可理解的。我甚至理解了一些过去让我感到被伤害的人：难不成，对面也是个阿斯伯格？</p><p>&nbsp; &nbsp; &nbsp;1944年，奥地利医生汉斯·阿斯伯格（Hans Asperger）描述了一类儿童。他们共同具有社交贫乏、沟通不良、具有特殊兴趣的特点。1981年，洛娜·温（Lorna Wing）结合半个世纪以来欧美许多学者独立记录的类似儿童，提出了阿斯伯格综合征的概念。它特指孤独症谱系儿童中具有高功能、高智商的一极。</p><p>&nbsp; &nbsp; &nbsp;阿斯伯格儿童经常表现出较低的社交兴趣，与此同时又对某些事物呈现出极高的热情（即“特殊爱好”，如昆虫、火车、自然科学等）。相比于变换不定的社交场，他们偏爱具有鲜明逻辑的物质世界，往往在幼年时就可以像个专家一样用只会在论文里出现的语言风格滔滔不绝地讲述自己的爱好。他们中的大多数（约2/3）表现出很高的语言天赋（指语言智商明显高于操作智商），学说话比一般人早或早于学走路，能够轻易掌握复杂的语法规则，因能出口成章而被大人称赞。他们中的一些人最终发展成了科学家、哲学家、艺术家，或是在各行各业发光发热的成功人士——如果他们足够幸运，又或者足够坚强，足以打破作为这些优势的代价而被施加的沉重枷锁的话。&nbsp;</p><p>&nbsp; &nbsp; 这些枷锁中很大一部分来自于先天的能力缺陷。他们在幼年时期并不觉得社交有什么必要，沉浸在对特殊爱好的钻研中，等长大后面对失去的童年追悔莫及；他们在面对其他人时常常感到焦虑和无助，并且无法识别普通人习以为常的社交信号。他们可能记不住人的面孔，看不懂人的眼神或肢体语言，又或者识别不了emoji的含义；他们可能会下意识地躲避目光接触，以至于被人误解为“永远是冷漠脸”；他们可能对某些感官格外敏感，一些普通人习以为常的事物（例如刹车声、太阳光、又或者是衣服领子与脖子接触时的触觉）会让他们全身颤栗眼冒金星；与此同时，他们又有一些感觉格外迟钝：他们经常满身伤痕而不自知，甚至有的人生了重病却感受不到疼痛。他们的身体协调能力经常远不如人，会时常平地摔、被别人看来莫名其妙的东西绊倒，工作记忆有时也不可靠，很容易弄丢手边的东西。长大以后，他们对社交的看法和别人很不一样，无法把握与人接触的边界，也无法分清友情和爱情，会轻易地信任别人，然后一次次地受伤。</p><p>&nbsp; &nbsp; &nbsp;当我在回忆这些特征时，依靠的并不是我对书本的机械记忆。我根本不需要背诵讲述阿斯伯格的书里的内容，因为我自身就是活生生的参照。或者说，我只是在书写自画像——读书时，我只是在照镜子。</p><figure class="image ss-img-wrapper"><img alt="高松灯图片尺寸1568x1840  BoBoPic" src="https://cdnfile.sspai.com/2025/07/10/article/79778b716ac1bcbf641ae5179c7ecd47.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>收集石头的高松灯。她符合相当多阿斯伯格的特征</figcaption></figure><p>&nbsp; &nbsp; 当前的主流观点是，这些缺陷完全是先天的、生理性的，由遗传因素决定。它们不是因为后天创伤，不是因为社交经验不足，更不是因为阿斯伯格的孩子们的认知出了什么问题，觉得自己高人一等、看不起别的孩子云云；他们的动作笨拙也不是因为不懂得自理。所有的这些表现都不是孤立的。2000年DSM-IV阿斯伯格诊断标准规定，在一个人具有社交缺陷和特殊爱好、并因社交能力缺陷导致社会功能显著损害、且没有语言迟钝、认知迟缓，也没有其他精神疾病时，才有可能被确诊为阿斯伯格。也正因为这些表现互相联系，在阅读书籍时，我才会有醍醐灌顶的感觉：原来如此，我们是阿斯伯格，我们很特别，我们和其他人都不一样。对阿斯伯格人士来说，NT（神经典型人士）同样很特别，和其他人也都不一样。他们仿佛拥有一种超能力，能够轻松建立和维持社会关系，在社交时能毫不费力地说出阿斯人想破头也未必能想到的话语——他们是何其可畏可敬，居然能做到说话时盯着对方的眼睛，还能读出其中的意涵！阿斯人时刻观察着周围的NT，试图从中模仿和学习。《阿斯伯格综合征完全指南》的作者写道：阿斯人是潜伏在人群中的人类学家。&nbsp;</p><p><strong>“劣等感”</strong>&nbsp;</p><p>&nbsp; &nbsp; 在《阿斯伯格综合征完全指南》全书开头处，作者虚构了一个典型阿斯伯格儿童的故事。这个小男孩在幼儿园里没有什么朋友，也不太和人接触。一位女生觉得他善良而独特，邀请他来家里做客；他一进门后，立刻对着女生的母亲讲述电池的结构、性能、历史、分类，女生的母亲几经暗示他都没有理会，最终母亲不得不直言“你该到外面去找她们了”。</p><p>&nbsp; &nbsp; &nbsp;这样的孩子很难讨得一般人的喜欢。在同龄的孩子看来，他们与人格格不入，无法成为朋友；因为和别人都不一样，他们经常成为被霸凌的对象。他们面临无人理解的境地，不知道可以向谁求助：在他们看来，众人皆是不可知的黑洞。为数不多的朋友通常是一些异性孩子，因为异性孩子可以把这种不同当做是性别差异而加以包容。&nbsp;</p><p>&nbsp; &nbsp; 越是长大，他们越发现自己和别人的差异。他们开始觉得没有朋友不行，想要和别人接触，却发现面对别人时一句话也说不出来。他们的一生是受挫折的一生。他们忍耐着下一秒就和对面结成生死之交的渴望，鼓起勇气走到别人面前，眼睛含着紧张的泪水而只能低着头躲避对方疑惑的目光，却不知道如何开口，最后只能一个人跑回去，擦擦眼泪心想自己又失败了一次。&nbsp;</p><p>&nbsp; &nbsp; 即使已经功成名就，这种社交能力的缺失时常也相当明显。物理学一代宗师保罗·狄拉克在一次演讲结束后遇到观众提问，他却一言不发呆立数分钟。当主持人试图打破尴尬时，他答道“刚才这位先生只是在陈述自己的观点，没有向我提问。”狄拉克是有名的“怪人”；若没有大科学家的名头护身，这样的人在社会中往往会收到格外多异样的眼光。 对他们来说，正常的人际关系是如此可望不可及。我曾经痛苦地写道：</p><p>&nbsp; &nbsp; &nbsp;“我依然无法理解为什么在街边彻夜玩耍的人会在四天后永久拉黑、为什么约好要经常一起出去玩的人会在两天后再也不回消息、为什么极为热情的人会毫无征兆地全平台删除、为什么路边来主动加好友的人会在通过后不久就删掉、为什么一年来无话不说的人会在我说“你是我最重要的朋友”之后留下一句“如果我都能成为你重要的朋友那你的圈子也太低质了”然后删掉。有人说，这是因为你无法理解人之间的距离，你跟谁的距离都要么是零要么是无穷大；有人说，这些现象再正常不过，正常人的社交本就是大浪淘沙快来快去；可是人类呈现出的不稳定性、不可预测性让我感到仿佛要被碾碎了。我又觉得这是何其可悲:本可以用于创造出无穷无尽的东西的心理能量却被用于架设距离；我想，哪怕是萍水相逢的人，为什么不能永不背叛？我已无法理解了。我们眼中的世界何以如此不同？”</p><p>&nbsp; &nbsp; &nbsp;当我读到《阿斯伯格综合征完全指南》里对普通人的童年的描述时，我无法控制自己的感情。为什么你们从3岁开始就可以有朋友？为什么你们仅仅是“玩一个相同的游戏”就能建立友谊？为什么你们甚至有“筛选”朋友的权利？我仿佛是在名为阿斯伯格的监狱里被关了16年，第一次知道别人的童年是如此丰富多彩。我的人生有一半的时间被删除了。</p><p>&nbsp; &nbsp; &nbsp;可即使我说出这些悲鸣，时常也不被理解。有人说，你接受了命运那么多馈赠，能轻易做到一般人做不到的成就，还有什么羡慕的？别人羡慕你还来不及呢！我只能哭喊着说，请造物主把硬塞给我的“才能”收回去罢！我不要这些东西！别人说，普通人难道就不会因为社交而困扰？他们难道不会累？我说，但你们有选择的权利，而我们压根不知道什么是社交，我们是被命运剥夺的人啊！难道能看着没有四肢的人而说出“长了四肢才不好呢，你不得不忍受胳膊腿经常疼痛的苦恼”这种话吗？ 对我们来说，这些缺陷才不是获得那些“优势”的代价；正相反，那些“优势”才是命运因剥夺了我们太多而略感愧疚才带来的补偿。</p><p><strong>“成为人类”</strong>&nbsp;</p><p>&nbsp; &nbsp; 开启社会化进程的阿斯人仿佛生来就是《人间失格》的主角：计算揣摩着别人的想法，装出一副搞笑面孔来迎合别人，却一次也没有觉得这种伪装开心过——甚至连这一点都会契合：阿斯人时常会莫名其妙地大笑起来，因为这是他们唯一能做的表情。阿斯人又十分擅长逃跑，他们完美符合卡伦·霍妮的“疏离型人格”的特征——但这不是他们有意逃避，而是因为对他们而言独处是最有效的回血手段，因此他们也会认为只要让别人独处就能让别人开心。 潜藏在人群中的人类学家时刻想要成为人类。他们会细心观察，每时每刻都在学习别人在社交中是怎么反应的，尝试用逻辑推理来破解社交的秘密。在这方面，阿斯人是幸运的，因为他们位于孤独症谱系中的智商顶点，足以靠推理计算来弥补一部分先天不足。慢慢地，通过模仿和试错，他们能够建立一个人际关系大数据模型。</p><p>&nbsp; &nbsp; &nbsp;我问作为NT的爱人：难道一般人就不是这样的吗？在我看来，一般人交朋友也要反复碰撞，只不过他们开始得更早。可我的爱人说，完全不是这样的。一般人在有了基本的见识之后，就会自发涌现出一种直觉，能够立刻知道该说什么话该做什么事，不再需要进一步模仿和学习。在我看来，这不可思议。</p><p>&nbsp; &nbsp; &nbsp; 这种思维差异体现在方方面面。就比如，当我在高中时，老师一说要摆桌子，大家就会自发动起来，最后形成一个统一的摆放方式。而我无法理解：在没有人告知最终规划效果的情况下，人们是怎么知道要做什么的？再比如，前不久有人对我搭话说“我们中只有你不是小学生字体诶”，我不知道该说什么，因为之前没有人这样对我说过，它超出了我的数据库范围，而我的爱人听闻后目瞪口呆。&nbsp;</p><p>&nbsp; &nbsp; 我的爱人又向我举例：赵本山小品里说“猪撞墙是因为它不知道脑筋急转弯”，我知道它的笑点是“脑筋急转弯”的二义性，却不知道它还有一个笑点是暗示范伟是猪。直到后来，我看到有人解释了这一点，才将“笑话可能会指涉说话人”作为一种新的法则加入到系统中。&nbsp;</p><p>&nbsp; &nbsp; 这跟CPU与GPU的差异极为相似。依赖CPU运算的阿斯人不得不付出格外多的心理能量才能达到差强人意的社交水平，这导致了他们在成年后极容易疲惫和抑郁。可即使如此，阿斯人依然愿意挣扎，哪怕遍体鳞伤，也想探知心为何物。 在社交软件的个人介绍里，我写道，要将心像洋葱一样剥开来给对方看。诚实地说，当写下这句话时，我并不知道心是什么。我只是觉得，别人都有，或许我也有；如果没有的话，就用橡皮泥捏一个，然后设法让它跳动起来，为此我可以摸爬滚打一生。&nbsp;</p><p>&nbsp; &nbsp; 目前不存在针对阿斯伯格综合征的药物。对于阿斯伯格人士，主流的观点是需要让他们意识到自己与别人不同，也让别人明白他们是不同的，不能用刻板的尺子来框住他们。我的爱人说，当她还不了解阿斯伯格时，就知道了我和别人不同；她和我争吵过，体验过无论如何都无法理解的痛苦，然后试着去相信我没有恶意，接着突然就明白了。 在亲密关系中，阿斯伯格人士往往会在前期表现得像个天使，是个完美恋人——这是他们在不断的试错后用满身泥泞换来的大数据的结果。可一旦关系深入，超出训练集的边界，冲突往往就会立刻爆发。如果伴侣不了解阿斯伯格，往往会感到极度的失望。从这个角度，我是幸运的：她没有在这个阶段跑掉，反而是选择去相信我。</p><p>&nbsp; &nbsp; 可是，存在这样的人、遇到这样的人的幸运只不过是万里挑一。若不依靠侥幸，就必须借助觉知。唯有阿斯人能够实现充分的自我认识、社会上的一般人也都了解和接纳一种与己不同的存在，阿斯人才有可能不必去祈祷万里挑一的侥幸。大家需要知道，并不是所有的人都依靠CPU或GPU来行事；用CPU奋力挣扎的人和用GPU真诚待人的人是平等的，并没有一方比另一方优越。也就是：“和而不同”。&nbsp;</p><p>&nbsp; &nbsp; &nbsp;在《阿斯伯格综合征完全指南》的最后，作者给出了全书开头的那个虚构的小男孩的未来。在朋友们和而不同的接纳下，他长大了。他的特殊爱好帮助他获得了出众的事业，他也遇到了能够理解他的爱人。而我的爱人则说，阿斯伯格人看似难以相处，可当真正走近他们时，仿佛能看到一朵开在石头上的花。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/100875</id>
            <title>创立网球裙品牌-我被工厂坑的好惨，避坑！</title>
            <link>https://sspai.com/post/100875</link>
            <guid isPermaLink="false">https://sspai.com/post/100875</guid>
            <pubDate></pubDate>
            <updated>Sat, 12 Jul 2025 01:14:43 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 创业, 工厂合作, 质量控制, 服装生产  
<br>  
<br>  
总结: 文章分享了作者在创立网球裙品牌过程中与工厂合作的经验和教训。作者详细描述了找工厂的流程，包括样衣制作和大货生产的环节，强调了板房师傅和监工的重要性。文章列举了工厂合作中的三大问题：外包导致的质量问题、加价和不守时。作者提出了避免被坑的建议：签订详细合同、线下社交沟通以及严格验货。最后，作者反思了创业的艰辛，尤其是女装行业的高退货率问题。 </div>
                        <hr>
                    
                    <p>文章接上回，说了自己创立网球裙品牌的心路历程，整体感觉非常美好。</p><p>我这就来诉苦水了（bushi），想复盘栽最大的跟头，找工厂！给大家感受一下创业的艰辛，如果对大家有帮助就最好了！</p><h3>我是如何找工厂的</h3><p>工厂需要完成的任务，粗略来看就是做样衣-做大货（批量生产）。其中每一个环节都有巨坑。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/09/0f9f632d8ee057e5815696af612fb952.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>做服装基本流程</figcaption></figure><p>首先，工厂是小伙伴在1688上找的，这是我们找的第二家，由于时间紧迫（着急上线），试第二家工厂就定下来了。第一家（称为A工厂）被pass的原因是样衣做的太差了，A工厂没有自己的样衣师，样衣都是外包给外面的板房的，工厂只是做纯加工的工作。B工厂被定是因为样衣做的太优秀，前置环节沟通起来都非常专业，以至于我们忽略了考核后续做大货的环节。</p><h4>🙋‍♀️先理解一家制衣工厂的构成</h4><p>环节就是做样衣-做大货，对应到工厂就是板房-流水线。</p><p>板房的重要构成就是板房师傅，师傅对于设计师设计图尺寸的理解，衣服连接方式的选择，对于整件衣服的质感起到了至关重要的作用。</p><p>流水线的重要构成就是工厂稳定成熟的工人+关键的监工。很多外包工厂的工人换厂的频率是很高的，工作年限也不长，就导致做了很多瑕疵品。这时候关键的监工就很重要，需要去关注生产出来的产品质量。当然，很多监工能发现问题，但考虑到做差了只要你发现不了，我就不讨麻烦了。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/07/10/18869f845e52a7ea5d228cc79fc35b81.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/07/10/001ae22209900acdb69e1e6b26461293.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>其实最后总结找工厂的经验，就是线上联系-筛选，线下实地考察，考察是否有自己的板房，工厂的产量是多大，还有老板是否是个“好人”。</p><h3>工厂在哪些环节坑了我！</h3><h4>1- 直接给我外包出去了？？</h4><p>当我知道这个消息的时候，我一裂开，我真的裂开。</p><p>因为交货后，发现款1质量问题严重，衣服脏污（厂房明显的机油）、线头炸线（外包厂四针六线的机器坏了？？）、logo直接脱落...非常基本的问题全犯，对于一个初创品牌来说基本是致命的。之前有很多小伙伴说期待了很久，结果收到这样的货，真的很失望，真的，心碎的感觉谁懂。</p><figure class="image ss-img-wrapper image_resized" style="width: 293px;"><img src="https://cdnfile.sspai.com/2025/07/10/6700c3e285e21b61e16f1a4797e54ad8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>具体图片我就不展示，看着心痛</figcaption></figure><p>款2的问题就更严重了，没有按照设计师修改意见改，推码直接推错。导致没有实现原本想要的效果，同时由于推码错误导致每一个码字的胸口直接豁开，退货率百分百。所以找老板据理力争，老板最后给我们重新做了，手头的次品还给老板。往好处想，老板还算负责答应重新用自己工厂做。往坏处想，上线时间无故延长了半个月，还把最开始发出的那一批召回，极其影响品牌形象。</p><h4>2- 自己工厂做可以，加钱！</h4><p>最后我们强烈要求自己工厂做，因为老板说自己工厂都是熟练工可以保证质量。结果倒头来说，自己工厂做可以，工价+5元，这几乎等同于抢钱。本身小单的工价就已经很高很高了，结果还+5块。但碍于我们急着要货，还是答应了。</p><p>这里需要提个醒，大家一定要在合同里明确说明，禁止外包。</p><h4>3- 拖拉 拖拉 拖拉</h4><p>拖拉就是工厂的老毛病，问就是排期很紧。不管是做样衣还是做大货。</p><p>小锅给个妙招！直接杀去工厂，累死自己，效率翻倍。</p><p>原因：1- 去工厂可以直接跟老板见面，中国人嘛，网上吵架容易，线下总是和和气气的。有一点很巧的是整个工厂都是重庆人，而我爸也是重庆人，所以线下见面后，总是客气亲近些。2- 当老板带你去流水线的时候，你不停不停的强调自己的做工要求，最好深入到每一个工人的耳朵里，让大家知道你是个难惹的主，或多或少都会把手上活做细些</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/07/10/ee002b8e89e691ab98e25c669ad995e4.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/07/10/89c4c8f3c949b13c942228c28a57eeb5.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>🌟如何避免被坑！</h3><h4>1- 签合同</h4><p>怎么样，没想到吧这么简单的操作，在做款1的时候就无知地用工厂发来的excel当作合同了。好在工厂还算负责，不然跑路了，我都不知道找谁去。</p><p>签合同的时候一定要约定好 交货详细规格、交货时间、保密协议、赔偿方式等等，写的越细越好，一般这种工厂也没有自己的法务，写得详细尽可能保护自己的权益。</p><h4>2- &nbsp;线下social</h4><p>突然理解中国老板办公桌上的茶具存在的意义了。线下见面喝几次茶，真能熟络不少，对你的事情也会更上心。正是因为是互联网时代，线下的见面才显得更为珍贵。</p><p>尤其是在做样衣环节一定要频繁地去工厂，不然来回修改特别费时间，效率太低。线下沟通可以及时跟板房师傅沟通之前没有明确的地方，一般板房师傅都是中年大叔，也懒得用微信和你说，要是之前没有明确的地方他就直接按照自己的意思做了，如果你在旁边可以有效地避免这类问题。</p><h4>3- 验货，认真验货</h4><p>款1 出问题的时候，由于到货后我没有一件一件的拆包才导致这么多脏污问题品流入市场。</p><p>现在每一款到货后我都安排仓库一件一件地检查，虽然说成本上升了不少，但很大程度还是能避免问题物品出现在用户手上，有损品牌形象。</p><h3>最后</h3><p>其实，也不知道少数派做服装的有多少，但想写下来，让大家当作故事来阅读，生活中的图一乐啦！对了，如果想入手服装的朋友，我的建议是快跑！！尤其女装退货率太太高了！！是一个很心累的生意。</p><p>祝大家看得开心！活得肆意热烈！</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/10/7ab3399b25278bf850be49a9c8a27fb7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>最后不知道放什么图，就放一张品牌说明图，希望我可以坚持久一点吧！</figcaption></figure><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/100980</id>
            <title>为了看见自己，我写下了 99 个故事</title>
            <link>https://sspai.com/post/100980</link>
            <guid isPermaLink="false">https://sspai.com/post/100980</guid>
            <pubDate></pubDate>
            <updated>Fri, 11 Jul 2025 23:44:24 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 自我认知,心理测验,情绪网络,MBTI  

<br>  
<br>  
总结: 文章探讨了人们如何通过心理测验来认识自我，但指出多数测验(如MBTI和SCL-90)存在商业化包装、标签化等问题，无法真正回答"我是谁"这个问题。作者通过记录105个情绪故事，构建个人情绪网络图，试图更深入地理解自己的情绪反应模式和心理运作机制。文章强调理解自我需要关注情绪系统、认知系统和需求系统三者的协作方式，而非简单依赖标准化测验。 </div>
                        <hr>
                    
                    <p>如果我问你「你是谁？」，你可能会告诉我你的名字；如果我再问一次，你可能会告诉我你的性别、你的职业、你的家乡、你的爱好；但如果我再问一次呢？大多数人或许会直接骂我神经病然后转头走开，但也许会有一些人会开始认真地讨论自己到底是谁。</p><p>你不一定真的问过自己「我是谁」，但或许对这件事情好奇过。有些人为了满足好奇心，会去研究星座、命理，来理解自己的过去和将来；有些人会去做一些心理测验，试图将人格凝练成符号。</p><p>这些都是很好的做法，我也多少了解它们，但实际体验一圈下来总是觉得它们给出来的答案很寡淡，没办法让我满足。所以我想着，这次要么认真做点什么吧。</p><h2>不满足的感受</h2><p>我始终认为很多所谓的「测验」并没有真正地对「你是谁」作出正面地解答，只是创造出了一种朦胧的、神秘的氛围，还有看到结果时的「惊喜感」。它可能来自一些源远流长的神秘古老文明，或者只需要回答一些似是而非的问题，它们是那么的神奇，仿佛做完你立刻就能洞察自己的内心世界，找到人生的答案和方向。</p><h3>MBTI</h3><p>这方面做得最成功的是 MBTI，迈尔斯—布里格斯类型指标。这是一组由三套量表构成的人格测验，用来测量人脑在感知和决策上存在不同先天偏好。这三套测量工具分别从先天特质、后天环境、未来发展三个角度对你作出阐释。</p><p>如果你做过所谓的 MBTI，可能会觉得奇怪，自己好像从来没做过三套量表，只是对着一张大问卷不停地点，就得到了一个答案。这就是事情奇妙的地方了：其实你做的不是 MBTI 而是一个叫做 16Personalities 的量表。这套量表在本质上是一个魔改过的大五人格测验，只是把最后的结论分类标签硬套在了 MBTI 的系统上。</p><p>为什么他们会这么做？我猜大概率和产品包装有关。大五人格测验已经行之有年，但我们并没有听说谁为了好玩去做大五人格测验，因为它没有那种「惊喜感」，而这种「惊喜」是一个互联网产品撬动钱包和话题的必备要素。</p><p>这种惊喜感的构建有很多维度，一方面是响亮的标签，告诉你自己是什么样的人，好像你吧唧一下把它贴额头上，此生就不会再有困惑一样。以前你可能说我生性内向，那个人疯疯癫癫，但现在所有的形容词全都变成了 I 人跟 E 人，你不再需要从脑袋里检索形容词，只需要知道十六个字母就行了。</p><p>而与之相对的大五人格测验结果可以说是非常之复杂了，大维度下面套小维度，每个维度都有分数，每个分数又可以按照高分低分做不同解读，一篇全都看完估计你人都要睡着了自然是没有二分法啪啪贴标签来得舒爽又响亮。</p><p>另外一方面则是非常精致的包装，你几乎很难在什么正儿八经的心理学测验题目和解读上遇到如此精致的视觉体验，插图精美、风格突出一致、解读又很有心理学的味道，这种「专业、国际范」又增加了其可信度。</p><p>最后则是 SEO 工程，如果你在 Google 上搜索 MBTI 这四个字，几乎跟正版 MBTI 风马牛不相及的 16Personalities 一定会出现在第一页，点缀着「你可以免费测」的钩子，垂钓着一个个用户，甚至很多心理测量学分数没有很高的心理学专业背景人士。要知道，「正版」的 MBTI 是一款商业心理测评产品，是需要花钱做的。</p><p>正因为 MBTI 测验被混淆到专业人士也会踩入陷阱，所以我对市面上以 MBTI 为核心的科普资源、营销活动也持相当保留的态度：您聊的是哪个 MBTI？您究竟知道您在聊的是哪个 MBTI 么？</p><p>你要是问我的话，我肯定更喜欢大五的解读风格，哪怕 16Personalities 通过研究证明了自己的信效度优秀，但我依然不觉得它在商业和专业上的权衡是得当的。</p><h3>SCL-90</h3><p>另外一个被广泛滥用的是 SCL-90（症状自评量表）。pong 油我跟你讲，我们这些学心理学的三不五时就会收到如下格式的求助：我 XX 朋友心理状况很糟糕，递上来一份 SCL-90 让我给参谋一下。此时虽然脸上的情绪非常平静，但我的内心当中早已开始「泼妇骂街」，因为在没有职业咨询师指导的情况下贸然使用这类量表，并且粗糙解读其结果常常会带来负面效果。</p><p>很多人会过度的解读分数，将「高分」视作是「患了心理疾病」，但 SCL-90 只是筛查工具，不能用于诊断。高分只是反映当前压力状态、情绪波动，而非精神疾病。</p><p>有些人会忽略测验在时间上的有效性，量表评估的是「过去一周」的症状，但他们会基于单次测试结果对自己下长期判断。要知道心理状态是会随时动态变化的，我们不能用瞬态的观察来偏颇地阐释整个人的长期特质。</p><p>简化复杂问题也是很常见的情况，「没练过」的玩家很容易将复杂的心理状态简化为几个上下跳动的数字，认为分数高就是「心理有问题」，分数低就是「没事」，却忽略了每个人之间的差异还有各种情境因素。</p><p>最要命的是自我标签化，也就是根据某个维度得分较高就给自己贴标签，比如「我有强迫症」、「我有玉玉症」。这些症状可能是暂时的或轻微的，但标签一旦贴上去了可能就会产生深远的影响。</p><p>如果你只想从这篇文章中学到一件事，那我认为这件事是最重要的：几乎所有临床用途的量表都需要在专业咨询师建议下使用、并且由专业咨询师负责解读，自己在网上搜来做的清一色都是危险使用。</p><h3>营销用途的心理测验</h3><p>至于某红色图标应用三不五时就出一个娱乐用测验，常声称有某某某专业论文背书，把自己打扮得花枝招展，我只能说你们开心就好[微笑]。</p><h2>不满足于什么？</h2><p>我想要更好地了解自己，但哪怕学了一遭心理测量，也没看到什么趁手的工具，哪怕把问卷做遍了，最后可能也只是得到了一打报告，一坨标签，它依然不能回答开篇的问题：</p><blockquote><p>你是谁？</p></blockquote><p>想要回答一个问题，就需要定义一个问题。现在摆在我面前的诉求实在是太过抽象和模糊，于是我开始想办法对它进行准确的定义，收束问题的边界，让它变成一个我可以操控的课题。</p><p>我的硕士研究方向包含了相当多和亲密关系脑机制有关的内容，其中牵涉的核心话题便是依恋模式，也就是生命早期经验对社交行为的影响，而最引起我兴趣的是面对外界刺激时我们的情绪反应。</p><h3>高权限</h3><p>如果要不偏不倚地描述你我的共性，我想「生物」是一个很好的词，特别是这个「生」字。生存是我们的本能，我们大脑当中的一切功能，几乎都是围绕着更高的生存率展开的。在这当中「情绪」起到了至关重要的作用。</p><p>情绪自我们降生以来就开始发挥作用了。人类婴儿是自然界中最无助的幼崽之一。他们无法自行移动、觅食或抵御捕食者。这种长期的、极端的脆弱性构成了人类演化过程中最严峻的生存挑战之一。任何能够提升婴儿存活率的特质，都会在自然选择的压力下被保留和强化。</p><p>比如哭泣，哭声是婴儿最强大的武器，它是一种高分贝的、能引发成年人（尤其是母亲）生理和心理上强烈不适感的信号。这种不适感会驱动照料者立刻采取行动，检查婴儿的需求：孩子是饥饿、疼痛、寒冷、还是需要安抚？那些哭声更能引起注意的婴儿，更有可能获得及时的照料，从而提升存活率。</p><p>再比如笑容，如果说哭声是「索取」，那么微笑就是「回报」。婴儿的社会性微笑是一种强大的「粘合剂」。当照料者满足了婴儿的需求后，一个微笑或一阵咯咯笑，会给疲惫的照料者带来巨大的情感回报和满足感。其背后的脑机制是催产素和多巴胺等神经递质的释放，这些释放带来的积极感受会鼓励照顾者继续照顾的行为，进而强化亲子之间的纽带。</p><p>随着婴儿接受的外界刺激不断变得丰富，它们会开始不断地习得，什么样的事物会对自己产生伤害，什么样的刺激有利于生存。</p><p>火焰是一个很好的例子，婴儿最初可能并不会本能地惧怕跳动的火焰，相反，它的光和热反而可能引起好奇。但当他们试图触摸而感受到灼痛，或者照料者面对火焰时紧张的表情和警告时，大脑就会迅速建立起一个强大的负面联结：火焰是危险的，我对火焰产生恐惧。</p><p>食物则是积极情绪的绝佳例子。孩子第一次吃到甜甜的浆果，味蕾被激活，脸上绽放出惊喜的笑容。这种积极的情绪体验在大脑中形成正反馈：甜味等于愉悦，愉悦等于值得重复的行为。于是，孩子会更倾向于寻找类似的食物，强化对「美味」的偏好。这种机制不仅帮助我们识别高能量的食物，还让我们对探索新食物保持开放的态度。这在资源匮乏的远古环境中，是生存的重要优势。</p><p>当然，能够激活情绪的不仅仅只有火焰、食物。下到色彩、触觉，上到人物、环境，在情绪发生的当下，出现的各种认知要素都有可能被我们的大脑记住，并在遇到类似要素出现时作出对应的情绪反应。</p><p>但凡涉及到生存相关的机制，其运作必然是极快的。尤其在面对潜在威胁或机会时，这种自动化反应能够在瞬息之间决定生死。如果现在正在阅读这段文字的你，突然听到巨响，房间墙壁都在剧烈摇晃，大脑当中的杏仁核便会迅速被激活，触发「战斗或逃跑」反应。此时心跳加速、肌肉紧张、肾上腺素激增，这些生理变化在不到一秒的时间内发生，甚至在我们有意识地分析「这是什么」之前，身体就已经为应对危险做好了准备。</p><p>试想如果在这种情况下，我们还要等前额叶慢悠悠地提取概念、理清逻辑、权衡利弊、作出决策，人早就被压在瓦砾下面嘞。</p><p>这种快速的情绪反应有其代价。当情绪强度过高时，大脑的注意力会被完全占据，意识的「带宽」变窄，我们的理性思考能力可能暂时被压制。过度的愤怒可能让人失去理智，做出冲动的行为；极度的恐惧可能让人僵在原地，无法行动，这边是我们内心当中「动物的一面」。在这种状态下，深层的脑部结构暂时「接管」了大脑，抑制了前额叶皮层的理性调控功能，让我们全然沉浸在这些情绪体验中。</p><h3>高功能</h3><p>然而，幸运的是，我们并非时时刻刻都活在被瓦砾掩埋的风险之中。大多数情况下，情绪的触发源并非是迫在眉睫的生死威胁，这就给了那些「智慧光芒」得以闪耀的空间。事实上，我们的前额叶有能力介入和调控整个情绪的发展路径，对当下的情境进行评估、对自身的认知进行调整或重新引导，以展现出人类「文明的一面」。</p><p>这种调控可以采取多种形式。「转移注意力」便是一种常见的策略。在因工作不顺而感到愤怒时，你可能会起身远眺窗外的风景，或者戴上耳机听一首喜欢的音乐，就是将注意力从引发负面情绪的源头移开，从而削弱情绪的强度。</p><p>「认知重评」也是一种常见的策略。当你因为不及预期的测验成绩而感到愤怒、沮丧，进而自暴自弃，认为自己「能力不行」时，有的人可能会立刻「踩刹车」停止负面的情绪体验肆意奔驰，将自己的认知「重评」为「发现自身知识盲点、为下次成功积累经验」的机会。这可以指导我们去解决问题，如果情绪源于一个具体困境，理性的大脑会开始分析问题、规划步骤，将情绪能量转化为解决问题的动力。甚至，在某些社交场合，它会堵住你想要口出恶言的冲动，或是不合时宜的情绪流露，以维持表面上的人际和谐和体面。</p><p>我们的前额叶会对这些情绪体验依据其发生的人事时地物进行标记、归类、和解释，所以有了颇为丰富的情绪描述词汇。而准确地识别情绪是重要的，甚至可以说这是所有高级情绪调控策略的基础。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/d354db1d7addbf52fa7d4b09a35197c5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>情绪轮</figcaption></figure><p>如果我们无法分辨自己体验到的究竟是因期望落空而产生的「失落」，还是因感到不公而引发的「愤怒」，就如同一个医生分不清病人得了什么病，自然也就没有办法对症下药。一个对自己情绪状态感知模糊的人，可能会将所有的负面感受都笼统地归为「压力大」或「心情不好」，从而只能采取最粗糙的应对方式，比如暴饮暴食或沉迷娱乐。亦或者在面对他人负面情绪时只能说出「你别这么不开心」这种绝顶低情商雷话，瞬间「燃爆全场」。</p><h3>稳态</h3><p>在理解了表层逻辑之后，让我们再看得深入一些。</p><p>高中生物学教材曾经讲过，生物学上我们的身体是一个稳态系统。稳态，指的是生物体内部环境在外界条件发生变化时，通过自我调节机制维持相对稳定的状态。比如当外界温度降低时，我们的身体会通过肌肉颤抖产生热量，血管收缩减少散热，以维持体温恒定；当血糖浓度过高时，胰岛素分泌增加，促进葡萄糖进入细胞，将血糖控制在正常范围内。</p><p>然而，我们的心理层面同样存在着一套稳态机制。但这种稳定并不是一成不变、心静如水的那种「稳定」，而是一种动态的平衡，建立在我们大脑对未来的持续预测之上。大量脑科学研究证明，我们的大脑每时每刻都在根据过往经验和当前信息，对即将发生的事情作出预测。</p><p>如果未来发生的一切都严丝合缝地落在了意料之内的剧本里，那么一切就都是平和的，我们不会有太过张弛的情绪反应。就像早晨起床后按照既定计划洗漱、吃早餐、出门上班，每个环节都如预期般展开，我们的内心世界便保持着一种平静的流动状态。但一旦这个稳定的状态被打破了，我们就会产生回到稳定状态的「需求」，并引发相应的情绪反应。</p><p>打破稳态的可能是外界的刺激。比如窗外突然哗哗地下起了大雨，你原以为会晒得喷香的被子眼看着就要被淋湿了，你自然会紧张起来，冲出门外拯救今夜的安眠。又或者你正专心致志地工作，突然收到一条消息说重要的会议时间提前了，原本有条不紊的计划被打乱，焦虑感瞬间涌上心头。这些都是外界的「预期违背」触发了我们的情绪反应。</p><p>这种稳态的扰动也有可能来自内部。比如你的肚子忽然咕咕叫，你想起来还没吃午饭，饥饿感打破了身体的平衡，产生了「想要填饱肚子的需求」。再比如你独自一人在家时突然想起某个许久未联系的朋友，孤独感悄然袭来，产生了「想要社交连接的需求」。</p><p>当然，并非所有的稳态打破都会引发负面情绪。积极的「预期违背」同样会激活我们的情绪系统。你以为只是普通的一天，却意外收到了心仪已久的工作录取通知；或者你随手买的彩票竟然中了小奖；又或者在书店里无意间翻到一本让你眼前一亮的好书。这些超出预期的积极事件同样会打破我们的心理稳态，但带来的是惊喜、兴奋和满足感，推动我们去分享这份喜悦，或是继续探索更多的可能性。</p><p>所以我们这里面的逻辑链条并没有前面讲得那么简单。更准确的描述是：内外部刺激打破了我们的「预期稳态」，大脑检测到了这种偏差，我们产生了回到稳态的压力，也就是「需求」，情绪系统便开始工作，最后前额叶对它进行解读和调控。</p><h2>拿出镜子</h2><h3>踉跄的起步</h3><p>读到这里，不难发现我们的大脑中有两套截然不同的系统，一套是掌管即时情绪反应的「高权限」系统，另外一套则是掌管高级认知的「高功能」系统。「高权限」系统能在紧急情况下迅速接管身体，触发本能反应以应对威胁；而「高功能」系统则通过前额叶的理性分析，根据复杂的现实条件作出更加「社会化」的决策。而「需求」则是促使整个系统开始转动的动力，当现实与我们的预期发生冲突时，稳态被打破，一个「需求」便应运而生。</p><p>在我看来，理解自己即是理解这三套系统的内部结构以及协作方式。它们如何被激活？又如何相互影响？这些内部结构在很大程度上定义了我们是谁、我们的行为模式和逻辑为何，以及我们如何应对生活中的起伏。</p><p>那么要怎样理解这套系统的运作？作为一名科班出来的人，我的第一个想法就是「做问卷」，搞个李克特五点量表<sup class="ss-footnote" href="" title="你最常见到的心理测验，提供五个选项，从「非常不同意」到「非常同意」，或类似的分级表述。">1</sup>，对所有情绪之间的关联做一个成对的测量，就可以直接得到一个网络图了，这张图在某种程度上反应了受测者，也就是我的情绪运作逻辑。</p><p>我当时还在思考如何定义「两种情绪之间有关联」、怎样进行统计和分析。但，圣洁的大便啊！我的朋友！这实在是一个糟糕透顶的主意！如果你曾经买过一本《当代学生生存手册》就会知道情绪词汇的表达有多丰富，当时我手里的版本有 361 个，如果要用「蛮力」扫一遍，我得做 129960 道选择题，我不是电脑，不能俩 for 循环跑一遍就交差了事啊 ( TдT)！</p><p>然后我就开始陷入了「用户体验」的死胡同，在脑中构建各种方法，尝试缩减题目的数量和作答的难度。比如把李克特五点测评变成「是、否」的二元判断；或者将整个测评矩阵切割成不同的分区，再把它们分布在环形图上进行连接，在操作和视觉上提供一个新的维度以加速评估进程，减少认知负荷。</p><p>但在怎么说十三万道题也太离谱了，光做几十道题就已经很痛苦了，最变态的明尼苏达多项人格量表也就才 566 题。我上大学的时候，教我们心理咨询的老师曾经回忆过老师带全班学生做那套量表时的恐怖情景，几乎全班都做麻了。</p><p>但又有什么其他做法呢？哪怕我晚上睡不着觉躺在床上想破头也没有想到一个妥适的路径。</p><h3>玩个大的！</h3><p>恰逢这段时间想跟<a href="https://blog.tanuki.moe/">裙友</a>一起做一款以情绪觉察为核心的作品，我们聊到了我写生存手册时挖了没填满的坑。</p><p>当时生存手册计划做一个配合的网站，这个网站里面有按照情绪轮逻辑分布的情绪概念，我们设计了一套非常优雅的交互体验带领用户探索整个情绪空间，用户将这些情绪收入囊中并用简短的文字记录当下发生的事。</p><p>这个项目后来没有执行下去，因为工程上的一些瑕疵，还有几处产品上没想明白的点，所以就一直搁硬盘里吃灰，我时不时就会把整个想法重新拎出来，再放嘴里嚼两口，可惜的是，每次都嚼不出来什么新滋味。</p><p>后来我们还做了一套情绪扑克，每一个情绪都是一张卡片，每个扑克上都有图，我试图利用这个扑克来设计一套情绪理解和觉察的工具，但也没什么下文。</p><p>不过 ADHD 是这样的，说不定什么时候就会把什么莫名其妙的东西揉成一整坨。一日我惊觉可以把这个几个吃了灰的专案和解不开的问题放在一个体系下重新思考，「情绪叙事」说不定是一个可行的解决方案。那时我心底便生出了一丝想要做点什么的冲动，于是便打开 Typst，把所有的扑克缩小了重新排版，做成贴纸，跑楼下印成了三大张 A4 的胶贴。</p><p>我脑子里的想法是，既然「情绪词」是通过不断经历外界刺激而习得的，那么看到词汇，我们应当也能找出最符合它的回忆。于是我打开了浏览器，在里面噼里啪啦地打出了几段生命故事。打完成后，我拿出了平时习字的小本子，翻开没什么大用的纸张的背面，把它们誊抄了下来。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/808bc80fdfd3a5a2b520db504157c53c.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我的誊抄</figcaption></figure><p>其实誊抄这个步骤很多余，也很花时间，贴纸也是多余的，而且印出来很贵，但是我觉得这些故事值得用一个更加正式的方式被记录、值得用一个更加精致的格式来妆点，容纳在一个不容易消逝的载体上，于是就把头洗下去了。我每写一个故事就把对应的小贴纸贴在上面，整整写了六十页。</p><p>所谓的故事，并不是那种前情提要、登场人物、起承转合、故事结局悉数落于笔下的东西，而是浅浅的三四句话，把人事时地物和我的感受全都准确记下就好。我以三个词汇为一组进行撰写，一个积极的、一个消极的、还有一个需求。</p><p>考虑到写三百六十多个故事太过变态，我缩减了工作范围，将范围缩减到了情绪轮的前三层，合计一百三十个情绪词。因为考虑到需要配对，所以能写的故事数量取决于哪一组词汇的数量最少，也取决于我的表达能力、意愿和过往经历，所以最一开始的规划是，先写 99 个故事就好了。</p><p>啊ˇ哈ˋ！这次要玩个大的！于是我开始了某种诡异的「笔耕不辍」。真是钢笔都快搓出火星子了 (　ﾟ 3ﾟ)。</p><p>最一开始的撰写是轻松愉快的，因为坐在那寻思过去的事情谁不会嘛，所以就是单纯地输出，但是写到第 60 个故事的时候我的思维开始逐渐枯竭。一方面这个过程本身就是产品研究的一部分，我自然是希望赶快得出一些结果，所以把自己逼得有点死，最一开始每天写六个故事，慢慢往后可能每天都会写十八个。因为同时涉及到多种情绪不同的情绪，而在撰写文字的时候我也会浸润在这个体验当中，所以整个人是很疲惫的，甚至有几天内心中非常沉闷和酸涩。另一方面，我的确也是想不出什么故事可以填满这个格子了。</p><p>但是事情慢慢出现了转机，随着我将注意力切换到人生的不同段落，一些尘封的记忆开始慢慢地涌现出来，有很多回忆都是相当惬意、轻松、愉快的，所以一直写到第 99 个故事我都没有收笔，因为脑袋里面还有一些可以继续撰写的内容，于是最终的答卷是 105 则故事，甚至最后几个故事的格式是非常重要的「总结陈词」。</p><p>这些故事覆盖了我人生的方方面面，从尚且年幼到步入职场，从我喜欢吃什么看什么、到我所经历的性骚扰、攻击和霸凌，从我过去闪耀的成功到难以启齿的挫败。我感觉自己同时是一名医生，也是一名病人，坦然地面对赤裸的自己，认真地观察、甚至是欣赏每一处细节。</p><p>这里我应该给出一些例子，但考虑到本人自己的耻度还有读者的阅读体验，特别黑深残的例子请允许我自己保留，在这里我只向你分享一些比较普遍级的，像是：</p><p>积极情绪：</p><blockquote><p>吸引：我记得那是我还是学生时的一个夏天，我不知为何醒的很早，那时天空已经半亮，呈现出很沉静的灰蓝色，楼下的草坪刚割完草，散发出沁人心脾的香气。我家住在顶楼，所以能清晰地看到那片完整的天空。我看着这宁静的景象被深深地吸引，想着还得上学又赶快躺下，但躺下后又爬起来看了一会，那是我此生都无法忘怀的画面。</p></blockquote><p>消极情绪：</p><blockquote><p>惭愧：我得承认自己的性格中有很阴暗的一面，高中的时候我和同桌的关系挺要好的，他的成绩异常优秀还擅长运动，与之相对的我因为 ADHD 和体弱几乎成了他的对立面。我记得一次因为语文古诗词背诵他完整通过了测试而我没有，我发了脾气，他指出了我内心中丑陋的嫉妒，我的班主任也耐心地让我看到了这点，虽然当下很不服气，但是现在想来真是惭愧啊。</p></blockquote><p>需求：</p><blockquote><p>一致：我很喜欢「整齐」的东西，所以总是买一个品牌一个尺寸的本子、同一个牌子的墨水、甚至会把药拆开装到同样大小的不锈钢瓶里、把调料装到同样大小的罐子里，哪怕是在做设计的时候我也对「对齐」这件事情异乎寻常地执着，因为这种秩序感让我感到心旷神怡。</p></blockquote><p>我是从 6 月 30 号开始这个实验的，到 7 月 9 号完成了第 99 篇，7 月 10 号完成了额外的六篇。</p><h3>玩耍数据</h3><p>我认为 99 个故事是一个很好的标准，一方面它提供了足够的压力，使得我没有办法逃避面对一些真实的情感；另外一方面，它又提供了一些空间，不会太过为难我去为了「完成任务般地」填一个格子而生硬地塞一些不重要的故事进去。而从数据分析的角度来看，对一个复杂的「人」进行「抽样」只取 n=30<sup class="ss-footnote" href="" title="统计学上认为当样本量 n=30 时均值的抽样分布会呈现正态分布，因此进行数据分析时不会因为方法对分布的假设与实际冲突而得出错误的结论，这点我断更的连载《统计学自下而上》有详细说明。BTW，我今年打算复更这个系列，虽然今年已经没几个月了，而且我就只是想想，笔力不一定足，没错我就是想在这没人读的页脚上说点废话你来咬我啊。">2</sup>&nbsp;也实在是有些说不过去，甚至在我看来有些过于抬杠和欠揍。</p><p>我想做的分析包括两部分，定性分析和定量分析。定性分析提供一个概览性的报告，客观、冷静地告诉我自己究竟是一个什么样的人。而定量分析则提供一个明确的结构，让我能够以结构化的方式理解自己在面对不同人事时地物时到底是什么样的反应模式。</p><h4>定性分析</h4><p>虽然说是定性分析，但我还是希望整个结构能有一个基本的可复现性，所以我需要一个基本的报告结构和报告执行标准。为了让这部分内容明晰，我分别和 Gemini、Claude、Grok、 DeepSeek 四个模型的不同版本聊了几次自己的想法。我先像模像样地给整个流程起了一个名字：E99 情绪叙事测评。当然这不是什么非常严格的心理测评，我只是希望在整个讨论过程中能够有一个明确的标的和执行的方向。</p><p>每个模型给我的答案都非常不同，但又各有启发，于是我摘录出来了符合我需求的讨论片段搓成了一份杂糅、琐碎的需求稿，交给「法学硕士」做最终的统合。讲道理，我得承认这种需求稿如果来自真实的产品经理，那他怕不是要被拖出去吊路灯了，这么看写出此种不堪稿件的我大抵也是十恶不赦的。但我面对的是一个毫无情感的 LLM，又有什么可惭愧和担心的呢！（挺胸）。</p><p>经过这样一番整理，加上我最后手工的修整，最后得出了这样的一份报告架构：</p><ul><li><strong>引言（核心摘要与关键洞察）：</strong> 在报告的开篇，用一段高度凝练的文字概括这个人的核心画像。</li><li><strong>根基与底色（「我是谁」的源头）：</strong> 这一部分旨在探寻人物的「成长土壤」，解释其人格、价值观和创伤的来源。</li><li><strong>内在结构与动态（「我如何运作」的机制）：</strong> 这一部分是报告的核心，它描绘了一个「活生生」的人。它展示了第一部分塑造的「根基」在现实生活中是如何运作、如何冲突、如何表现的。</li><li><strong>发展轨迹与方向（「我将去向何方」的展望）：</strong> 这一部分基于前两部分的分析，对人物的未来走向做出评估，并明确其当下的核心驱动力。</li></ul><p>当然，整份文档还有很多细节，比如每一部分具体的段落结构是怎样的，如何展开如何论述，做什么不做什么。限于篇幅我不能把完整的提示词全都粘在这里，但上面的结构大概能够帮助你理解最后成文报告的大体面貌。</p><p>我用不同模型跑了分别几次，虽然偶尔有脱线的情况，但是在提示词的约束下大家写的基本都大差不差，差别只在文风，但核心的质性分析工作都没有什么太大问题。</p><h4>定量分析</h4><p>定量分析这块相对比较复杂，一方面你不能让 LLM 做李克特量表，这个行为本身就处处散发出不靠谱的气息。另外一方面，我们还是得解决大量配对的问题，哪怕最后的样本只有 105 条故事，最后也有 10920 对内容需要比较，哪怕是给大语言模型这事情也实在是太残酷了。</p><p>思来想去，我最后的做法是让 LLM 找出 200 对最有关联的故事，并且论述它们之间的关联是什么。</p><p>为了确保对「关联」的定义是明确的，我参考了定性分析时使用的方法，整理了一份「何为关联」的文档，并且清晰地定义了四种关联：</p><ul><li><strong>主题相似性：</strong> 共享主题或情境，用以识别核心生活领域；</li><li><strong>因果或时间序列：</strong> 按时间或逻辑的因果链接，用于追踪情绪演变；</li><li><strong>心理动力学：</strong> 相似的内在冲突或防御，探索心理结构；</li><li><strong>人物关系：</strong> 相同的显著个体，用于分析关系动态；</li><li><strong>关键要素重叠：</strong> 共享的人、事、物或地点，突显有影响力的生活要素。</li></ul><p>但是这么砍下来，好像还是哪里不大对劲，我们还是得回答跟「显著性」类似的问题：「凭什么你说有关联就是有关联？」作为一个兴趣研究，我给出了一个比较暴力的答案，重复跑 10 次同样的任务，收集关联的次数作为「确定性的依据」。就个人情感上讲我觉得 10 次可能并不充分，但跑到这个数量之后一些模式已经初露端倪，于是我便暂时停下了折腾模型的脚步，统整了全部的数据，尝试以视觉的方式将它们表现出来。</p><p>因为整个需求没有很复杂，所以我搞了个小网站，导入数据到最终呈现结果一共也就用了不到一下午。成品如下：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/cc48dda2c7268be6a6a663bd4d2c1e42.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>整个情绪网络结构</figcaption></figure><p>你眼前看到的这个长得很像脑子的图像就是我的情绪网络，这网络最终会呈现出什么形状完全由算法和数据决定，我无法控制。所以老实讲，看到这个呈现出大脑形状的三维图形后，我的内心当中还是有一点小小的震撼，毕竟我硕士专攻的就是脑科学领域，从这形状里还是能感受到某种「充满神秘色彩的缘分」。</p><p>节点的颜色代表这个节点的类型，红色是消极、蓝色是积极、棕色是需求。而节点之间的连线表示有几次评测指出这两个节点之间是有关联的。</p><p>如果点击中间的连接，就可以看到是哪次测评指出这二者之间有连接的、这种连接的类型是什么、大语言模型给出的连接理由为何。我沿着整个网络一路点下去，发现对于那些非常粗壮的连接，下面给出的理由都颇为一致。这是一件好事。</p><p>网络数据提取出来了之后，我希望从这个网络当中看到一些模式，所以决定给节点做一些标记。思路是类似的，把原始数据喂给 LLM，要求他提取出来每则故事里面的人、事、时、地、物，制成标签写入原始数据。为了确保标签是全面的，这个任务一共重复了 12 次。</p><p>相对于分类，打标签是一个相对开放的任务，所以输出可能会有一定的随机性，因此输出数据清洗的过程相对来讲就比较关键。我在这里使用了比较严格的数据处理方式：</p><p>首先，扩展标签数据。对于每个节点的每个标签，检查是否有其他标签被包含在当前标签中，如果有，就将被包含的标签也添加到该节点的标签集合中。比如，一个节点中有「班主任」，而另外一个节点里发现了「初中班主任」，那么「初中班主任」就会「分裂」出一个「班主任」标签。</p><p>然后对数据进行清洗：</p><ul><li><strong>长度过滤：</strong> 标签长度必须大于 1 个字符，过滤掉单字符标签；</li><li><strong>情绪词过滤：</strong> 标签不能与现有的情绪词重复；</li><li><strong>节点频次过滤：</strong> 标签在单个节点中必须出现至少4次，确保标签的重要性；</li><li><strong>节点分布过滤：</strong> 标签必须在至少3个不同节点中出现，确保标签的通用性。</li></ul><p>整个清洗流程是为了满足这种清理机制的目标是：去除噪声标签、避免功能能混淆、确保标签既在单个节点中足够重要，又具有跨节点的普遍意义、提高网络图中标签数据的质量和可用性。</p><p>有了这些节点标签数据，我们就可以玩出一些新的花样了。下面这张图展示了节点的筛选器，如果你点击一个标签，所有无关节点和连接就会消失，只显示出来有关的信息。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/2ed6201642e39c836cd8f422225d9d8c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>子网络结构</figcaption></figure><p>图片的右侧展示了两个网络，一个是「ADHD」网络，另外一个是「高中」网络，它们相对客观地反映出了我眼中的 ADHD 和高中时期生活的情感面貌。</p><p>这些「子网络」看起来非常像「星座」，在向别人介绍这些子网络的时候我也喜欢用「星座」这个词汇来大幅缩减介绍的篇幅，因为这个词本身就包含了「对人格进行推论」的意涵。但和星座不同，这里面的「星星」和「图形」都是有明确意义且可以循证的。</p><p>说到星座就不得不提起曾先生那个那个知名段子了：「你相信人有自由意志，但是也相信同一个月份出生的人性格都一样？」。讲这段内容不是为了说明什么，只是看你已经读了将近一万字，或许会觉得枯燥，想调节一下气氛 σ`∀´)。</p><h2>镜子里有什么？</h2><p>在撰写这篇文章的时候，我不停地沿着这张网络图点来点去，尝试从不同的角度来观察和理解其中的信息。看到有些内容，让我的一些猜想得到了证实，而点到一些信息时，又觉得新鲜，原来这两段经历之间还有此等关联。我时而缩小网络，时而钻进去仰望那一条条边，虽然看似凌乱，但又呈现出了一种结构和美感。我感觉自己似乎置身于一个雄伟的建筑，凝视「人」的复杂和美妙。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/12/526414b6270e8144fb4933abe86fcde2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>网络内部</figcaption></figure><p>我也在想，置身于这个时代的我似乎是幸运的，因为有了此等先进的技术，我才有机会将所学的知识、所想的理念变成一个可以看得到的形体。真神奇啊，真美好啊。</p><p>对着那份真实的报告，还有庞杂的网络，我的内心当中百感交集。</p><p>虽然不是经过 Peer Review 的测验，但我还是牵强地给他起了 E99 这个名字，在某种意义上也是为怀着某种期待，期待世人能够放下对 SCL-90 的误用，放下对那些标签的执念。一个字母比三个字母更加铿锵有力，而 99 又比 90 大，符合「大就是好」的传统美学认知。我知道这是某种精神胜利法，这种自己搞起来的玩具永远不能起到什么货真价实的作用。但透着这面亲自打磨的镜子，我的确看到不一样的风景。对于我个人来讲，这次实验的意义和影响已经足够深远。</p><p>如果以前你问我「我是谁」，我可能会给出这样的答案：</p><blockquote><p>两只眼睛一个鼻子一张嘴。</p></blockquote><p>但现在我从镜子里看到了什么？我想 Gemini 总结得不错。</p><blockquote><p>他从破碎的过往中拾起理性的碎片，以创造为丝，编织出一座秩序井然的孤岛，抵御世界的侵袭。他既是这岛屿坚硬的守护者，又是渴望大陆温暖的囚徒。那颗高度敏感的心，在美的瞬间沉醉，也在无声的疏离中疼痛。其一生的征途，便是在这片孤独的海上，寻找一个能卸下甲胄、安然停泊的港湾。</p></blockquote><p>以上就是今天的分享，感谢你能读到这里 ♥</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/100775</id>
            <title>老牌但不老旧的开源媒体播放器：VLC media player</title>
            <link>https://sspai.com/post/100775</link>
            <guid isPermaLink="false">https://sspai.com/post/100775</guid>
            <pubDate></pubDate>
            <updated>Thu, 10 Jul 2025 06:07:54 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: VLC播放器,媒体管理,播放列表,本地播放

总结: 本文介绍了VLC媒体播放器在本地媒体管理方面的多种实用功能。作者通过建立播放列表解决NAS存储中频繁切换文件夹的痛点，详细说明了XSPF格式播放列表的创建和使用方法。文章还展示了VLC的进阶功能，包括视频录制、截图、AB循环播放、转码压缩等操作技巧。此外，介绍了皮肤插件安装、跨设备播放列表适配、局域网直播和IPTV播放等特色功能，帮助用户获得更高效的本地媒体播放体验。 </div>
                        <hr>
                    
                    <h2>前言</h2><p>在流媒体盛行的今天，每当 90 后的我想欣赏一部剧集或电影时，仍会优先将其下载后观看。然而，随着时间的推移，累积下来的媒体内容也是越来越多，尤其是在有了女儿之后，用来记录女儿成长的视频数量也随之暴增。虽然家里目前用来存储媒体文件的 NAS 还够用，但如何方便快捷的播放里面的媒体内容却渐渐成为了一个问题。</p><p>最开始我是使用直接访问 NAS 文件目录的办法来播放媒体文件的，例如使用 Windows 电脑时用自带的文件管理器来访问 NAS 并播放媒体。但时间久了，我渐渐发现了一个问题：比如我在看完电影《破坏之王》后，想要为女儿播放《贝乐虎儿歌》，我需要从「电影」文件夹一层层返回到根目录「Video」，然后再依次进入「儿歌」 -&gt; 「贝乐虎儿歌」文件夹，才可以找到对应的视频进行播放。虽然上述操作并不复杂，但每次想要切换视频时，都需要重复这一操作难免会让人感到厌烦。为了解决这一麻烦，我先后在 NAS 中安装了 Video Station、CAYIN Media Viewer 与 plex 等来帮助我播放媒体文件，但令我失望的是，它们虽然界面漂亮且功能丰富，可受于各种限制，它们很难能做到我想要的「点开即播」，因此在衡量一番过后，我最终选择放弃它们。</p><p>直到最近，我在电脑上使用 VLC media player 播放视频时（它是我一直再用的媒体播放器）稍微深入研究了一下它，才发现它竟然有许多我未曾注意到的好用功能，并且其中的某些功能完全可以解决我上述的媒体播放需求。于是，我在深入了解一番后忍不住开始着手这篇文章，想要将这款播放器介绍给大家。</p><h2>基础使用</h2><p>VLC 多媒体播放器（全称：VLC media player），最初名为 VideoLAN Client，是巴黎中央理工学院学生的专题项目。2011至2012年，大部分 VLC 组件重新以 GNU 通用公共许可协议发布，如今其贡献者遍布全球，由非营利组织 VideoLAN 负责开发。在设备上安装 VLC 非常简单，以 Windows 系统为例，只需打开官网 <a href="https://sspai.com/post/www.videolan.org" target="_blank">www.videolan.org</a>，选择对应系统版本，然后下载安装包即可。</p><figure class="image ss-img-wrapper image_resized" style="width: 400px;"><img src="https://cdnfile.sspai.com/2025/07/04/80c7c626be947bc0c9c2190a66e003f6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>VLC 官网界面</figcaption></figure><p>安装过程无需赘述，只需一路「下一步」即可。在安装过程中，系统会提示选择安装组件，可根据个人喜好选择。当然，直接继续「下一步」也是可以的，VLC 官网提供的安装包并没有隐藏捆绑项目。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/87bbfa87ed9265833686ece798bfbe1c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>选择安装组件</figcaption></figure><p>安装完成后，无需再为其额外安装编解码器，它默认几乎支持所有常见的媒体格式，同时也支持播放 DVD、蓝光、音频 CD 等。</p><figure class="image ss-img-wrapper image_resized" style="width: 501px;"><img src="https://cdnfile.sspai.com/2025/07/04/c7cf4efaf71fbab19189e8080a15e892.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>支持的媒体格式</figcaption></figure><p>安装完成后打开软件，它的默认播放界面被分为四个区域，从上至下分别是：标题栏、菜单栏、播放视窗以及工具栏。其中，在最下方的工具栏默认显示的按钮依次为：播放、上一个媒体（长按快退）、停止、下一个媒体（长按快进）、全屏、视频扩展设置、播放列表、循环播放、随机播放。音量调节位于工具栏右侧，上方的灰色条则显示播放时间、进度和剩余时间。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/4ac3c942ec357edfd0a34b579868e01a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>VLC 默认界面</figcaption></figure><p>通常情况下，此时只需将媒体文件拖拽到播放窗口即可播放。但若要高效地播放媒体内容，我更倾向于通过建立播放列表来避免频繁拖拽文件的麻烦。</p><h3>播放列表</h3><p>所谓播放列表，是指将电影、剧集等媒体按照用户的喜好进行播放的内容列表。将列表编辑完成后，以后只需选择该播放列表，就可以播放列表中的内容。</p><p>在 VLC 中建立播放列表的方法如下：点击工具栏中的播放列表图标，进入播放列表界面。接着在右侧播放列表界面右键单击，在弹出的菜单中选择「添加文件」或「添加文件夹」；</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/81366e7861f7a6ccb416dd7086c3a6e4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>「添加文件」或「添加文件夹」</figcaption></figure><p>在弹出的文件管理器界面选择要添加的视频文件；</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/268d4b39d8bb89dc721430a9148734c2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>剧集还是「添加文件夹」更方便</figcaption></figure><p>文件添加成功后，会在右侧列表中显示所有视频文件并开始顺序播放；</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/cb30912aacdca2694739680f0f20afba.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>左边的播放窗口可以通过调节窗口大小来隐藏文件路径</figcaption></figure><p>通过这种方式，可以获得类似在 B 站播放视频时，左边播放、右侧选集的操作体验。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/ef11a864d9ce51abd4ecc25a0d127ccc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>B 站也有一个「播放列表」</figcaption></figure><p>需要注意的是，此时播放列表虽然已经建立，但尚未保存，下次启动软件时这个播放列表就会消失。因此，还需要继续操作：在播放列表中点按鼠标，打开右键菜单，选择「将播放列表保存为文件」；</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/691ec71db422d74f8163a413c6aaf947.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在弹出的文件管理器窗口中选择保存位置，输入文件名称，点击「保存」，即可将当前播放列表保存为一个「xspf」文件。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/dc3b8b2dffa968298d0d9de89a5acc89.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>XSPF 文件是一种基于文本的播放列表格式，它本身并不是媒体文件，而是用来指向或引用媒体文件的引导文件。VLC 可以通过此文件来确定打开和播放的媒体内容。只要它所在的文件夹与引用的文件结构相同，该文件就可以在任意一台电脑上使用。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/ff9f61ea62704e82c57868dd0e86011b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>除了 XSPF 格式外，VLC 还支持 M3U8、M3U 和 HTML 格式的播放列表。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/04/69da90e5ee8679fc8e997d5f76806c80.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>将播放列表保存好后，再播放媒体内容就变得简单多了：无需再通过文件管理器一层层地寻找视频，只需要点击存好的播放列表文件，就可以在 VLC 中播放列表中的媒体内容，获得不输于在线视频网站的观看体验。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/6d5436225a04fabf5c4ff3bded80a234.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>录制视频、捕获截图、A - B 循环播放</h3><p>以往播放视频的时候，有时遇到精彩的画面想要保存下来发个朋友圈什么的，经常因为繁琐的操作而放弃。而在 VLC 中，我只需要打开「视图」选单，勾选「高级控制」这一功能，一切都将变得简单起来。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/fbc5062a7621d33c53c280fecf9a9696.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>勾选「高级控制」后出现的四个按钮</figcaption></figure><p>勾选「高级控制」后，播放界面的左下方会新增四个按钮，它们分别是录制、捕获截图、A - B 循环播放和逐帧移动四个功能。点击「录制」按钮（Shift+r），会开始录制当前视频，再次点击停止。录制好的视频会保存在电脑默认的「视频」文件夹内。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/9225b33ba92811ecc0c5ca8f6ddd5c72.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>开始录制当前视频</figcaption></figure><p>点击「捕获截图」按钮（Shift+s），可将当前帧保存为图片，图片保存在电脑默认的「图片」文件夹内。在截图时，若需精确定位画面，可以使用「逐帧移动」按钮（e）来定位画面。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/8afaf4c310000b93a1f5ee25868924eb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>逐帧移动时会有提示</figcaption></figure><p>若是想要循环播放某个片段，可以使用「循环播放」功能来实现：首次点击「A - B 循环」按钮时，「Ａ」字会高亮，代表已经设置好循环点 A ；再次点击后，「B」字也会亮起，代表循环点 B 设置完成，此时 VLC 将循环播放 A-B 之间的内容。若想取消循环，只需再次点击按钮取消字母高亮即可。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/b2fed2a15089b476d9ab5618cbaf8014.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>A、B 两个字母亮起，开始循环播放视频</figcaption></figure><h3>视频压缩、转码</h3><p>VLC 还具备将媒体内容进行压缩、转码或将视频转换成音频的能力，虽然可定义项无法专业软件相比，但是对于大多数使用者而言已经足够。</p><p>要使用该功能，需要在「媒体」菜单中选择「转换 / 保存」选项（Ctrl+R）；</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/74655463e1ddbd9c6c445f65f27f0876.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在弹出的界面中选择「+添加」按钮，在弹出的文件管理器界面中选择一个或多个待编辑的内容；</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/214aeaac64b88575059003027c0bd1b1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>接着点击下方的「转换 / 保存」按钮，会弹出一些设置选项，在「配置文件」处可以选择转换后的格式，点击后方的扳手图标，可以显示码率、帧率等进阶设置。在「目标文件」处，若是转换单个文件，可以设置输出目录；若是多个文件，则不能更改输出目录，转换后的文件将输出在原目录下。为了避免混淆，可以勾选「在文件转换后的文件名末尾添加-converted」。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/e645e68ad59a2293ff6e491cb6051346.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>最后点击下方的「开始」按钮，即可开始转换，转换进度会显示在播放进度条处。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/6fdd19d1ee74ecfb2798784fd65ab496.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>皮肤与插件的安装</h3><p>作为一款开源播放器，VLC 支持插件与皮肤的安装。它们的安装方式有两种，一种是通过软件自带的插件管理器安装；另一种是下载好文件，将其复制到 VLC 的安装目录内。</p><p>VLC 的插件管理器在「工具」菜单内选择「插件及扩展」即可打开，但其中的大部分内容都已经许久未更新，所以我更推荐通过手动安装的方式来安装它们。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/c94d323530afe61d155a68361f72d67a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>访问 VLC 的<a href="https://addons.videolan.org/browse/">官方扩展库</a>网站，可以下载到最新的插件与皮肤。</p><figure class="image ss-img-wrapper image_resized" style="width: 451px;"><img src="https://cdnfile.sspai.com/2025/07/04/7d3f522c5655ecc600e971a2990f9cfd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>以安装首页的这款 Hind VLC Skin 皮肤为例，点进皮肤的介绍页面，然后选择「Files」，即可看到皮肤文件。</p><figure class="image ss-img-wrapper image_resized" style="width: 391px;"><img src="https://cdnfile.sspai.com/2025/07/04/e0a971f6dcb9bdb0ea8fe5d6784a2f38.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>因为我使用的是 Windows 11 系统，所以下载适用于该系统的「Hind-Windows.zip」文件。下载好后将其解压，文件夹内的 .vlt 文件即为 VLC 的皮肤文件。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/04/8bc681f839263429849b0fa6aa259fd7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>接下来进入 VLC 的「偏好设置」（Ctrl+P），选中「使用自定义皮肤」并在下方「皮肤资源文件」处选择刚刚下载好的皮肤文件，再点击「保存」即可。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/cc3509121cf2cb84e5b636ec1094ae8c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>最后重启一下播放器，就可以看到焕然一新的播放界面了。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/d3d1b15f34adca8145f65cc965acbbf5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>若是安装了多个皮肤，可以在播放界面按右键调出菜单，按下图所示更换皮肤。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/d36bdeb7d9fc2e0539e16533945c6e30.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>插件的安装与皮肤不同，设置中并未提供安装选项，因此，需要将插件拷贝到 VLC 的插件目录中才可以。以 Moments Tracker Revisited 这款插件为例，下载插件后，它是一个后缀为 .lua 的文件。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/04/ea5c45e947d794dcdfe7a1c74e8bd21c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>打开路径 C:\Users\UserName\AppData\Roaming\vlc\lua\extensions，将 Moments-tracker-rev.lua 文件拷贝到该目录中。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/04/13ad01a0fdaf8ad954643a20c34393ea.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>接着重新启动 VLC ，即可在「视图」菜单中找到刚刚安装的插件。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/3e950c2a30e19e665a5d7279aac69362.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>进阶使用</h2><p>除了上述功能外，还有一些较为进阶的使用方法可以介绍给大家，只需要一点点的动手能力即可实现。</p><h3>适用于其它设备的播放列表</h3><p>在上一章节中，我通过建立「播放列表」的方式来免去频繁查找媒体文件的麻烦，那么，在其它设备中，是否也可以使用这种方式播放媒体呢？当然是可以的，但需要对 .xspf 文件文件做出一些修改。</p><p>在电脑中使用记事本打开已经保存好的 .xspf 文件，可以看到如下内容：</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/33734aac870f81aad3600325cba05ecd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在 &lt;location&gt; 标签后，可以看到媒体文件的存储路径为：file://gcloud/Video/....../01.mkv（gcloud 是 NAS 的名称）。因为我家里的 NAS 是通过 smb 协议来共享文件的，所以如果想在手机中使用该 .xspf 文件访问并播放 NAS 中的媒体内容，需要将文件中的 file: 替换为 smb:。修改后的路径为：smb://gcloud/Video/....../01.mkv，替换完成后记得另存文件。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/cb398c576bb1077c855f196fa422f499.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>初次在手机上用 VLC 打开该播放列表时可能会弹出账户验证，输入 NAS 的访问账户与密码后即可开始播放，并且播放列表也可以正确显示。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/7b18d3f5d04a825d791fc032ccbd07d9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>在手机上使用播放列表</figcaption></figure><p>在修改 .xspf 文件时，通常只需要将文件中的 file: 替换为 smb: 就可以，但若是想要保证兼容性，也可以选择将 NAS 的名称替换成它的 IP 地址，如修改成这样：smb://192.168.1.225/Video/....../01.mkv。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/f1c07e9b9280e92ffec57c889e4cbf11.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>最后，我将手机与电脑两份播放列表文件放到 NAS 中的根目录下，这样在家里无论是使用哪种设备，只需要寻找到对应的播放列表文件即可播放并进行选集操作。</p><figure class="image ss-img-wrapper image_resized" style="width: 309px;"><img src="https://cdnfile.sspai.com/2025/07/04/fa15ee908f2dfc3d4eda59fbd2f0fa63.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>稍微有些美中不足的是，这个方法需要维护两套播放列表文件。理论上，在电脑中的 VLC 也是可以播放 smb://192.168.1.225/Video/....../01.mkv 路径播放列表的，所以理想情况下，只需要维护一套播放列表即可。只是不知是何原因，我尝试了好多次都没有成功，因此若是哪位朋友能指点一二，我将不胜感激。</p><h3>在局域网内进行直播</h3><p>VLC 还有一个有意思的功能，就是可以将它作为一个本地直播服务器，将电脑中的媒体文件、摄像头或桌面画面推送到局域网内的其它设备上。我以推送一段视频为例：</p><p>打开 VLC，在「媒体」菜单中选择「流」（Ctrl+s）；</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/3b88048294609f921c6a7b8dd9799a4d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在弹出的窗口中点击「添加」，选择要推送的视频文件，然后点击「串流」；</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/d1177fc4b60652f058824fa01cbeffcd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>点击「下一个」；</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/c6e127eafb8bdadee06d940b82cd8a21.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在「新目标」一项选择「RTSP」，然后点击后方的「添加」。注意！此步不要直接点「下一个」，否则会因为缺少关键设置导致推流失败；</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/a9e077b7c159c852d5ace9445d53f817.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>设置端口与路径（路径名称随意，方便自己记忆即可），然后点击「下一个」；</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/50d9791419f4c77b40b9d5f600bed769.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>接下来需要设置转码选项，考虑到不同设备的兼容性，建议选择图中的 Video-H.264+MP3 (MP4)；</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/a9308630f0aaca2e3e4631b64385fb7f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在接下来的窗口中可以看到推流的参数，红框部分再加上推流设备的 IP 地址即为推流地址。例如我用来推流的电脑 IP 为 192.168.1.70, 那么推流地址为：rtsp://192.168.1.70:8554/eva；</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/e5f6f8e44013cfd3029c654b861039cf.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>点击「流」，即可在视频进度条处看见时间开始滚动，这代表 VLC 已经开始流推流工作。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/e5f5c716abc42e8be5cfd645abc2f125.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>接下来就可以在局域网内使用其它设备来拉取推流了。例如我在手机中打开 VLC，点选「更多」，然后选择「新串流」按钮；</p><figure class="image ss-img-wrapper image_resized" style="width: 231px;"><img src="https://cdnfile.sspai.com/2025/07/04/3123f34c96bef45694037bc93e54a5b1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在串流地址一栏输入推流地址：rtsp://192.168.1.70:8554/eva，再点击后方的播放按钮即可播放；</p><figure class="image ss-img-wrapper image_resized" style="width: 301px;"><img src="https://cdnfile.sspai.com/2025/07/04/33acba4fd01e881b9e5c4a07ffcb3a81.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在刚开始播放的时候可能会出现音画不同步或者画面不清晰的现象，通常只需要稍等片刻，画面就可以正常播放了。</p><figure class="image ss-img-wrapper image_resized" style="width: 301px;"><img src="https://cdnfile.sspai.com/2025/07/04/68bf2ea8f72ed57f468963d0de757d5f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>如果想推送电脑摄像头或桌面的画面，只需要在第一步的窗口中选择「捕获设备」选项卡，然后在「捕获模式」中选择对应的设备即可，之后的设置参照上方推送视频的设置即可，这里就不再赘述了。</p><figure class="image ss-img-wrapper image_resized" style="width: 501px;"><img src="https://cdnfile.sspai.com/2025/07/04/457c98bf14a6979e0468799c6394d0e6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>播放 IPTV</h3><p>IPTV（英语：Internet Protocol Television），在国内通常被称为网络电视，简单来说就是用网络来看电视。VLC 也具备播放 IPTV 的能力，只要在「媒体」菜单中选择「打开网络串流（Ctrl+N）」，在弹出的窗口中输入 IPTV 源的地址再点击「播放」即可。</p><figure class="image ss-img-wrapper image_resized" style="width: 401px;"><img src="https://cdnfile.sspai.com/2025/07/04/dab0e650f07831e3ffc6084450069ecf.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在 VLC 中播放 IPTV，唯一的难度可能就是寻找合适的播放源了。通过我自己的实测，只要有合适的播放源，许多国内外的电视直播 VLC 都可以进行播放，再配合自带的录制功能，完全可以将电视节目录制下来，供自己以后欣赏。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/04/39221d918229728687eb6712ba78d180.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>播放成功的部分频道</figcaption></figure><h2>结语</h2><p>文章写到这里，我对 VLC 这款媒体播放器的使用经验基本就介绍完啦！也许有人可能会无法理解，为何在如今还要大费周章的介绍一款本地播放器。说实话，我认为如今流行的在线播放虽然便捷，但观看体验其实称不上纯粹，至少我就不是很喜欢在观看视频时，被浮于视频之上的各类文字、图案所干扰。而且在如今动辄 2K、4K 甚至 8K 的分辨率之下，在线视频的画面质量实在有些一言难尽。如果说以前我还因为来回查找媒体文件的麻烦而有所保留的话，那么如今通过 VLC 这款播放器，足以使我在闲暇之时，享受一场沉浸与愉悦的家庭影音体验 ── 对我而言，这就足够啦！</p><p>&nbsp;</p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/100872</id>
            <title>视频播客最大的作用，是让付钱的人变多</title>
            <link>https://sspai.com/post/100872</link>
            <guid isPermaLink="false">https://sspai.com/post/100872</guid>
            <pubDate></pubDate>
            <updated>Wed, 09 Jul 2025 08:30:55 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 视频播客,B站,个人IP,商业化  
<br>  
<br>  
总结: 1. 文章讨论了B站扶持视频播客的政策，认为视频化可能解决当前播客行业生态不足、资源集中和变现手段单一的问题。2. 播客行业目前面临头部集中、甲方数量少、变现方式有限等内生危机。3. 视频化能带来更多元的商业化手段和更广泛的甲方资源。4. 视频对个人IP的塑造能力远超纯音频，能增强粉丝粘性和变现效率。5. 中国互联网跳过电台阶段直接视频化的特点，为视频播客提供了发展基础。6. B站因其用户愿意消费中长内容和"黑听"文化，成为最适合发展视频播客的平台。7. 中国特色的视频播客应聚焦个人IP，针对用户如个人成长等特定需求。8. 简单的播客视频化可能无效，需要结合本土用户痛点和high点进行创新。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px; text-align: justify;">前两天，B站发布了一条扶持“视频播客”的政策，有朋友问我怎么看？<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">我援引了段永平的一段采访——<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">曾经有记者问过段永平：“50年以后，你最想看到你们公司的什么新闻？”</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">段永平说：“任何新闻，哪怕是坏消息，那证明我们还活着。”</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">随便，谁来玩都行、都该欢迎。只要这个行业还能有变化，还有新的资本、玩家和用户进来，那就是好事。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">毕竟，它都这样了，对吗？</p><p style="margin-left: 0px; text-align: justify;"><br />&nbsp;</p><h2 style="margin-left: 0px; text-align: justify;"><strong>01</strong><br />&nbsp;</h2><p style="margin-left: 0px; text-align: justify;">不是说播客行业有多不堪，再坏坏得过实业？<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">但比起外行人看到的热闹，这行目前确实有不可忽视的内生危机，需要外部血液来盘活。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">这行的问题一言以蔽之，没有生态。资源过于集中，无论是资金、人才、用户还是变现的方式和手段，都汇集到了头部。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">首先，这行的甲方数量太少，投得多的，就是那几个知名大厂。至于为什么投放？说白了，市场部的小姑娘小伙子们自己听，所以觉得不妨投投看。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">甲方少带来的次生影响，是加剧了播客行业的贫富分化。甲方能用肉眼看到的播客——最多是用代理商帮他肉眼看——相较于约5万档播客节目来说，九牛一毛。加上几家大厂彼此抄作业，投来投去可能就是那几十档节目，最终你会发现，这行突出一个旱的旱死、涝的涝死。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">头部播客一期定制节目动辄报价十几、几十万是很正常的事，不比头部公众号便宜。但绝大部分播客，根本挣不到广告费。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">变现方式就更少了，播客目前有效的变现手段，除了广告费还算成规模外，像视频那样搞带货、用户付费、私域服务变现、课程变现……基本是不可能的。无论平台产品还是用户付费习惯，还都没有培养得很好。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">即便只说广告费这一样还有个问题，一二线城市白领用户，其实挺“事儿”的。接广告很容易破坏他们的用户体验，很多播客主理人都碰到过，中插广告被用户diss的情况，更别提定制了。这导致很多内容做的很好的知名播客，连广告都不敢接。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">从用户角度讲，虽然一些市场报告上说，中文播客的用户有1.5亿人，但这并不妨碍播客依然是小众爱好，它没有事实上地走向大众化。Vlog当年能出圈，靠的是欧阳娜娜。大家发现：诶，不是非得搞得多专业、多精致才能拍拍Vlog，原来只要美美的，大家就爱看。Vlog这才有机会成为所有人都能拍、所有人都能看的大众创作体裁。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">全民性内容，应该能诞生全民性的代表性人物和热点，但播客行业却是“这边岁月静好”，除了因为工资吵架，还没看到过播客平台能制造出一个出圈的热点。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">一个没有生态的行业，也许能活下来，但很难有发展。没有发展就意味着很难有新鲜血液进入，行业还没站上过巅峰，阶级就已经先固化了。历史经验来看，这样的行业，最差的结局是“死一回”或者说好听点，“主动进行产业升级”。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">或者，需求被其他行业合并掉。就像YouTube，现在已经超过了苹果播客和Spotify，成为了美国最受欢迎的播客平台。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p>&nbsp;</p><h2 style="margin-left: 0px; text-align: justify;"><strong>02</strong><br />&nbsp;</h2><p style="margin-left: 0px; text-align: justify;">如果B站能像YouTube一样搞成视频播客，坦白说我持双手双脚造成，我来这行是为了搞钱的，先天屁股歪没办法。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">视频的特征，恰恰全都是解决播客行业内生危机的手段。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">中国互联网跟美国不一样，我们没在2G、3G时代过多的停留，相当于跨过了“电台阶段”，直接被视频化甚至短视频化了。这也是很多投资人，一开始不看好播客平台生意的原因，毕竟连喜马拉雅都开始搞视频播客了。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">视频经过这些年的高速发展，衍生出的围绕带货和用户付费的玩法，堪称琳琅满目。而商业化手段的多样化，自然就带来了比播客平台更多元的甲方，不仅头部、腰部、尾部商家比例更合理，同时行业分布也非常广泛。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">更重要的是，用户直接付费的能力早就被建设好了。比如B站的蓝链带货、课堂业务、包月充电等等，都是用户直接付钱，而非单纯的贩卖用户注意力。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">而视频化还有个最核心的优势，那就是对个人IP的塑造能力，不是纯音频可以碰瓷的。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">从大概2018年开始，其实视频社交媒体做个人IP的风潮就已经起来了，这个比外界观察到的要早很多。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">外界包括媒体可能是从主流企业家开始做个人IP才关注和跟进。个人IP风潮，是对创作者的重大利好。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">因为如果一个账号知识单纯内容做得好，那在粉丝心中它可能只是个内容供应商，我对你没得感情。就像一个搞笑类的账号，你说用户对他的态度是“给爷笑一个，爷赏你俩钱花”，还是“我太爱你了，我要为你付钱！”，大概率不会是后者，但个人IP可以实现这件事，让粉丝“追随”你。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">用户想喜欢上一个人，那就需要对一个人有全面的感知，目前的媒介手段，恐怕只有视频有这个威力。而喜爱的感情在运营得当的前提下，甚至可以演化成一种“追随”，这对消费者和生产者的关系是一种本质改变，而随着个人IP属性的增强，粉丝粘性会变强，这会带来非常多元的变现手段和更高的变现效率，甚至不需要很多粉丝<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">我认识B站的一位历史UP主（百万粉的级别），不透露名字了，一般来说历史类的UP主以前只能接广告讨饭吃，和播客很像，说实在的，历史UP主是会有很多“黑听”观众的，因为人家很多情况下，确实不需要看你的视频，因为没啥损失，用户听的本质是故事。这和播客还有点像。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">这个UP主的主要营收来源其实是带货，下到十几块钱的小吃，上到几千块的数码产品都能带得动，光佣金一支视频就能有五位数，而且带小吃还是数码产品这个佣金都差不多。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">神奇吧？他给的理由出奇的挺简单——“我露脸，虽然长得不好看，还挺有喜感的，当然也不算丑”。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">听起来有点匪夷所思，但这就是个人IP的能量。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">重点说三遍——视频对于播客创作者最大的价值，是个人IP！个人IP！个人IP！</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">个人IP，是视频播客这条伟大航路唯一的ONE PIECE！大秘宝！</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p>&nbsp;</p><h2 style="margin-left: 0px; text-align: justify;"><strong>03</strong></h2><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">此前，行业里就有些人认为，YouTube在美国能搞成视频播客，那在中国也有希望。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">确实，B站方面泄露的数据也显示，2025年Q1，B站视频播客的消费时长达到了259亿分钟，同比增长超过270%，用户规模超过4000万，这几乎是中文播客市场的1/3。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">但也有疑问，咱们只要照猫画虎，视频播客就能搞好吗？毕竟初中政治都教过，你得符合本国国情不是？<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">B站只能说是离做这件事最近的视频平台，最核心的原因是在早已短视频化的中文互联网世界里，这里的用户是为数不多愿意看中长内容的人。这是播客得以生存的先决条件，毕竟就算优化内容，也不能全做成切片，如果播客失去了深度作为自身的标志，那不如直接转行做搞笑短视频博主。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">另外一个原因，就是前文提到的“黑听”这种文化，虽然这对一个视频平台挺微妙的。但讲实话，B站的知识类视频、电台类直播其实你讲他没有一点视频播客的影子，好像也不对。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">这些内容，不过就是写了逐字稿的播客罢了，用户只听不看，很正常。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">至于说，中国特色的视频播客到底怎么搞，我觉得还是得在那四个字上做文章——“个人IP”。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">我们需要找到中国用户的痛点和high点，就比如说财经播客，YouTube上做得好的，大部分都以访谈顶级企业家、创业者、社会名流为主。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">但坦白讲，中国企业家与其上你的播客，可能还不如自己做账号呢，这就是过早视频化带来的区别之一。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">但是，中国用户对于个人成长的焦虑和痴迷，恐怕要比美国网友强得多。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">有个15万粉丝的UP主叫“糖果果的陈同学”，每期的嘉宾都是科技行业的优秀打工人，逼格可能没有企业家高，但是作为绝大部分普通人能做到的最好样本，这些名企打工人能够做到拉齐校园和职场的信息差、也能带来最新最一线的技术趋势。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">即便他聊得挺干的，但大多数视频还都能有个几十万播放。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">另一个例子是职场区的UP主“王一快”，几个中年大老爷们儿搞对谈，社会热点、职场、法律、科技无所不谈。相应的，他收入结构里也什么都有，有商单、有充电、有直播、有带货、有课程，单看充电这一块，付费看视频的人数就有将近8万，再怎么保守估计，年收入也有百万级。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">他的付费视频大多数，都跟个人成长有关，感情的、职场的甚至还有心灵成长的……<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">一句话，想做个人IP，就在用户真有需求的地方下功夫。内容要体现你真的懂，哪怕跟王一快一样是个懂哥，然后你的产品要在内容上生长出来，能给解决方案给解决方案。</p><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">给不了？那就给情绪价值。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">视频播客，应该有搞头；但播客简单的视频化，大概没有。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/100866</id>
            <title>AI越强大，我的英语却越差？这个方法让我找回学习的感觉</title>
            <link>https://sspai.com/post/100866</link>
            <guid isPermaLink="false">https://sspai.com/post/100866</guid>
            <pubDate></pubDate>
            <updated>Wed, 09 Jul 2025 00:44:21 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: AI翻译,英语能力衰退,个性化学习,Raycast  

总结: 文章讨论了AI翻译工具（如ChatGPT）的便利性导致用户英语能力衰退的现象，指出双语对照阅读往往使人忽略原文。作者提出通过Raycast平台定制个性化AI命令来解决这一问题，强调提示词即应用的理念，并分享了自己设计的单词学习提示词模板。这种方法既能辅助理解生词，又能避免过度依赖翻译工具，同时展示了AI能力的泛化潜力，鼓励读者根据需求灵活运用AI提升学习效率。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px; text-align: justify;">AI 借力，亦需自渡之船</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/09/article/5cdb859c8ec48328c996d9b3c6471207.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2 style="text-align: justify;"><strong>废退</strong></h2><p style="margin-left: 0px; text-align: justify;">我不知道你是否有这种感觉。反正自从有了 ChatGPT ，我的英文能力在大踏步后退。</p><p style="margin-left: 0px; text-align: justify;">原因也很简单，从前看英文内容有生词，我一般是这么处理的：如果能猜出来啥意思，不管它；如果猜不出来，影响了理解，我会查一下。</p><p style="margin-left: 0px; text-align: justify;">关键是怎么查。最初当然是查字典，但是那效率之低，你是知道的。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/09/article/194e98742c869bab70eac03c8389f92a.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">后来有了屏幕取词，效果好一些。但是翻译一般都比较机械。如果安装的字典不合适，很多专业词汇也查不到。</p><p style="margin-left: 0px; text-align: justify;">那时候，我看有的学生喜欢在浏览器打开翻译插件。不管什么页面，直接看中文翻译。这样看似简单，但是很多翻译都是有问题的。尤其是论文翻译，那叫一个乱七八糟啊。我是不敢那么用的。</p><p style="margin-left: 0px; text-align: justify;">而有了 ChatGPT 之后，情况大不一样。这次它再也不会翻译出驴唇不对马嘴的内容了。甚至因为有了足够的上下文，它可以比你用词典翻译效果好得多。</p><p style="margin-left: 0px; text-align: justify;">我给你推荐过 Immersive Translate 这款插件，集成各种大模型，那叫一个好用。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/09/article/6099221a7075e31e3063c04ac2e8a6e6.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">我一般就用它来翻译。场景大都是 Readwise Reader 。我会把各种内容存储在里面稍后阅读。然后英文文章只需要点击一下 Immersive Translate 预设快捷键 Opt + A，立刻双语呈现。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/09/article/be761a9d0f14c8fb9bab79ae4fbb345b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">你以为这样双语对照，就会让自己学好英语？根据我自身测试，以及我的研究生们使用经验，我可以负责任地告诉你，大多数普通人，往往会立即忽略掉英文原文，全神贯注读中文。</p><p style="margin-left: 0px; text-align: justify;">这样下来，你的英文能力难免会衰退。</p><p style="margin-left: 0px; text-align: justify;">我觉得，这样下去可不行。</p><h2 style="text-align: justify;"><strong>解法</strong></h2><p style="margin-left: 0px; text-align: justify;">我解决的办法，是强迫自己读英文，但是我需要更好的辅助自己理解生词的手段。</p><p style="margin-left: 0px; text-align: justify;">你要说找个 AI 应用来翻译生词，那只会挑花了眼。</p><p style="margin-left: 0px; text-align: justify;">但我不想用那些。我准备回归到最简单的方法 —— 自己弄一个。</p><p style="margin-left: 0px; text-align: justify;">因为这将充分发挥个性化定制能力。我喜欢。</p><p style="margin-left: 0px; text-align: justify;">当然，我并不准备利用 Claude Code 给我做个应用。杀鸡焉用宰牛刀嘛。我的办法特别直接，对 AI 来说，<strong>提示词就是应用</strong>。</p><p style="margin-left: 0px; text-align: justify;">所以，我把 <a href="https://raycast.com/?via=shuyi">Raycast</a> 拿了出来。</p><p style="margin-left: 0px; text-align: justify;">我之前 <a href="https://mp.weixin.qq.com/s/dx_kVfeQy4JgLRiXNMIYnw">在这篇文章里给你介绍过 Raycast</a>。它在 macOS 上可以做到系统级集成调用，特别方便。</p><p style="margin-left: 0px; text-align: justify;">Raycast 内置了一个模式，叫做 AI command，就是你给个输入，它干活儿，然后把结果反馈给你。我觉得用它来作为定制化划词翻译工具，正合适。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/09/article/b6cba06976d4231de29756a99c5452ad.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">说干就干。于是我先准备了这样一个提示词。</p><pre class="language-hljs lsl"><code>作为一个英语单词记忆教练，当用户输入单词或短语时，请按以下方式讲解：
【讲解原则】
- 像朋友聊天一样自然，不要像词典那样呆板
- 用生活化的类比帮助理解，建立直觉联系
- 重点讲 
"这个词的性格"
 而非死记硬背
【讲解结构】
1.
 🎯 核心理解（
20
 字内）
用最简单的话说清楚这个词的 
"灵魂"
给出音标
2.
 💡 记忆钩子（
30
 字内）
可以是：词根拆解 / 谐音联想 / 画面联想 / 生活类比
3.
 🗣️ 活用例句（
2
 个，每个不超 
15
 词）
- 一个日常对话场景
- 一个稍正式场景
标注发音重点（用简单标记如 ' 强调此处）
4.
 ⚡ 用法提醒（
20
 字内）
易错点 / 语境限制 / 情感色彩
5.
 🔗 联想扩展（可选，
15
 字内）
相关词族或有趣关联
【示例输出】
单词：resilient
🎯 像弹簧一样，压不垮反而会弹回来的韧性
💡 re (回)+sili (跳)+ent → 能 
"跳回来"
 的 → 有韧性的
🗣️ 
- 
"Kids are so re'silient - they bounce back fast!"
- 
"We need a more re'silient business model."
⚡ 不只是 
"坚强"
，更强调恢复力
🔗 resilience (名词) = 韧性
下面是用户输入
{selection}</code></pre><p style="margin-left: 0px; text-align: justify;">非常简明直白，我想你看一下，也就明白为啥我不想用其他通用的划词翻译工具了吧？</p><p style="margin-left: 0px; text-align: justify;">对，我完全是按照自己想如何学习单词的方式来提要求。如果你有不同需求，可以直接改，AI 都会照做。</p><p style="margin-left: 0px; text-align: justify;">我只解释一下提示词最末的 <code>{selection}</code> 。这个是 Raycast 内置的变量，也就是当前高亮文本。</p><p style="margin-left: 0px; text-align: justify;">这样一来，你执行提示词，它就找高亮文本来处理。所以你可以选一个词、一个短语，一句话…… 多长多短，完全看你有多少不认识的了。</p><p style="margin-left: 0px; text-align: justify;">在 Raycast 里，选择 Create AI command 。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/09/article/6778c99a70d2d85bcfc5689b9d3d676b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">我给它起了个名字，就叫「背单词」。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/09/article/d76bc5aee350a42373353835d2542188.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">然后，把提示词贴到后面。</p><p style="margin-left: 0px; text-align: justify;">我选择模型为 GPT-4.1 。当你订阅了 Raycast AI 后， OpenAI 的这个旗舰模型可以敞开了使用。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/09/article/a7b09a4de6b9f8bac310f6e07f57545a.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">当然你也可以用其他模型，但是我觉得 GPT-4.1 的流式输出支持更好。看着它哗哗哗输出，我挺开心，哈哈。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/09/article/5c399e572a3c71c4c1d761b6c9395158.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">然后，我在刚才的 AI commands 界面里，给「背单词」又加了一个快捷键 <code>Cmd + Opt + .</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/09/article/a0a02146bacbf49abf79d0cebe50b1d8.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2 style="text-align: justify;"><strong>效果</strong></h2><p style="margin-left: 0px; text-align: justify;">之后你就可以执行了。我回到 Readwise 里面，关闭掉了 Immersive Translate 的翻译结果。</p><p style="margin-left: 0px; text-align: justify;">然后，选中词汇，执行 <code>Cmd + Opt + .</code></p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/09/article/7409f4abfab1ccdbd2745c028f9c8d48.gif" /></figure><p>&nbsp;</p><p style="margin-left: 0px; text-align: justify;">我们来看看输出结果。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/09/article/9c4ba0edb9007149fa7c2db1bc3ac2a9.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">我最想知道的，包括词义、发音、构词、例句、情境，还有关联词汇，一应俱全。</p><p style="margin-left: 0px; text-align: justify;">Perfect!</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/07/09/article/4a81150918027a5c8c28d6557a5cfbdc.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">我用它学习了整篇文章，好在生词不多，但是这种阅读原汁原味文章的美好感觉，又回来了。</p><h2 style="text-align: justify;"><strong>小结</strong></h2><p style="margin-left: 0px; text-align: justify;">这篇文章，咱们讲了一个特别小的功能 —— 用 AI 命令定制你自己喜好的英文生词学习方式。它简单、有用，可以用轻松的方式避免咱们过度偷懒依赖 AI ，导致基础能力（例如英语）的迅速衰退。</p><p style="margin-left: 0px; text-align: justify;">更重要的是，一旦你掌握了这种方式，可以举一反三应用到自己的其他学习里面。</p><p style="margin-left: 0px; text-align: justify;">例如你可以指定自己的分析框架，对看到的文章进行梳理，保存为结构化的笔记；你可以对临时笔记处理标签，形成更快速完善的知识管理；当然，你可以用它来满足自己的八卦好奇心……</p><p style="margin-left: 0px; text-align: justify;">我觉得这体现了 AI 能力的泛化 —— 它本来就不是为了单一任务而生的，而是可以随着你的想象，千变万化。</p><p style="margin-left: 0px; text-align: justify;">有人说目前 AI 替代不了高级程序员，因为它对于非常复杂的软件项目还处理不来。这个咱们不抬杠，承认。</p><p style="margin-left: 0px; text-align: justify;">但是对于普通人来说，你可以用自然语言，轻松构建 AI 应用，满足自己的独特需求，不也是一种社会效率的广泛提升吗？</p><p style="margin-left: 0px; text-align: justify;">况且，它的进展，真的是日新月异啊。能亲眼见证这种速率丰富多彩的技术变化，在人类历史上，可能也并不常见吧？</p><p style="margin-left: 0px; text-align: justify;">当然，我们也得注重，像原始人保留火种一般，照顾好自己的好奇心、责任感，和基础技能。</p><p style="margin-left: 0px; text-align: justify;">祝你展开自己的想象力，用 AI 让自己的学习、生活变得更加轻松和美好。</p><p style="margin-left: 0px; text-align: justify;">如果你觉得本文有用，请<strong>充电</strong>。</p><p style="margin-left: 0px; text-align: justify;">如果本文可能对你的朋友有帮助，请<strong>转发</strong>给他们。</p><p style="margin-left: 0px; text-align: justify;">欢迎<strong>关注</strong><a href="https://sspai.com/column/245">我的专栏「科研利器」</a>，以便及时收到后续的更新内容。</p><p style="margin-left: 0px; text-align: justify;"><a href="https://sspai.com/prime/subscription?referral=314606736">点击这个链接加入少数派会员</a>，立享 9 折优惠！获得专属会员内容、会员播客以及会员定制周边。在更多的领域和方向帮你打开脑洞，找到新的兴趣点。与少数派一起洞悉当下，探索新知。</p><span class="ss-paidSection" type="paidsection">&nbsp;</span><p>&nbsp;</p><h2 style="text-align: justify;"><strong>延伸阅读</strong></h2><ul><li style="text-align: justify;"><a href="https://mp.weixin.qq.com/s/cSysHNhu24H8dUpKk9XxQg">品味还是技能？ChatGPT 引发的能力培养变革</a></li><li style="text-align: justify;"><a href="https://sspai.com/post/81470">如何让 ChatGPT 更懂你？新功能 Custom Instructions 尝试</a></li><li style="text-align: justify;"><a href="https://sspai.com/post/77081">AI 真要成精了？ChatGPT 上手体验</a></li><li style="text-align: justify;"><a href="https://sspai.com/post/60321">如何用人工智能免费帮你改英文？</a></li><li style="text-align: justify;"><a href="https://sspai.com/post/89264">开源免费 AI 朗读中文，居然也能以假乱真了？</a></li></ul>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/100782</id>
            <title>文科生独立开者 利用 cursor 从零开发 App 实记</title>
            <link>https://sspai.com/post/100782</link>
            <guid isPermaLink="false">https://sspai.com/post/100782</guid>
            <pubDate></pubDate>
            <updated>Tue, 08 Jul 2025 00:44:26 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 文科生开发,顾家App,AI开发工具,家庭生活记录

<br>
<br>
总结: 本文作者是一位文科背景的开发者，通过自学Swift语言开发了多款iOS应用。最新开发的"顾家App"源于育儿需求，旨在记录全家人不同阶段的生活。作者详细介绍了使用cursor等AI工具辅助开发的过程，包括数据模型设计、功能开发等技术选择。该App针对不同年龄段家庭成员提供个性化记录功能，如婴儿成长追踪、青少年学习管理、成年人生活平衡等，最终形成一个全面的家庭生活记录平台。 </div>
                        <hr>
                    
                    <h3 style="margin-left: 0pt; text-align: justify;"><strong>第一部分 关于本人——文科生的开发探索之旅</strong></h3><p style="margin-left: 0pt; text-align: justify;">本人中文专业，多年科技媒体记者，曾报道过一系列互联网科创项目。 2018 年，在科技界熏陶数年后，凭借着对科技的热爱和对未知的探索欲，利用业余时间，通过论坛和B站的资源，自学了 swift&nbsp; 语言 iOS 开发。一开始出于兴趣，开发出了一款写诗 App — PoPoem（最纯粹的诗文创作平台，PS : 2019 年产品上线时，在少数派上还写过一篇文章<a href="https://sspai.com/post/55012">《诗即远方：一位编程零基础文科生的开发笔记》</a>），后面又陆续开发出了 TodaysList（您的一日生活管家）以及 CardNote（多彩卡片笔记）等产品，今年 7 月，利用 cursor 开发的全家人生活记录 App —— 顾家 App 上线。</p><p style="margin-left: 0pt; text-align: justify;">本人虽为文科生，没有专业、系统学习过 iOS 开发，但已有多年的开发经验，拥有一定的 swift&nbsp;和 swiftui 语言编写基础，因此本文可适合拥有一定开发基础，并想利用 cursor 开发 App 的读者。</p><p style="margin-left: 0pt; text-align: justify;">当然，本文也仅仅是分享我利用cursor开发的一些经验，希望有些经验能给大家带来一些有益的参考，让大家少走一些弯路。</p><h3 style="margin-left: 0pt; text-align: justify;"><strong>第二部分 开发初心——源于生活的需求</strong></h3><p style="margin-left: 0pt; text-align: justify;">开发之路，往往源于生活中的需求与痛点。对我而言，顾家 App 的诞生灵感源自我成为新手奶爸的经历。</p><p style="margin-left: 0pt; text-align: justify;">那是，二零二二年的四月，以安小朋友来到这个世界，我拥有了崭新的天地。也即是那时，我停下了手头的 App 更新工作，成为一位新手奶爸，在空闲的时候协助妻子照顾以安，喂奶、换尿布、洗澡、游玩……所有事情都亲力亲为，那真是一段辛苦却又甜蜜的日子。</p><p style="margin-left: 0pt; text-align: justify;">也即是这段时间，我萌生了一个念头——是否能开发一款记录婴儿成长的 App ，以用来记录以安的成长。但当时白天要工作，晚上要兼顾着照看他，实在抽不出时间写代码。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/04/52b299c18ecb19b49d0d8307845acdca.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0pt; text-align: justify;">三年后，以安已经长成一个小朋友，我想着是时候来做这款 App 了。在此之前，只想着单纯的记录婴儿成长，但是细想一下：婴儿会渐渐成长为少年，少年会渐渐长成青年，青年也会渐渐变成老年；我们的家庭，除了小孩，还有妻子（丈夫）、父母、其他亲人，甚至是宠物等等。</p><p style="margin-left: 0pt; text-align: justify;">每位家庭成员随着时间的流逝，都在渐渐成长、渐渐变老，他们记录生活的需求也在发生变化，婴儿的重点记录需求是生长发育，少年的重点记录需求是学习培训，青年的重点记录需求是工作和生活，而老年的重点记录需求是陪伴和照料。</p><p style="margin-left: 0pt; text-align: justify;">我是不是可以做一款记录全家人生活的 App ？这就有了顾家 App 的大概原型。从二零二四年中开始规划和启动，每天晚上两至三小时编写代码，才逐渐有了现在顾家 App 。</p><h3 style="margin-left: 0pt; text-align: justify;"><strong>第三部分 技术选择——拥抱 AI 开发工具</strong></h3><p style="margin-left: 0px;">在筹备开发顾家 App 之际，正值 cursor 等 AI 开发工具崭露头角。我决心全程借助 cursor 来辅助开发，这一决定基于两点考虑。</p><p style="margin-left: 0px;">一方面，尽管我对 swift 和 swiftui 语言有一定驾驭能力，足以独立完成 App 的 UI 布局搭建，但在面对复杂数据模型的构建以及数据处理流程时，仍感“技”不从心。我期望 cursor 能成为我的得力助手，补齐这方面的短板。</p><p style="margin-left: 0px;">另一方面，AI 大模型的崛起是当下科技领域的显著趋势。无论是专业程序员，还是产品经理等非技术背景人员，都在纷纷拥抱 AI 工具辅助开发。我深谙此趋势不可逆，渴望与时俱进，积极探索 AI 开发工具在 App 开发中的应用潜力。</p><h3 style="margin-left: 0px;"><strong>第四部分 开发规划——理清思路与步骤</strong></h3><p>在开发前，理清思路与规划步骤至关重要，在前期要尽量把整体框架和需求想好。</p><p><strong>首先是要确定好开发环境。</strong>我是使用 swiftui 语言 + swiftdata + iCloud 的组合进行开发； swiftui 已经非常成熟，各类组件也非常丰富，使用起来也相当简洁，能够快速搭建最原生态的 iOS&nbsp;App 界面； SwiftData 是苹果在 WWDC23 上推出的全新数据持久化框架，通过声明式 Swift 代码简化数据库建模和管理，支持与 SwiftUI 无缝集成，使用 SwiftData &nbsp;作为本地存储是最好的选择； iCloud 则作为云端数据存储方案，不需要集成第三方云服务，也能实现用户数据的云端备份。</p><p style="margin-left: 0pt; text-align: justify;"><strong>其次是要明确 App 的整体框架和功能结构。</strong>想要开发的这款 App ，主要包括哪些功能，能解决哪些需求。顾家 App 的需求其实非常简单，就是建立可记录全家人生活的 App ，因此用户可添加任意家庭成员，App 可根据家庭成员的性别和年龄，自动推荐适合的记录类型。例如婴儿可记录生长发育、记喂奶、记换尿布、记辅食、记读绘本等，少年可记录学习、培训、课外活动、玩游戏等，成年可记录饮食、运动、任务等工作和生活，其中女性有记经期专属记录类型，男性有记提肛专属记录类型，而老年则可记录用药、检查、护理和陪伴等等，宠物可记录喂宠和遛宠等等。</p><p style="margin-left: 0pt; text-align: justify;"><strong>第三根据 App 的整体功能结构，设计适合的数据模型。</strong>在这个阶段，便可以利用 cursor 来辅助设计数据模型了。看上去很复杂，其他很简单。首先，你可以告诉 cursor，<strong>“我想做顾家这样一款App，以用来记录全家人的生活，请根据这个需求，生成家庭成员的数据模型，数据类型要包括家庭成员的昵称、性别、年龄、关系、初始身高、体重等等”。</strong></p><p style="margin-left: 0pt; text-align: justify;">其次，选择一个记录类型，先让 cursor 生成记身高的数据模型，“<strong>请生成一个记身高的数据模型，数据类型要包括对应家庭成员、身高数据、记录时间等，记录类型与家庭成员为多对一的关系</strong>”。</p><p style="margin-left: 0pt; text-align: justify;">然后，可利用 cursor 进行批量生成构想中的记录类型，“<strong>请参考记身高的数据模型，批量生成记体重、记饮水、记饮食、记运动……等数据模型</strong>”。cursor 会根据他的理解，自动生成每个记录类型的数据类型，甚至可根据记录数据特点，设置合适的数据类型，生成的内容基本上可用，如何有些类型有特殊的记录需求，可手动调整。</p><p style="margin-left: 0pt; text-align: justify;">当然，可以先不急着把所有记录类型的数据模型都一次性生成，可以先尝试开发记录功能，每开发一个记录功能后，再生成另外一个记录类型的数据模型。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/04/8aa04ed848b0585f3c2d7d3bab8870f4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0pt; text-align: justify;"><strong>第四就是根据记录类型数据模型，开发具体的记录功能。</strong>这个步骤利用 cursor 简直能大幅提升开发效率。例如开发“记饮食”的功能，我直接让 cursor 根据人类的饮食结构，自动分类、自动生成数百种食物，并且还包括每种食物的营养成份，如何是手动编码输入，这个过程就需要耗时几天，而 cursor 在几分钟内就完成，并且还非常完善，如果觉得分类不准备，或食物种类不够丰富，还可以让他再根据网络数据丰富食物数据。</p><p style="margin-left: 0pt; text-align: justify;">开发好一个记录类型功能后，便可以借鉴这个功能的开发过程，让 cursor 根据之前的开发流程，批量开发其他的记录类型。例如开发“记运动”功能，它的需求和“记饮食”其实一样，所以我的输入命令为“<strong>请参考上述开发记饮食的流程和逻辑，开发一个记运动的功能，记运动的数据模型中xxx文件中（可添加到 chat ），首先搜索网络数据，按分类建立运动列表，然后用户可点击具体运动可多个运动，可记录运动内容</strong>”。</p><p style="margin-left: 0pt; text-align: justify;"><strong>第五利用 cursor 开发个性化功能。</strong>例如数据分析功能，可以要 cursor 基于每种记录类型的数据，生成按周、按月、按年的分析图表，而如果是手写代码则很难做到全面的分析。例如要 cursor全局适配界面，包括设置全局变量，一键更换界面配色；以及适配 iPhone 和 iPad 版本，如果是手动适配则非常麻烦。例如要 cursor 制作一个自动生成头像的页面，只需要把头像的 svg 素材导入，要 cursor 根据素材组合自定义头像。</p><p style="margin-left: 0pt; text-align: justify;">总之，利用 cursor ，你可以尝试做出一些，你之前无法实现，但现在可轻松实现的功能，这对于独立开发者来说，像是多了一位编码高手朋友，可以让他任意满足你的需求，开发出更多有兴趣的功能和应用场景。</p><h3 style="margin-left: 0pt; text-align: justify;"><strong>第五部分 关于顾家——献给所有热爱家庭生活的人</strong></h3><p style="margin-left: 0pt; text-align: justify;">最后，介绍一下“顾家”&nbsp;App&nbsp;。它是一款以 “角色化记录” 为核心的创新型应用，全方位覆盖家庭成员的生活记录需求。从新生儿的啼哭到少年的欢笑，从成年的奋斗到老年的安康，乃至宠物的陪伴，顾家 App 为每个家庭成员打造专属的数字化成长档案，构建起一座温馨的 “家庭时光博物馆”。</p><figure class="image ss-img-wrapper image_resized" style="width: 262px;"><img src="https://cdnfile.sspai.com/2025/07/04/0812fba34e5f9d68b53e3645c40b9e49.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>顾家首页</figcaption></figure><p style="margin-left: 0pt; text-align: justify;"><strong>在婴儿记录方面，顾家 App 就像一位专业的 “数字月嫂”，为新手父母提供全方位的育儿支持。</strong>它通过精准的数据追踪功能，绘制身高、体重的曲线百分位对比图，让父母实时掌握宝宝的生长发育是否达标。每毫升奶量、每克辅食的摄入，以及每次尿布更换情况，都能自动生成详尽的喂养曲线，助力科学喂养。此外，App 还涵盖早教管理功能，统计绘本阅读时长、记录益智游戏类型，为宝宝量身定制个性化的早教方案。同时，疫苗接种提醒、喂养计划制定、亲子陪伴时刻记录等功能一应俱全，全方位记录宝宝成长的点点滴滴。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/07/04/2728ea0feb515d2d0181778b5b793457.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/07/04/d543fdfcb7d9ea2867afe7d6f5e2c9fe.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/07/04/e93ddc66a2977b2eac55d3d636fccc67.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/07/04/cf701e5c958d96b570f19ca5ccb14c2e.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>&nbsp;</p><p style="margin-left: 0pt; text-align: justify;"><strong>对于 6 - 18 岁的青少年，顾家 App 则化身 “成长教练”，以数据驱动的方式赋能素质教育。</strong>它提供身高、体重曲线百分位对比图，助力家长实时监测孩子身体发育状况。在学业规划上，App 支持学习目标设定、学习内容记录以及作业完成时效分析等功能，引导孩子养成规律自主的学习习惯。健康管理功能涵盖按时睡觉任务提醒、每日饮水与饮食目标打卡、运动记录等，全方位护航孩子的身心健康。兴趣培养板块则聚焦阅读、游戏、课外活动、技能培训等活动记录与分析，为孩子构建科学合理的兴趣培养体系。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/07/04/dd274a57bed0f5b34c7f8172208724fb.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/07/04/549316c3deb18c82d52b8b4d7a1ef92f.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/07/04/659a7fc1cc5323051f8136f82173763b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/07/04/072fb7ffd8a5deeb072539c0793e831b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>&nbsp;</p><p style="margin-left: 0pt; text-align: justify;"><strong>面对成年家庭成员，顾家 App 扮演着 “生活与职场平衡大师” 的角色。</strong>对于女性用户，特别提供经期记录、周期预测，以及排卵期、易孕期预测功能，助力科学备孕与健康生活管理。男性用户则享有提肛打卡、爱爱记录等专属关怀功能。在生活记录方面，饮食、运动、旅游、阅读等各类生活点滴均可详细记录。工作规划功能囊括要事提醒、任务规划与目标设定等，确保生活与工作中的重要事项尽在掌握。习惯养成模块通过正向打卡与反向打卡机制，配合奖罚积分体系，助力用户逐步构建健康生活习惯。财务管理系统则负责账单与物品记录，实现智能账单分类以及物品过保、过期提醒，成为用户的贴身财务管家。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/07/04/aa9dffe336979a1b35c489724a2498bf.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/07/04/26e98183f541b52005dd9218d59091da.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/07/04/cb54dc8366fe73967755097c18d0f7f7.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/07/04/ee1524056fc01fddbd8e59723c6d1fee.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>&nbsp;</p><p style="margin-left: 0pt; text-align: justify;"><strong>针对老年家庭成员，顾家 App 化身贴心的 “养老护士”。</strong>它提供用药时间智能提醒、日常护理照料记录、血压 / 心率 / 体温监测以及疾病检查记录分析等功能，全方位守护长辈身体健康。亲情陪伴功能则涵盖打牌、散步、逛公园等陪伴时刻记录，以及打电话智能提醒等，让温馨陪伴成为家庭常态。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/07/04/672fded9a5ad34ddfc636cfa05444362.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/07/04/df7d24d8b3bae46d0fb3da36e5f59ead.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/07/04/93917f4c953f598c332b1cde7948449b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/07/04/24d083f9f4b8c688fa31454ad9005117.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>&nbsp;</p><p style="margin-left: 0pt; text-align: justify;"><strong>对于宠物爱好者，顾家 App 专门设计了宠物记录模块，化身 “宠物健康管家”。</strong>喂宠记录功能可精确追踪喂食时间、食物种类与食量，确保宠物获取均衡营养。遛宠记录则帮助主人规律记录遛宠时长与路线，助力宠物保持活力与健康。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/07/04/5ff72b382e74138f3778e6d3ee09b3a2.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/07/04/5069000392e4261279f39a2dbe4318b2.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>&nbsp;</p><h3 style="margin-left: 0pt; text-align: justify;"><strong>第六部分 结语——敬畏技术，拥抱未来</strong></h3><p style="margin-left: 0px;">在技术快速发展的当下，我深刻体会到技术的巨大力量。就像 cursor 这样的开发工具，就像一个神奇的助手，让 App 开发变得更加高效和简单。它帮我完成了许多以前觉得困难的事情，让我可以实现更多更有趣的功能，事实上 AI 已经在改变开发方式，改变这个世界。</p><p style="margin-left: 0px;">&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/100816</id>
            <title>「晚星」：为睡眠障碍设计的纯粹白噪音App</title>
            <link>https://sspai.com/post/100816</link>
            <guid isPermaLink="false">https://sspai.com/post/100816</guid>
            <pubDate></pubDate>
            <updated>Mon, 07 Jul 2025 16:27:06 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 睡眠障碍,白噪音App,极简设计,音效组合  
<br>  
<br>  
总结: 1. 作者因自身睡眠障碍和现有白噪音App的不足，开发了定制化App「晚星」。  
2. App提供72种自然音效和40首轻音乐，支持自由组合满足不同场景需求。  
3. 设计强调极简主义，去除冗余功能，降低用户心智负担。  
4. 音效资源来自专业平台和AI生成，经过优化确保音质。  
5. 包含装饰性动效增添趣味性但不干扰核心功能。  
6. 采用免费+付费模式，基础功能免费，高级功能需一次性购买。  
7. 适用场景包括助眠、专注、冥想等多种需求。  
8. 目标是为用户提供纯粹舒适的声音体验，解决现有App过于复杂的问题。 </div>
                        <hr>
                    
                    <blockquote><p>这个App的诞生原因很简单，就是一个爱折腾的中年程序员终于找到了一个给自己量身定做一个新玩具的借口，也希望这个玩具能被更多人喜欢～</p></blockquote><p>作为一名深受睡眠障碍困扰多年的中年程序员，我的生活习惯还算健康，没有抽烟喝酒打牌的嗜好，但最大的问题就是脑子停不下来，总爱折腾些乱七八糟的创意项目，虽然最后多半是自娱自乐。</p><p>最近几年，我尝试过不少白噪音App来改善睡眠，但总因为各种原因无法坚持：有的操作太复杂，有的界面过于花哨，还有的审美完全对不上我的口味。于是，我萌生了一个想法：能不能自己开发一款量身定制的助眠App，养成坚持使用的习惯？</p><p>在AI编程工具（Cursor + Claude 3.7）的帮助下，我花了两个周末开发了一款纯粹的白噪音App，名叫<strong>「晚星」</strong>，目前已经上架iOS App Store；由于使用是React Native框架进行的开发，因此安卓版也几乎算是同步开发完成了，不过因为个人精力原因，暂时还没办法上架Google Play，而国内应用市场可能需要等待更久的时间了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/06/07b2eae73bc7993321a63272e1bf5b3d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><span class="ss-linkCard">&nbsp;</span><h2>功能亮点</h2><p>「晚星」提供了72种音效，涵盖白噪音、雨声、风声、踩雪声、海浪声、水滴声、寺庙诵经声、蝉鸣、鲸鱼声、猫头鹰叫声等多种自然和环境音效。此外，还有40首轻音乐可供选择。用户可以自由组合这些音效和音乐，理论上能创造出几十亿种不同的组合。除了最常见的助眠场景，这款App也非常适合阅读、冥想、提神专注或放松心情等需求。</p><p>为了增加一点趣味性，我加入了几个简单的装饰性动效，比如无限深渊、星空螺旋、时空隧道等。这些动效设计低调，不会干扰主要功能，只是为使用体验增添一抹趣味。</p><h2>极简设计，专注核心体验</h2><p>与市面上许多同类App不同，「晚星」刻意保持简单。没有繁琐的打卡签到功能，没有频繁的通知提醒，也没有复杂多变的页面跳转。整个App的使用体验非常流畅，几乎没有心智负担。</p><p>界面设计简洁但不失美感，交互动画流畅自然，恰到好处，既不会显得单调，也不过分花哨。我希望用户打开App时，能立刻进入放松状态，而不是被复杂的操作或视觉干扰打断。</p><h2>音效来源与开发细节</h2><p>「晚星」的音效资源主要来自<a href="https://moodist.mvze.net/">Moodist</a>和<a href="https://sspai.com/post/pixabay.com">Pixabay</a>，部分音效则通过Suno AI生成。这些资源经过精心挑选和优化，确保音质清晰且适合长时间聆听。开发过程中，AI工具帮我快速实现了音效组合逻辑和界面交互，让整个开发效率大幅提升。</p><h2>定价与使用</h2><p>「晚星」基础版免费，用户可以组合两种音效，足以满足日常需求。如果需要更丰富的体验，比如组合五种音效或解锁全部轻音乐，可以支付一杯星巴克的价格，获得终身高级版本。</p><hr /><p>「晚星」是我为解决自身睡眠问题而打造的一款App，但它的适用场景远不止助眠。无论是需要专注工作、放松心情，还是单纯享受片刻宁静，这款App都能提供纯粹且舒适的体验。如果你也厌倦了功能繁杂、界面花哨的白噪音App，不妨试试「晚星」。它可能不会让你惊艳，但一定能让你感到踏实。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/100829</id>
            <title>北漂六年四次租房，闲鱼/我爱我家/自如哪个体验更好？</title>
            <link>https://sspai.com/post/100829</link>
            <guid isPermaLink="false">https://sspai.com/post/100829</guid>
            <pubDate></pubDate>
            <updated>Mon, 07 Jul 2025 07:06:30 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 北京租房,租房体验,租房成本,合租整租

<br>
<br>
总结: 作者分享了在北京六年的四次租房经历，包括闲鱼二房东、我爱我家相寓和自如等平台。文章详细描述了每次租房的优缺点，如隔音、采光、交通便利性等问题，并分析了实际租房成本构成（租金+水电+交通+采暖）。通过对比不同租房方式的体验，作者指出平台服务参差不齐，整租虽贵但体验较好，合租则面临更多不确定性。最后总结了选择房源时需综合考虑位置、价格和服务等因素。 </div>
                        <hr>
                    
                    <p>（备注：由于文章首发于什么值得买，故图片带有水印）</p><p>作为一头在北京打工六年的 “纯牛马”，我因各种原因陆续租过四次房子，从二房东到平台租房，从合租到整租，每次租房都让我头疼不已。头疼的原因有三：一是社恐的我需要和形形色色的中介打交道；二是优质房源并非易寻；三是每次搬家都是大难题，尤其遇上没有电梯的老破小，搬家开销更是租房成本的大头。</p><figure class="image ss-img-wrapper"><img alt="图01-1_搬家的烦恼" src="https://cdnfile.sspai.com/2025/07/07/article/c5b862312fc5d3c4bb3ed9f281b3e389.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="图01-2_搬家的烦恼" src="https://cdnfile.sspai.com/2025/07/07/article/5402aa93765c6f1016806496707c5a2d.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>今天，我将结合2019 年 7 月至 2025 年 6 月长达六年的租房经历，分享自己的租房体验。我在闲鱼二房东、我爱我家、自如都有过租房经历，链家则是差点签约 —— 最后因房东不肯降价而告吹。</p><p>为了方便分享，我会制作一张简单的对比表（如图 02-1 所示），最后再结合主观居住体验详细展开说明。</p><figure class="image ss-img-wrapper"><img alt="图 02-1 _北漂六年四次租房体验表" src="https://cdnfile.sspai.com/2025/07/07/article/d264413f3d9ac2ebb9474d115681f56c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>由于每个人遇到的房东中介平台以及房屋质量都是不一样的，本文仅作一个参考，也是我自己关于租房的一段记录，我们先从闲鱼二房东租房开始说起：</p><h3>租房1：闲鱼二房东</h3><p>如图 02-1 所示，2019 年 7 月 13 日，我入住了来北京后的第一间出租屋，位于回龙观地区的龙腾苑四区（建成年代2002-2004年）一楼，是一套三室一厅的房子。整套房子共住四户：主卧住二房东，另外两个次卧各住一名男生，还有一间次卧是我的房间。我与另外三户共用隔断客厅、阳台、厨房和卫生间（如图 03-1所示）。</p><figure class="image ss-img-wrapper"><img alt="图 03-1_公用客厅" src="https://cdnfile.sspai.com/2025/07/07/article/a3c9ff4532c0dce969def269fce65d4c.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>不过由于主卧自带阳台和卫生间，隔断客厅的阳台和卫生间通常只有我们三个次卧男生使用，水电费燃气费用按户均摊。这间房子我是在闲鱼按信用分高低筛选，找到二房东租赁的，当时只看了这一套房。房子最早二房东挂价 2100 元，最终以 2000 元成交（如图03-2所示）。幸运的是，二房东见我刚毕业，且通过了他的室友录取资格审核，不仅支持我月付，还免去了押金。但这种租赁方式也存在弊端，由于没有书面合同，二房东存在随时终止租赁关系或要求我搬离的风险，所幸这些情况并未发生。</p><figure class="image ss-img-wrapper"><img alt="图03-2_人生第一笔租房租金支出" src="https://cdnfile.sspai.com/2025/07/07/article/a96ddc6972258c21624b3fde7eea54c5.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>接下来详细说说我的房间。我在这套房子住过两个次卧：一个是客厅隔断的朝南次卧，另一个是朝北的小次卧，每个房间都有其优缺点。</p><p>先说客厅隔断的朝南次卧，这是由客厅隔断而成的屋子，优点是形状还算规整，使用面积约 12 平方米（如图 04-1/图 04-2/图 04-3所示），能放置不少物品，且有一扇朝南的大窗户，采光不错。缺点是闷热 —— 毕竟客厅原本不是居住空间，全年光照强烈，而且隔断房隔音效果极差，客厅的动静或大门开关的共振声都能清晰听见。好在我刚开始对声音不敏感，在这个屋子住了十个月。</p><figure class="image ss-img-wrapper"><img alt="图 04-1_朝南隔断小次卧" src="https://cdnfile.sspai.com/2025/07/07/article/0631cae6dfaf0d0c0807b60723cc1c1a.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="图 04-2_朝南隔断小次卧" src="https://cdnfile.sspai.com/2025/07/07/article/6bd459b4e61cdc22658709652d6a75f2.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="图 04-3_朝南隔断小次卧" src="https://cdnfile.sspai.com/2025/07/07/article/d124ce6d84fd85f95af44e26983936cc.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在后续近三年时间里，北边次卧的男生搬离后，我迁至该房间。房租从最初的 2000 元涨至 2100 元，次年又涨至 2250 元，最后一年降至 2150 元。此外，在我毕业工作一年后，二房东将房租支付方式从月付改为季付。这个房间使用面积只有 10 平方米左右（如图 05-1所示），虽然面积变小，但这是一间正规的朝北次卧，全年都比较凉快，我夏天基本不用空调。它最大的优点是挨着单元门口，外卖能直接从窗户拿取，这也是我躲过疫情开放后第一波新冠感染的重要原因。当然，缺点也是挨着单元门口和厨房，经常能听到单元门开关声、厨房燃气炉加热声，而且回龙观地区的房子基本都采用燃气自采暖模式供暖，燃气炉噪音比一般情况更大。</p><figure class="image ss-img-wrapper"><img alt="05-1_朝北正规小次卧" src="https://cdnfile.sspai.com/2025/07/07/article/733051601be9dbb747c21b2b52ad7c3f.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>讲完房间本身的租金和居住体验后，接下来聊聊水电燃气费、交通费，以及其他容易被忽视的费用和居住体验问题。比如水电燃气费是按户型而非按人头均摊是否合理。二房东出差期间，将主卧租给一对夫妻，一户两人的水电使用量远高于单人租户，长期按户均摊，对其他单人租户来说并不公平。</p><p>其次是燃气费问题。北京的采暖模式主要有市政供暖和住户自采暖两种，前者通常无需租户承担费用，而后者则需租户自行支付。比如我所租的房子采用的是燃气自采暖模式，租户每年在 11 月 - 3 月的采暖季需承担约 4000 多元的额外燃气费用，平均每月约 1200 元（如图05-2所示）。这笔费用被均摊到全年房租中（按十二个月计算），相当于每月房租比采用市政供暖的房子多出约 100 元。</p><figure class="image ss-img-wrapper"><img alt="图05-2_ 2020年10月-2021年3月半年燃气支出" src="https://cdnfile.sspai.com/2025/07/07/article/6292c889f20d4e56430b3281f1090bf9.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>另外，交通费用也是租房成本中不可忽视的一部分。作为一名普通上班族，租房主要是为了解决工作通勤和居住需求。我居住在这个房子期间，每天地铁通勤费用约 10 元，哈罗和滴滴青桔的骑行卡月卡费用共 33.6 元，每月交通支出约 230 元（如图05-3）。看似不算高昂的费用，日积月累下来，每年交通支出近 2760元，几乎相当于一个月的房租。而且早晚高峰地铁的拥挤、骑行路上的奔波、长达一小时的通勤，也让通勤体验大打折扣。</p><figure class="image ss-img-wrapper"><img alt="图05-3_冒雪也得骑的共享单车" src="https://cdnfile.sspai.com/2025/07/07/article/3862ada09cb1a2df38b2efd9cbff435d.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>综上所述，关于我这次租房的真实费用支出应该是租金+ 水电费 + 交通费 + 采暖费 ，由此可见，回龙观地区这间屋子的实际租房成本要比图 02-1体验表中展示的高不少，接着我们讲讲我第二次租房的经历，我爱我家旗下公寓（相寓_A）的租房经历！</p><h3>租房2：我爱我家公寓——相寓_A</h3><p>2023 年 4 月初，回龙观地区龙腾苑四区的房子，因二房东搬离后不再履行中介相关职责，房东阿姨对我们不太信任，最终将房子委托给租房平台重新装修出租。2023 年 4 月 9 日，我租下了位于西坝河地区光熙门北里的主卧。这原本是一套两室一厅的房子，被中介平台隔成三间出租后，没有了客厅，仅留下一个简单的过道。整套房子住着三户人，两个大小次卧分别住着一名女生和一名男生，我住在主卧（如图06-1所示），虽说是主卧，但没有独立卫生间，需要与另外两户共用隔断客厅、阳台、厨房和卫生间（如图06-2所示）。</p><figure class="image ss-img-wrapper"><img alt="06-1_主卧" src="https://cdnfile.sspai.com/2025/07/07/article/e63ecf946d0faf0b4c3e0409c908eab7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="图06-2_公共卫生间" src="https://cdnfile.sspai.com/2025/07/07/article/b5ba4b9f22d624f96bd40d9f2721f866.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>每月水电燃气按户均摊。每月租金 2500 元，需缴纳 10% 的服务费即每月 250 元，平台每月提供两次保洁以及物品免费报修服务，总租金 2750 元，还需要一个月房租作为押金。首次支付费用为一个月房租押金加上三个月房租租金以及合同租期内（13.5 个月）的服务费，总计 2500×4 + 250×13.5 = 13375 元，交易走的是正规合同。</p><p>不过合同中有许多细节值得注意，这部分我后面会详细讲述。接下来，我想详细说说我的房间。</p><p>与上一个一层的房子不同，这套房子位于 21 层顶楼，窗外就是北京国贸 CBD 的景色（如图07-1 所示）。这间屋子使用面积不大，大概 8 至 9 平方米，不过却有一个 4 至 5 平方米的长阳台，可以用来存放不少物品，这也是我选择这间房子的原因之一。</p><figure class="image ss-img-wrapper"><img alt="图07-1_国贸夜景" src="https://cdnfile.sspai.com/2025/07/07/article/e039da63f505dcd94fcf830ff0324d31.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>不过房子总会有缺点。位于顶楼，夏季十分炎热，房间不开空调温度随便就能达到 35 度。(如图07-2所示)。</p><figure class="image ss-img-wrapper"><img alt="图07-2_夏季房间温度" src="https://cdnfile.sspai.com/2025/07/07/article/9b636cee168d4ec4e196fef0334aa86d.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>冬季时，楼顶排水管排水不好，容易结成冰柱，我曾在冬天看到窗户外有一根 50 厘米以上的冰柱（如图07_3所示），要是砸到人，后果不堪设想。</p><figure class="image ss-img-wrapper"><img alt="图07-3_冬季房顶的冰注" src="https://cdnfile.sspai.com/2025/07/07/article/ae64a401a8b89016d13af924f7bbfdd8.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>除了顶楼带来的问题，房屋本身也有不少缺点。主卧虽不是中介后来隔断出来的，但隔音效果非常差。挨着的小次卧，男生每天的动静我都听得一清二楚，半夜吹头发的声音以及呼噜声，让我好几晚都没睡好。另外大次卧的女生，曾在半夜追剧，哈哈大笑，让我以为闹鬼了。更远的卫生间水声、楼下的声音也听得清清楚楚，更不用说小区里时不时传来的装修声，这是我住过隔音最差的房子了。</p><p>除了隔音，这个房子的电路也不好。由于建成时间已有近 25 年，曾经出现过几次负压过载短路的情况，并且房间还曾出现过莫名嗡嗡嗡电流的声音（如图07_4所示），除了电路之外，水路也存在问题，有一次上班时，洗衣机的水龙头突然爆管，导致房间被淹，还好楼下邻居及时通知，我们这些上班的 “牛马” 迅速赶回去才没有酿成大祸。现在回头一想，当初我能够住了一年时间也是挺不容易的。</p><figure class="image ss-img-wrapper"><img alt="图07-4_半夜房间电路出问题" src="https://cdnfile.sspai.com/2025/07/07/article/aeff7983acb3da85cccc79bf0b48f39c.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>讲完房间本身的租金和居住体验后，还是需要聊聊水电燃气费、交通费，以及其他容易被忽视的费用和居住体验问题。在水电燃气费用方面，每户都住了一个人，所以按人头均摊没有问题。电费是我们自己建群，平时在群里发起收款缴纳；水费由我爱我家相寓推送给我们，按户收取，但推送不规律；燃气费则是房管有时先缴纳再找租客收钱，收费流程混乱。最终，水电燃气费都变成由一位室友统一缴纳后再均摊的模式。而由于起初收费流程混乱，也曾引发过问题：之前租客积攒的燃气费，相寓房管未及时结清，导致燃气公司多次上门催收，我在不知情的情况下垫付了近 400 元，后来找房管协商，仅追回 300 元，且追讨了好几个月（如图07-5所示）。</p><figure class="image ss-img-wrapper"><img alt="图07-5_要求管家归还垫付燃气费" src="https://cdnfile.sspai.com/2025/07/07/article/5bff277e279167ac87ce5d1140a97d33.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>因此，相寓的管家服务，实在是一言难尽。另外，此次新住处距离公司只有不到3公里的距离，在日常的交通费用上省去了地铁的通勤成本，只需要付共享单车月卡，并且采暖也是免费市政供暖，此次的真实租房成本则是租金+服务费+水电费+交通费，由于省去了每月近200的交通费以及供暖需要多支出的约每月100元费用，每月的房租其实只比上一套租房多出200-300元左右，但是通勤时间却节省了40分钟，接着我们讲一下我第三次的租房经历，我爱我家旗下公寓（相寓_B）的租房经历！</p><h3>租房3：我爱我家公寓——相寓_B</h3><p>时间来到2024年5月，在相寓A经历了各种租房磨难以后，终于到了和它说再见的时刻了，当然不是我主动不继续租，而是房东打算收回去重新装修自己住，于是我在5月15日找到了同小区另外一个单元楼的房子，依旧是在我爱我家的相寓平台上租，这次是一个三室一厅的的朝南次卧（如图08-1所示）。</p><figure class="image ss-img-wrapper"><img alt="08-1_相寓次卧" src="https://cdnfile.sspai.com/2025/07/07/article/55fe7a014cc38ea25da1b494d8eccf52.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>该房间依旧是有隔断，整套房子住着三户人，另外一个次卧住着一对姐妹，客厅隔断主卧住着一名男生，与另外两户共用隔断客厅、阳台、厨房和卫生间，每月水电燃气按户均摊。每月租金 2550 元，依旧需缴纳 10% 的服务费即每月 255 元，平台每月提供两次保洁以及物品免费报修服务，总租金 2805 元，依旧需要一个月房租作为押金。首次支付费用还是一个月房租押金加上三个月房租租金以及合同租期内（13 个月）的服务费，总计 2550×4 + 255×13 = 13515 元。接下来，我想详细说说我的房间。</p><p>这是一套位于 16 层的房子，所在楼栋共 22 层，这个楼层属于比较高的。相比上一个房子，这个房子窗外的北京国贸 CBD 景色略为逊色(如图08-2所示)，优点是室内没那么热了，但朝南的方向依旧炎热。这间屋子的使用面积更大，大概是 14 至 15 平方米。不过，房间没有阳台，也没有晾衣架，只能自己买个支架或晾衣杆来解决晾晒问题；没有阳台也无法存放物品，加上我的杠铃架也放在卧室里，整个 15 平方米的屋子显得非常拥挤。</p><figure class="image ss-img-wrapper"><img alt="08-2_相寓次卧窗外视角" src="https://cdnfile.sspai.com/2025/07/07/article/4e2de50c0001629b835652459c4233e9.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>隔音方面依旧不太好，这个房间挨着厕所、我室友的房间以及另一套房子的卧室。声源主要来自楼上住户和隔壁另一套房子的住户，反而从未听到过室友房间和厕所的声音。在我入住的第一天晚上，就听到隔壁邻居传来让人脸红耳赤的声音，并且在居住的一年里多次听到类似情况。而对楼上住户更是无语：每天早上 7 点多到 8 点必定会听到敲木板的声音，据室友描述，她的房间正上方还经常有人半夜乱喊乱叫。因此，楼上及隔壁另一套房子的住户才是噪音的主要来源。</p><p>讲到这里，接下来直接跳过水电燃气交通费相关问题，毕竟我只是换了个单元楼，且两套房子都是通过同一平台租的，这些流程大同小异。其实这两套相寓的房子都存在一些问题 —— 上一套因房东到期未与平台续租，除管家服务拖延外，未出现太多问题，而第二套却暴露了诸多问题：</p><p>首先是报修问题，师傅上门维修时敷衍了事 —— 比如我房间的木地板翘起来了，我原本希望师傅用地胶粘回去，没想到他直接说没法修，要修就得换全屋木板，还让我自己买地垫铺上，实在令人无奈（如图8-3所示）。</p><figure class="image ss-img-wrapper"><img alt="图8-3_地板翘起" src="https://cdnfile.sspai.com/2025/07/07/article/cc1408a488d2a53311e5e1469876de1e.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>其次是隐私问题，比如临近搬家时，相寓管家会提前上门拍照，将房源挂到我爱我家平台并进行内部审核定价。不过因我不在家，他们没拍成我的房间，中介的这个行为意义何在？对于这些行为，租客可选择配合或拒绝 —— 毕竟有些租客重视房间隐私，但中介往往不在意。</p><p>再来是提前释放房源问题，相寓合同中写明会提前一个月公开待租房源，即若未提前续租，你会很快在相寓 App 上看到所租房屋出现在他人搜索结果中。这会导致有人想提前看房，你需配合带看或找借口拒绝。中介只想尽快出租房子，不在乎租客的租房体验。尤其是在配合看房时，发生了最让我闹心的事：我积极配合新租客的看房时间，对方和中介却迟到了 40 分钟 —— 原本约定晚上 9 点 50 左右看房，实际到 10 点半过后才到，而且若我不主动询问，他们根本不会告知迟到。(如图08-3所示)</p><figure class="image ss-img-wrapper"><img alt="如图08-3_配合看房租客迟到40分钟以上" src="https://cdnfile.sspai.com/2025/07/07/article/1f4ee9f3103a856b4948f2e87ff41b48.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>更过分的是中介与新租客的得寸进尺：首先，新租客通过中介要到我的电话，直接发短信询问房子问题。我能理解新租客想了解房子的心情，但中介未经允许泄露我的手机号且未提前告知，这纯属隐私泄露，让我既不解又气愤。不过因租期临近，我东西也搬得差不多了，本着 “多一事不如少一事” 的心态，就没深究。但过了几天，新租客又通过中介问我能否提前搬离，管家称可协商让新租客补交我提前搬离的房费。考虑到我东西基本搬完，就答应了，管家说会和租客协商后续房费事宜。</p><p>没想到后续更离谱：隔天我搬完、新租户入住后，我问管家押金和提前退租补的房费是否一起退给我，管家却甩来一句令人反感的话：“押金会退，房费不退，新租户不愿意出。” 我当时就炸了，但考虑到押金还在他手上，还是没和他撕破脸。接着办理退押金时，中介又算错水电燃气费，多扣了四百多块，好在我和室友留存了缴费凭证，才没白白损失这笔钱。(如图08-3所示)</p><figure class="image ss-img-wrapper"><img alt="图08-4_提前入住不给房费" src="https://cdnfile.sspai.com/2025/07/07/article/9b3a77ed0a324ebaf30cee43984232dc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>隔天拿到押金后，我打电话给我爱我家的经理，经理人品不错，得知我的遭遇后积极督促管家解决，最后补了我两天房费 —— 新租户出一天，管家和带看中介共同出一天。他们给的理由是管家没和带看中介沟通清楚，合着你们的过错要我承担？况且新租户提前三天半搬进去，里外我还亏了一天半房费！</p><p>总结：对于相寓，除了经理能积极解决问题外，其他中介和管家的服务意识与职业操守实在难以评价。接着我来讲讲我最后经历的一个租房平台自如。</p><h3>租房4：自如租房-整租</h3><p>对于自如的了解，最早还是甲醛房事件，这导致我对自如的第一印象并不好。加上自如租金向来不便宜，它从未出现在我的租房清单中。但去年谈了女朋友后，我对自如有了改观 —— 她租的是定福庄地区（如图9-1所示）三室一厅的正规次卧，约 10 平米，过去几年，每月租金 2100-2200 元，加服务费后约 2400 元浮动。好处是自如装修比相寓好很多，公共客厅宽敞，适合晾晒衣物，管家服务也更到位；缺点是房租偏高，且房子在 6 层步梯楼，爬楼费力，房屋隔音也较为一般。</p><figure class="image ss-img-wrapper"><img alt="图09-1_定福庄地区小区" src="https://cdnfile.sspai.com/2025/07/07/article/bb9aa9a03e8495fc1811efe408e7a37c.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>为什么这次重新租房会选择自如？首先，我和女朋友要整租，需考虑提前搬离的成本：她的房租到期比我晚两周，若继续租自如，她可免费换租，次卧剩余的房租和押金会自动退还，这样仅我需承担相寓提前搬离的亏损，损失更小。其次，女朋友租自如多年，服务费可打折，且通过支付宝芝麻分支付 49.8元即可免押金。最后，我们新租的区域房源少，又逢毕业季租房高峰，对比相寓、链家、自如等平台后，相中的房源只有链家两套和自如一套。</p><p>链家的两套中，一套是普租房，房东因新装修不肯降价，且采用 “租售模式”，打算租给我们一年后根据市场行情考虑是否卖房，这与我们长住的需求背道而驰，故放弃；另一套是链家新推的 “省心租”（类似自如、相寓的服务费模式），但装修风格女朋友不喜欢，最终我们选择了自如。</p><p>我们租的是朝阳区石佛营地区的 6 层步梯房，一室一厅约 47 平米，租金 4890元一个月，加 8.1% 的服务费后，每月总计 5286 元（如图9-2所示）：</p><figure class="image ss-img-wrapper"><img alt="图09-2_自如整租" src="https://cdnfile.sspai.com/2025/07/07/article/1088ac77443953bfce1ff1b5c8a875c1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>接着，说说居住体验，分优缺点来讲：</p><p>优点是，这屋子堪称我租过隔音最好的房子 —— 虽能听到隔壁轻微声响，但音量很小；且附近有幼儿园和小学，关窗后几乎听不到外界噪音。另外，交通十分便利：离地铁、公交站近，我出行方便，女朋友骑车或电动车 20 分钟就能到公司，20 多天住下来可以打 80 分。</p><p>缺点也很明显：房间是不规则的长条形，仅厨房和阳台两侧有窗户，无法形成空气对流，客厅常显闷热；厕所下水道和空调偶尔有异味，但出现频率不高，暂时可接受。电器方面，除洗衣机外都是高能耗产品，且一级能耗的洗衣机运行噪音很大。另外，地铁是新线路，车厢内气味较重，这也是租房时需考虑的因素。此外，小区环境一般，楼道杂物堆放现象明显 —— 我家单元门口常趴着一只憨厚的小狗，幸好它和我成了朋友，不然我可能不会租这里。</p><p>以上就是我北漂近六年的四次租房经历，每套房子都有优缺点，希望这些分享能给大家一些参考，下篇文章再见！</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/100821</id>
            <title>键盘简史：从打字机到机械轴，怎么还是QWERTY布局啊？</title>
            <link>https://sspai.com/post/100821</link>
            <guid isPermaLink="false">https://sspai.com/post/100821</guid>
            <pubDate></pubDate>
            <updated>Mon, 07 Jul 2025 00:38:08 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 键盘, QWERTY布局, 打字机历史, 输入设备  
<br>  
<br>  
总结: 文章探讨了键盘作为主要输入设备的发展历程，重点介绍了QWERTY布局的起源和流行原因。文中指出键盘的历史比计算机更早，起源于打字机的发明，并通过雷明顿公司的商业策略（如培训打字员）使QWERTY布局成为主流。作者还分享了自己使用各类键盘（如机械键盘、静电容键盘）的个人体验，并推测未来语音输入和AI可能改变输入方式，但QWERTY布局因用户习惯仍占主导地位。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;">键盘是我们日常接触最多的输入设备，尤其是程序员和游戏玩家，大概率都会选一些“专业点”的键盘。</p><p style="margin-left: 0px;">今天想和各位工友聊聊键盘的故事，但我要提前叠个甲，键盘这东西是各有喜好，有人喜欢机械键盘，有人喜欢薄膜，还有人喜欢客制化，这本身并没有高低贵贱之分，纯粹是个人喜欢。</p><p style="margin-left: 0px;">比如我入坑了静电容键盘就好多年没换过键盘了，有个程序员同事就很喜欢薄膜键盘，他认为静电容键盘其实和薄膜的手感差不多，不理解为什么要花大价钱上静电容。</p><p style="margin-left: 0px;">工友们可以在评论区晒晒你们在用什么键盘，也让我涨涨见识。当然，我们要文明讨论，键盘类型的选择、轴的选择，都是个人喜好，不存在高低贵贱之分！</p><p><strong>键盘的谣言？</strong></p><p style="margin-left: 0px;">上过小学电脑课的工友应该都知道，1946年2月14日，世界上第一台通用电子数字计算机在美国宾夕法尼亚大学问世。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/062d9428c75460cf8c063b22366cb6eb.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">而世界上第一只鼠标比电脑晚了差不多20年才出生。1964年道格拉斯·恩格尔巴特和他的小伙伴一起研发鼠标，在1968年12月9日公开展示。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/8fb55a5ec51f93bf93934396e5406fc3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">那么，键盘作为计算机的另一款输入设备，你猜是什么时候出现的呢？</p><p style="margin-left: 0px;">要回答这个问题，需要把时间拨回1714年。</p><p style="margin-left: 0px;">18世纪的英国是一个充满着各种发明和奇思妙想的地方，其中有一位叫亨利·米尔的发明家搞了套带有各种键盘的打字机出来。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/d697b8bf70276d66f24a38daa678eb70.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">但他的键盘并不是我们现在熟悉的键盘，现在流行的键盘布局是 「QWERTY」布局。</p><p style="margin-left: 0px;">为什么「QWERTY」布局能流行起来呢？</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/8fe504361b838ae15e936c9d2e29b1d0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">网上流行一种说法。据说因为当时的打字机最开始按键的排序是“ABCD……”这样排下去的，但因为打字机是机械结构，打字速度太快的话会导致金属字杆撞在一起，维修起来特别麻烦。于是当时的发明家就改良键盘，把按键顺序随机打乱，降低打字速度，从而降低设备的损坏，减少维护成本。</p><p style="margin-left: 0px;">这个传言看上去很合理是吧，好一个“慢就是快”。但仔细想想其实并不合理。打乱按键顺序确实能在开始时降低打字速度，但过几天熟悉了这个键盘布局不还是把打字速度提上来吗？这个改动成本这么高，还不如用皮鞭要求打字员不要打那么快呢。</p><p><strong>「QWERTY」一统天下</strong></p><h2><strong>现代键盘的雏形</strong></h2><p style="margin-left: 0px;">键盘的诞生比电脑还要早，这对于我们生于互联网时代的人来说有点反直觉。在计算机和互联网出现之前，人们获取资讯的方式主要是通过「村口」和「报纸」。报纸上的字需要印刷出来，所以当时就出现了印刷厂。在美国有个叫「克里斯托弗·莱瑟姆·肖尔斯」的小伙子，18岁就在他哥的报社当编辑。</p><p style="margin-left: 0px;">「肖尔斯」出生于1819年的宾夕法利亚州，14岁就开始学习印刷和排字。他就是美国第一台打字机的发明者。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/4672f79171ba922c5be91f6f8a1f87a2.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">「肖尔斯」在他哥的报社工作了几年后翅膀硬了，决定自立门户，和朋友一起创办了报社。自己出来创业才发现什么都要亲力亲为，不仅继续负责编辑工作，连记者的工作都要做。从事报社行业久了，他在当地的影响力也越来越大，后来还选上了州议员。</p><p style="margin-left: 0px;">当然啦，这期间还是继续运营他的报社，毕竟这才是真正的赚钱门道。他的报社也不是只生产报纸，期间还会接一些印刷活，比如帮别人印刷带有很多数字的账簿、书籍页码、票证等东西。这些东西的印刷量往往没有报纸那么大，比如账簿这东西可能找他一次就只印一份，而且每次找他印刷的内容都有所不同，用传统的活字印刷术对他来说并不高效。</p><p style="margin-left: 0px;">基于这个痛点，他找了个朋友「塞缪尔·威拉德·索尔」找了个车间开始研究数字打字机。1866年研发成功了立刻跑去申请专利。</p><p style="margin-left: 0px;">这个车间位于密尔沃基北部，由一座磨坊改建而成。当时有一位叫「卡洛斯·格利登」的发明家经常过来看看「肖尔斯」他们在捣鼓什么东西。最后看到「肖尔斯」把数字打字机搞出来后，他就提了个想法，干脆把26个字母的打字机也做出来吧，这不就可以打印更多东西了吗？</p><p style="margin-left: 0px;">「肖尔斯」觉得很有道理，一不做二不休，干它！肖尔斯、格利登、索尔三人就这么展开合作了。</p><p style="margin-left: 0px;">1867年10月，「肖尔斯」提交了一份专利申请，他设计出来的键盘有2行按键，布局是这样的。</p><pre class="language-"><code> 3 5 7 9 N O P Q R S T U V W X Y Z
2 4 6 8 . A B C D E F G H I J K L M</code></pre><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/3f91bf674d75cfa3fabe229e4777fb44.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">有点像钢琴是不是～</p><p style="margin-left: 0px;">细心的工友可能已经发现，怎么没有 <code>1</code> 和 <code>0</code> 呢？有一个说法是，为了节省成本，<code>1</code> 可以用字母 <code>I</code> 代替，<code>0</code> 可以用字母 <code>O</code> 代替。</p><p style="margin-left: 0px;">但在电脑出现之前，在飞鸽传书之后，这段时间流行用电报通信。打字机的目标用户是电报公司，为了做出让电报员用得更顺手的键盘，「肖尔斯」继续改良键盘布局，在1868年11月推出了下面这种布局的键盘。</p><pre class="language-"><code>2 3 4 5 6 7 8 9 -
A E I . ? Y U O ,
B C D F G H J K L M
Z X W V T S R Q P N</code></pre><p style="margin-left: 0px;">第一行是数字，下面跟着3行英文字母和标点符号，这排版看上去和我们现在的键盘已经有点接近了。</p><h2><strong>持续迭代</strong></h2><p style="margin-left: 0px;">在研发打字机的这几年里，「肖尔斯」他们用这台机器打印出很多封信寄给不同的人，其中一位叫「詹姆斯·登斯莫尔」，他收到信后意识到打字机可能是未来的风口，在没见到真机的情况下，他直接投了这项目！</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/fc2d125eb2ff71e53d461cd3ecd04e18.gif" /></figure><p style="margin-left: 0px;">「登斯莫尔」也是有眼光，他支付了「肖尔斯」三人迄今为止研发所产生的费用，作为汇报，「肖尔斯」要分出1/4的专利权给「登斯莫尔」。但在1867年3月当「登斯莫尔」看到打字机时大失所望，觉得这个形态的打字机简直一无是处。沉默片刻后留下一个字：改！</p><p style="margin-left: 0px;">这时「格利登」和「索尔」就不乐意了，大家股权都一样，你怎么就把自己当老板似的，说改就改呢？</p><p style="margin-left: 0px;">「登斯莫尔」当然也不服气。哟～ 我可是真金白银砸了钱进来的呀，我叫你们改有问题吗？</p><p style="margin-left: 0px;">最终因为意见不合，「格利登」和「索尔」选择了离开，团队就剩下「肖尔斯」和「登斯莫尔」。</p><p style="margin-left: 0px;">当时他们的主要用户群体是速记员，为了改良机器，他们把生产出来的样机寄给了一些速记员测评，而速记员也是有一说一的，不对，是尖酸刻薄：“小肖啊，这是你设计出来的机器吗？挺好的呀，我用它打了一句话 ’如果活不成一首诗，那就活成一个病句。‘ 你觉得如何呀”。</p><p style="margin-left: 0px;">面对这些真实的用户反馈，「登斯莫尔」觉得团队是走在正确的路上，毕竟还有用户愿意给他们提意见。他也一直鼓励「肖尔斯」继续迭代。最终，他们制造了符合速记员需求的打字机，一造就造了50台出来，每台的成本是250美元，放到今天可能大概值6000美元吧。</p><h2><strong>军火商入局，商业逻辑压倒一切</strong></h2><p style="margin-left: 0px;">改良后的打字机好用是好用，但贵也是真的贵啊。</p><p style="margin-left: 0px;">怎么办？使用锦囊求助亲戚朋友咯。「登斯莫尔」有一次和朋友「约斯特」聊起他们的打字机，希望「约斯特」帮忙看看有什么办法压一压成本，「约斯特」提议不如去看看你们的工厂看看你们是怎么生产的吧。这一看，直接把「约斯特」看傻眼了。按照「肖尔斯」现在的生产方式根本不可能把产能搞上来。产能跟不上，成本自然也压不下去咯。</p><p style="margin-left: 0px;">「约斯特」清楚，「肖尔斯」擅长的是设计，而并非工业化。他提议设计部分由「肖尔斯」负责，生产部分外包出去。</p><p style="margin-left: 0px;">当时有一家叫雷明顿的企业，主要生产武器，内战结束后，武器销量一般，为了让公司活下去，雷明顿增加了其他产品线，比如缝纫机、农具等等。他们拥有先进的生产技术和设备。「登斯莫尔」和「肖尔斯」带着样机找到雷明顿。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/405336ad2b6be882c609e1250dfa2ade.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">雷明顿的总裁「总裁菲洛·雷明顿」一看，就像是楼下买了震楼机，震撼到家了。当机立断，这项目我投了！</p><p style="margin-left: 0px;">「登斯莫尔」？？？这不是我的台词吗？？？</p><p style="margin-left: 0px;">最开始「肖尔斯」和「登斯莫尔」只打算找雷明顿帮忙生产打字机。在1873年3月签订了合同，雷明顿帮「登斯莫尔」他们制造1000台打字机，但雷明顿有权额外生产24000台。</p><p style="margin-left: 0px;">为了进入打字机市场「雷明顿」用了一个很巧妙的方法，他将一部分资源用于生产打字机，然后再悄悄组建团队对「肖尔斯」的打字机重新设计，为了规避版权问题，雷明顿的工程师调整了一下键盘布局，外壳也加了一些装饰，变成下图的这个形态。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/e434bb5e3e1c0f6ceacf7deeb807e73a.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">有点像缝纫机对吧，毕竟雷明顿本身也有这块业务。</p><p style="margin-left: 0px;">这个键盘的布局已经和今天我们用的键盘越来越像了。</p><p style="margin-left: 0px;">1874年7月1日，这款打字机正式进入市场。但由于「雷明顿」急着抢占市场，打字机在未通过质量测试的情况下就已经开卖了，导致用户拿到手没用多久就故障频出，口碑并不是很好。截止到1874年12月，也就仅仅卖出去400台。</p><p style="margin-left: 0px;">同时由于企业对新设备的更新换代周期长，于是「雷明顿」就把目光转移到作者、律师、报社编辑等群体身上。</p><p style="margin-left: 0px;">但企业级定位的打字机可不是谁买不起，于是「雷明顿」又计划改良打字机。经过一番魔改，除了把成本打了下来之外，还做出了首台带大小写切换键的打字机。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/9009a888955cf22bfc563826af622fe9.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">这台打字机创造了一个本质上具有现代 QWERTY 布局的键盘。</p><p style="margin-left: 0px;">此时市场上各式各样的打字机都有，QWERTY 布局怎么能抢占市场呢？</p><p style="margin-left: 0px;">这就要说到「雷明顿」的一个商业决策：教育用户。</p><p style="margin-left: 0px;">没错，就是字面意义上的“教育”。当年的打字员是一个很香的职业，我记得我小学时期还在报纸上看到中国移动招聘打字员，这职业放在19世纪的含金量就更高了。当年的打字员是需要培训的，「雷明顿」直接开了一家培训机构，在机构进修完的打字员直接输出到社会，而培训用的键盘当然就是「雷明顿」自家的键盘啦。此时市场上出现大量熟悉 QWERTY 键盘布局的打字员，其他企业在招聘时为了降低培训成本，也慢慢的开始采购「雷明顿」的打字机了。</p><p style="margin-left: 0px;">没过多久，主流的键盘布局就只有QWERTY一种。当然还存在其他布局，但它们都不是主流。</p><p style="margin-left: 0px;">说起打字机，其实中国当年也有中文打字机，是林语堂设计的，但最终没量产。B站up主何同学好像有一期是复刻了这款打字机出来，有兴趣的工友可以自己去搜搜看。</p><p><strong>聊聊我的键盘</strong></p><p style="margin-left: 0px;">来到现代，键盘还是以 QWERTY 为主，但出现了很多品类的键盘，比如机械键盘、薄膜键盘、静电容键盘等等。</p><p style="margin-left: 0px;">其实在计算机早期的发展中，键盘是以机械键盘为主，由IBM将其发扬光大。但由于价格高，一般也就银行等大厂职员能用得上。后面出现薄膜键盘，价格亲民，加上计算机的普及，一下子就让薄膜键盘登上王座。</p><p style="margin-left: 0px;">在薄膜键盘飞黄腾达的那些年，机械键盘真的差点就灭绝了。是一家叫「[Cherry」的公司苦苦支撑着这条产品线。也就是我们今天熟悉的「樱桃」。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/fd7a0897ec35c4d962fbd49abaf784b2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">虽然我很小就开始接触电脑了，但直到我是大学快毕业的时候才了知道有“机械键盘”这种键盘的。</p><p style="margin-left: 0px;">我还记得小时候的鼠标和键盘接口不是现在这种USB A或C口，是那种圆形，里面有几根针脚的接口。当时 windows xp 开机时如果把掉鼠标或者键盘都会立刻死机的。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/1e38eac630a5ddb0e94c8a8af978c334.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">后来高中毕业后，我买了人生的第一台笔记本电脑，同期购入的还有一个罗技的薄膜键盘。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/b6879358947c69529ab892e79f001eac.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">这个键盘是可以水洗的，陪我渡过大学的几年时光。</p><p style="margin-left: 0px;">大学快毕业时我才知道当时打游戏的人开始钟爱机械键盘，虽然我打游戏很菜，但众所周知的事差生的文具不会少。大学毕业后立刻给自己安排了一键礼物，罗技的G710+。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/aa6191d210d317e5736d8bd356d7aed7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">这是我第一次接触机械键盘，当时市面上流行的轴主要有青、茶、红、黑。我这把G710+是青轴。打字咔擦咔擦的，从薄膜切换到青轴，手感差距非常大，从此开始爱上了机械键盘。</p><p style="margin-left: 0px;">后面也开始尝试其他轴，毕竟青轴不适合在办公室用。我买了雷柏的黑轴键盘。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/32676d1a4cc57e3a17d9ce556f8ec531.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">这把键盘我没找到当时的照片，100不到，主要想体验一下黑轴。体验过后觉得不适合我。当时已经知道黑轴和红轴的手感是接近的，红轴的按压力度会更轻，知道黑轴不适合自己后，我转身就搞了把红轴。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/6cf8ebe94d570106fd60aa11ea2def85.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">这两款都是当时买的红轴键盘，黑色那款是樱桃，放在办公室用的。白色这款是RK的，家里养了两只猫，经常跳到桌子上，所以在家还是尺寸小店的键盘更适合。</p><p style="margin-left: 0px;">再往后就喜欢复古款了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/a60c584bf8773836dfaec75b6dc799a2.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">下面这款是leopold，利奥博德的红轴键盘，是朋友送我的。</p><p style="margin-left: 0px;">上面那款是静电容键盘，也是我接触的第一款静电容，宁芝。这款静电容很便宜，不到700。但说实话，手感一般，真的有点像薄膜😂</p><p style="margin-left: 0px;">但静电容在日常办公（当时的主要工作是编程）打起字来比红轴更加行云流水，用了一段时间后，我又找更小的静电容键盘，放家里用。</p><p style="margin-left: 0px;">可市面上小尺寸的静电容选择不多，当时可以说只有HHKB一家对我来说比较有吸引力的。</p><p style="margin-left: 0px;">于是就搞了2把。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/7e226abc1529c23f14ec65f1cf5c2dcd.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">这两把 都是有线的，其中黑色那款是无刻，放在办公室用真的毕哥拉满。</p><p style="margin-left: 0px;">这两把键盘是2021年8月份买的，一直用到现在（不过最近把黑色这把送给朋友了）。</p><p style="margin-left: 0px;">HHKB这种布局和传统键盘会有点不一样，其中最大的区别是 Control（Ctrl） 键放在了其他键盘的 Caps Lock 键上，所以这把键盘可以说很不适合打英雄联盟，因为LOL放技能我习惯用左手掌心下方的位置按住 Ctrl 再组合 QWER 放技能。</p><p style="margin-left: 0px;">我用了HHKB快4年了，早已习惯了它的组合键。日常只要能用键盘操作的事，我的手基本不会跑去摸鼠标一下，而且双手摆在键盘上就不需要再大幅度移动了，靠组合键就能完成常规键盘的所有操作。</p><p style="margin-left: 0px;">后来还买过一些好看的键盘，比如洛斐的这款键盘，真的挺好看的。但我已经被HHKB教育过，再也习惯不了常规键盘了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/07/07/4cd117b44dbbde90b42bdbb9bed1e23a.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><strong>未来的输入方式会发生改变吗？</strong></p><p style="margin-left: 0px;">键盘作为电脑的主要输入设备，进入移动互联网时代感觉有点过时了。在触屏手机里其实可以随意设计键盘布局，这是软件层面的事，做出改变的研发成本并不高。但手机上的全键盘仍然采用 QWERTY 布局，唯一的理由就是降低用户学习成本，换手机后打字不需要重新学。</p><p style="margin-left: 0px;">在未来键盘会灭亡吗？我觉得有可能。</p><p style="margin-left: 0px;">拿微信聊天举例（当然，这些例子都是我个人的观察，并没有庞大的数据做观点支撑），长辈很喜欢发语音，我有个做海外业务的朋友也很喜欢用语音输入，不过她的做法是将语音转文字后再发送出去。</p><p style="margin-left: 0px;">其实到今天我还不太适应语音输入，尤其是觉得在办公室对着屏幕说话有点傻，而且影响别人工作。但我认为未来键盘有可能会消失。在语音输入越来越流行的今天，真正用键盘输入的场景其实更多的是在办公时间，如果工作用上了VR，再结合AI辅助输入。也许我们以后想表达一个观点、想输出一份报告，输入的方式会有很大的变化，输入的内容也会比今天少得多。我们现在用的输入法纠错功能偏向于单词拼写，而AI的纠错能力会更偏向于语法、表达逻辑等方面。所以我猜，真正到了VR和AI结合的时候，再从屏幕里显示QWERTY布局的键盘就真的有点反人类了，打字时眼球移来移去2分钟就晕厥过去了。</p><p style="margin-left: 0px;">未来的输入设备是什么形态我猜不出来，也许是林敏聪在很久之前预言的那支“苏格兰场<i>非工业用</i>国际线路<i>自动融雪</i>16涡轮风油钛垂直升降连镭射彩色洗衣干衣腐蚀性气垫毛笔”吧。</p><hr /><p style="margin-left: 0px;">以上就是我本期的瞎说，纯个人观点，不喜欢的可以喷，你开心的话就值了。</p><p style="margin-left: 0px;">最后，我想看看工友们用的是什么键盘，尤其是客制化的一定要晒给我看，非常好奇～</p><p style="margin-left: 0px;">参考资料</p><p style="margin-left: 0px;"><a href="https://en.wikipedia.org/wiki/Sholes_and_Glidden_typewriter">https://en.wikipedia.org/wiki/Sholes_and_Glidden_typewriter</a></p><p style="margin-left: 0px;"><a href="https://en.wikipedia.org/wiki/QWERTY">https://en.wikipedia.org/wiki/QWERTY</a></p><p style="margin-left: 0px;"><a href="https://en.wikipedia.org/wiki/Henry_Mill">https://en.wikipedia.org/wiki/Henry_Mill</a></p><p style="margin-left: 0px;"><a href="http://kanji.zinbun.kyoto-u.ac.jp/~yasuoka/QWERTY">http://kanji.zinbun.kyoto-u.ac.jp/~yasuoka/QWERTY</a></p><p style="margin-left: 0px;"><a href="https://www.edalive.com/qwerty-keyboard-history/">https://www.edalive.com/qwerty-keyboard-history/</a></p><p style="margin-left: 0px;"><a href="https://en.wikipedia.org/wiki/Christopher_Latham_Sholes">https://en.wikipedia.org/wiki/Christopher_Latham_Sholes</a></p><p style="margin-left: 0px;"><a href="https://repository.kulib.kyoto-u.ac.jp/dspace/bitstream/2433/139379/1/42_161.pdf">https://repository.kulib.kyoto-u.ac.jp/dspace/bitstream/2433/139379/1/42_161.pdf</a></p><p style="margin-left: 0px;"><a href="https://shadycharacters.co.uk/2016/02/typewriters-and-pilcrows/">https://shadycharacters.co.uk/2016/02/typewriters-and-pilcrows/</a></p><p style="margin-left: 0px;"><a href="https://www.fleksy.com/blog/a-brief-historical-perspective-the-birth-of-qwerty/">https://www.fleksy.com/blog/a-brief-historical-perspective-the-birth-of-qwerty/</a></p><p style="margin-left: 0px;"><a href="https://sharktastica.co.uk/wiki?id=modelm">https://sharktastica.co.uk/wiki?id=modelm</a></p><p style="margin-left: 0px;"><a href="https://www.durgod.com/blogs/ibm-keyboards/">https://www.durgod.com/blogs/ibm-keyboards/</a></p><p style="margin-left: 0px;"><a href="https://en.wikipedia.org/wiki/Model_M_keyboard">https://en.wikipedia.org/wiki/Model_M_keyboard</a></p><p style="margin-left: 0px;"><a href="https://richardholliday.co.uk/tag/ibm-model-m/">https://richardholliday.co.uk/tag/ibm-model-m/</a></p><p style="margin-left: 0px;"><a href="https://www.mechtype.com/buckling-spring-origin-of-mechanical-keyboards/">https://www.mechtype.com/buckling-spring-origin-of-mechanical-keyboards/</a></p><p style="margin-left: 0px;"><a href="https://www.geeksforgeeks.org/computer-science-fundamentals/qwerty-keyboard/">https://www.geeksforgeeks.org/computer-science-fundamentals/qwerty-keyboard/</a></p><p style="margin-left: 0px;"><a href="https://www.smithsonianmag.com/history/the-qwerty-keyboard-will-never-die-where-did-the-150-year-old-design-come-from-49863249/">https://www.smithsonianmag.com/history/the-qwerty-keyboard-will-never-die-where-did-the-150-year-old-design-come-from-49863249/</a></p><p style="margin-left: 0px;"><a href="https://www.cnet.com/culture/a-brief-history-of-the-qwerty-keyboard/">https://www.cnet.com/culture/a-brief-history-of-the-qwerty-keyboard/</a></p><p style="margin-left: 0px;"><a href="https://www.britannica.com/technology/typewriter">https://www.britannica.com/technology/typewriter</a></p><p style="margin-left: 0px;"><a href="https://goblintechkeys.com/blogs/news/from-qwerty-to-iso-history-of-keyboard-design-evolution-over-the-years">https://goblintechkeys.com/blogs/news/from-qwerty-to-iso-history-of-keyboard-design-evolution-over-the-years</a></p><p style="margin-left: 0px;">&nbsp;</p><p style="margin-left: 0px;">&nbsp;</p><p style="margin-left: 0px;">&nbsp;</p><p><br />&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/100817</id>
            <title>从腾讯文档到Obsidian：记一次Obsidian团队知识库的尝试</title>
            <link>https://sspai.com/post/100817</link>
            <guid isPermaLink="false">https://sspai.com/post/100817</guid>
            <pubDate></pubDate>
            <updated>Sun, 06 Jul 2025 13:10:24 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Obsidian, 知识库, 腾讯文档, 团队协作  

<br>  
<br>  

总结: 文章探讨了作者在团队中从腾讯文档迁移到Obsidian知识库的经验。最初使用腾讯文档管理共享信息，但随着文档数量增加，其搜索和标签功能的不足显现。作者尝试用Obsidian搭建知识库，但发现其移动端同步复杂且学习成本高。最终调整为简化方案：将文档存储在GitHub仓库中，支持在线查看和搜索，同时允许使用Obsidian或其他工具编辑。作者强调解决实际问题的重要性，而非追求完美方案。 </div>
                        <hr>
                    
                    <p>在 2025 年 2 月的时候，Obsidian 官方正式宣布 Obsidian 用作商业用途免费。作为一个重度 Obsidian 用户，我当时写了一篇文章探讨了应该如何用 Obsidian 搭建团队知识库：<a href="https://sspai.com/post/96586">Obsidian 商用免费，我是如何用它搭建团队知识库的？</a>。</p><p>最近由于一些变动和调整，我们实验室使用腾讯文档管理共享文档的弊端逐渐显现出来。我借此机会尝试了一下推动实验室从腾讯文档转向 Obsidian 知识库。这篇文章是我在这个过程中获得的一些经验和思考。</p><h2>缘起</h2><p>我们的研究组是一个由 20+人组成的团队，拥有一些共用的基础设施，比如实验室 WiFi、打印机、冰箱、计算集群等等。在之前，我们的共享文档记录的基本上都是这些设施的使用方法和注意事项。这些文档的数量不多，能很好地利用腾讯文档方便用 QQ/微信查看、分享、编辑的优点。因此一直以来我们并没有考虑过迁移文档的问题。</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/07/06/article/c564b6f56dcb88937ea94b40179199ab.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>后来，随着我们的工作越来越专业化，我们对硬件的要求（尤其是 GPU）也越来越高。然而，为所有人的工位电脑都配备 Nvidia 显卡成本太高，而且也很浪费。于是我们购置了几台配备了显卡的 Linux 计算服务器给大家共用。从此我们的大多数工作就从自己工位上的 Windows PC 转移到了 Linux 服务器上。</p><p>然而各个同学的工作毕竟不同，对 Python 版本、相关库等环境的需求都不一样。为了避免多个用户在同一台机器上配环境造成的环境冲突问题，我们收回了管理员权限，要求<strong>所有同学必须建立自己的 Docker 容器，在容器中配环境以及编程</strong>。这样做的好处是各个同学的编程环境就被容器隔离了开来，不会互相干扰；坏处则是学习成本节节高升，大家需要付出不少的时间来学习如何进行 Linux 远程开发以及在容器内编程。作为运维组成员之一，发微信来问我相关问题的同学越来越多，我开始忙不过来。</p><p>为了让大家的学习曲线更加平缓，我和其他几个运维组的同学编写了几篇教程并且组织了几次培训来教大家如何进行远程开发；后来，我们将一些常见问题的解决方案也写成文档供查阅。随着时间的推移，这些知识文档的数量越来越多。腾讯文档的问题就显现了出来：</p><ol><li>腾讯文档没有「知识库」的概念，除非自己特意保存，否则腾讯文档是<strong>不支持搜索文档</strong>的；</li><li>腾讯文档的全文搜索功能需要付费；</li></ol><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/07/06/article/a290a7d5e475b5e78463caca43484845.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><ol><li>没有标签功能，过期的信息散落在各个文档中，难以及时找到并且更新；</li><li>体验上来说，腾讯文档真的很卡很不流畅……编辑排版体验大打折扣。</li></ol><p>面对这种情况，市面上成熟的解决方案是使用飞书、语雀这样的团队知识库产品。对于我们这种团队来说，这类产品的要价有些高（飞书估计在 3 万元/年以上）。而且知识库产生的价值几乎量化不了，我也很难找到好理由说服老师花钱购买。</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/07/06/article/700f4614e37624e1f1ce81c9719e5a24.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在这一背景下，我的主意就打到了宣传「商用免费」的 Obsidian 上面。</p><p>推进</p><p>我在 <a href="https://sspai.com/post/96586">Obsidian 商用免费，我是如何用它搭建团队知识库的？</a>一文中提出了一套很复杂的 Obsidian 团队知识库方案，包含三个部分：</p><ol><li>共享文档</li><li>团队项目看板</li><li>团队知识库</li></ol><p>其中还包含一套定期合并分支的流程，可以保证大家设备中分布的知识库版本能够同步。这个模型看起来很完美，可是一推进起来就有很多问题。<strong>其中首要的问题就是 Obsidian 在「方便查看」这一指标上远不如腾讯文档</strong>。</p><p>这意味着什么呢？这意味着：</p><ol><li>忘记了实验室大门密码的同学无法快速在手机上打开那个文档，找到开门密码（移动端 Obsidian 同步起来很麻烦，参见<a href="https://sspai.com/post/97316">适合普通用户的简明Obsidian Git同步教程 - 少数派</a>）</li><li>新文档无法再像之前那样直接通过发链接到群里</li><li>……</li></ol><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/07/06/article/75b6866871aeb839b1658841ff667efc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>如果说这一点还能忍受，那么更大的问题是：<strong>即使是对于我们这样全员都具有计算机背景的团队来说，Obsidian+Git 的学习成本也太高了</strong>。以我自己的知识库来说，其日常运行就需要超过 10 个插件。此外，这套流程还要求定期聚会解决文件冲突，和组会一样，这显然是一件不受欢迎的事情。</p><p>如果说「腾讯文档不方便搜索、编辑卡顿……」属于<strong>熟悉的困难</strong>；那么「学习一套新的知识库方案」属于<strong>陌生的困难</strong>。依据人脑一贯的特点，我们总是会倾向于低估前者，同时高估后者。何况解决文件冲突还需要额外占用所有人的时间。</p><p>所以结果显而易见：大家对这套方案并不感冒，方案仍需改革。</p><h2><strong>改变</strong></h2><p>前面提到的 Obsidian 团队知识库方案太复杂了，光是介绍这个方案就需要一篇数千字的文章。关注知识管理的读者群体基本上都保持了严肃阅读的传统以及一颗谋求进步的心，因此才能够有耐心去了解并且应用这样一个复杂的方案。然而现实情况是，大多数人其实并没有那么多耐心，也不那么在乎效率。人们对待工作的普遍的心态其实是「我不关心长期问题，也不认可你说的那些虚头巴脑的价值，我只想快点解决手头的工作然后下班」。</p><p>所以我决定顺应这种心态：</p><ol><li><strong>不想学习新东西</strong>：和 Obsidian 解绑，不引入新工具，但是使用 Obsidian 仍然是最佳实践</li><li><strong>太复杂</strong>：简化流程，不再考虑追踪项目；除了腾讯文档不方便管的教程，其他内容仍然留给腾讯文档</li><li><strong>不想花时间</strong>：不再统一要求所有人参与，取消合并冲突所需要开的会，最好只需要提交即可</li></ol><p>具体需要做的事情很简单：在团队的 Github Orgnization 上建了一个存 markdown 文件的仓库，将腾讯文档中的知识内容移动到这里。<strong>这样的话懒人就可以不需要做任何事，也可以在 Github 在线查看并且搜索所有的文档</strong>。</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/07/06/article/76c8a9dc80f1d57213b55bbc7cb65194.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/07/06/article/b35898dc940d0b851ba2b1695f215bab.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>此外，这个仓库是用 Obsidian 制作的。像我这样愿意折腾的人仍然可以用 Obsidian 在 Github 和本地同步仓库，获得更好的搜索、编辑、个性化体验。</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/07/06/article/e16c13e6e85549d11419b0b23f3a095a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>对于不愿意使用 Obsidian 的同学，也可以把仓库下载到本地，用 VSCode、Typora 等软件打开编辑。这样的话这部分同学也不需要付出更多学习成本，可以进一步扩大潜在用户基数。</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/07/06/article/db2f3613f55e0ebfe7333a800fe3e457.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>对于想要参加到编写中的同学，其只需要熟悉提交 Github Pull Request 或者 Merge Request 即可很方便地加入到贡献者行列中。虽然这对于没有计算机背景的人来说仍然有不低的学习成本，但我们作为一个人工智能实验室，这是所有人早就掌握的技能，不需要额外的学习成本，体现了因地制宜的特点。</p><p>最后，稍微学习一下微软的特色：<strong>不再花时间维护腾讯文档中的那些教程</strong>，这不仅方便我自己，也为促进大家的转向增添一点推力。</p><h2>最后</h2><p>我关注效率话题已经有几年了，我读过的知识管理相关文章已经不少。我发现在这个话题下，人们往往总是处于两个极端之中：</p><ul><li>完全不关心知识管理，信奉「大力出奇迹」，对「低效」缺乏感知</li><li>完全沉迷于形而上的讨论，永远在「做笔记学习怎么做笔记」，以至于输出的结论大多数是空谈</li></ul><p>我认为，正确的做法应该介于二者之间：<strong>永远以解决现实问题为最终目的，并在此前提下探寻解决问题的最佳方式</strong>。</p><p>我决心践行这一理念。因此我真的去尝试了一下推行我提出的用 Obsidian 打造团队知识库的理论，看看是不是经得起推敲，结果我果然遇到了许多问题。最后总结下来就写成了这篇文章。</p><p>Obsidian 团队知识库的探索仍在继续，这不会是这个系列的最后一篇文章。如果你对这个话题感兴趣，或是认同我的想法，想知道后来会怎么样的话，欢迎关注我，持续获得最新的资讯。</p>
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>