<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>少数派 -- Matrix</title>
        <link>https://sspai.com/matrix</link>
        
        <item>
            <id>https://sspai.com/post/102575</id>
            <title>数字基石·壹：我的 Android 最小启动单元</title>
            <link>https://sspai.com/post/102575</link>
            <guid isPermaLink="false">https://sspai.com/post/102575</guid>
            <pubDate></pubDate>
            <updated>Tue, 16 Sep 2025 12:38:41 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>近日看到同站文章<a href="https://sspai.com/post/102151">《2025，你还折腾刷机吗？》</a>感触颇深，曾几何时我亦是刷机大军中的一员，然而随着政策收紧、年岁增加，心中已无折腾之意，用最少的精力打造最适合自己的系统逐渐成了我的首要目标。更何况刷机这行对技术要求高，风险也高（深夜尤甚），终究只得少数人青睐，遂决定写一系列短文，讲讲如何在不刷机、不解 BL、不 ROOT 的前提下，对各个操作系统进行非侵入式改造，使其更加简洁、更加个性化。以下这是我接触每一台 Android 手机都会执行的最小启动单元，通过少许应用调试，从开机起逐步打造自己的专属数字环境。另，出于某些原因，下文对于网络设置、跳过广告及其他不便展示的应用将不作着墨。微信、支付宝等日常必备应用亦不赘述。</p><p>封面由 Nano Banana 生成。</p><h3><a href="https://localsend.org/">LocalSend</a></h3><p>当崭新发亮的手机出于某些原因暂时无法下载某些 APP 时怎么办？LocalSend 闪亮登场，只要将设备连接到同一个 WiFi 即可快速发送接收文件。<strong>开源免费！</strong></p><p>关联阅读：<a href="https://sspai.com/post/78334">放过微信放过自己，跨设备传文件还有这些姿势</a></p><h3><a href="https://github.com/aistra0528/Hail">雹（Hail）</a></h3><p>系统预装的 APP 看不顺眼怎么办？卸载不掉怎么办？雹，一款 Android 应用冻结软件，可以快速停止、停用、卸载软件。本人除了微信、支付宝之外的所有国产软件皆冻结在此，要用时才搜索开启。请务必确保不要误封重要系统组件导致系统异常，裁员裁到大动脉。<strong>开源免费！</strong></p><h3><a href="https://shizuku.rikka.app/">Shizuku</a></h3><p>提起它可谓是无人不知，无人不晓。一款让应用程序直接使用系统 API 的工具，可简单理解为让软件在不 ROOT 的情况下也能拥有更高的权限，上下文提到的 Hail、AppOps 等软件都会用到它。配上无线调试功能，只需 WiFi 便可快速启动，简单好用。<strong>开源免费！</strong></p><p><strong>关联阅读</strong>：<a href="https://sspai.com/post/73294">别被 root 挡在门外：Shizuku 让 Android 玩机更简单</a></p><h3><a href="https://play.google.com/store/apps/details?id=me.piebridge.brevent">黑阈（Black Hole）</a></h3><p>也是省电老师傅了，能有效防止应用在后台运行，让手机更加持久流畅。 不开源，免费版已够用。</p><h3><a href="https://appops.rikka.app/zh-hans/">App Ops</a></h3><p>应用权限集中管理软件，自觉最好用的是「忽略」选项，可以让应用在请求权限的时候放行但返回空结果。不开源，免费版已够用。</p><p><strong>关联阅读：</strong><a href="https://sspai.com/post/61348">在权限管理上跑过 iOS 14 和 Android 11：App Ops 4.0 上手指南</a></p><h3><a href="https://github.com/stratumauth/app">Stratum</a></h3><p>一款双重身份验证 (2FA) 应用，支持加密备份、图标、分类和高度自定义。<strong>开源免费！</strong></p><h3><a href="https://bitwarden.com/">Bitwarden</a></h3><p>密码管理器，支持多端同步，快速填入，1Password 有的它都有而且。<strong>开源免费！</strong></p><p><strong>关联阅读：</strong><a href="https://sspai.com/post/61694">通过 Bitwarden 管理你的密码</a></p><h3><a href="https://www.coolapk.com/apk/com.ktls.fileinfo">存储空间清理</a></h3><p>适合中国宝宝体质的存储空间清理应用，有专属国内软件的清理规则，我会定期用它清缓存、大文件等。不开源且付费，但便宜，一杯奶茶钱。如果希望使用开源免费的替代品，也可试试 SD Maid SE FOSS 之类。</p><h3><a href="https://m.wandoujia.com/apps/7748079">河图-岁寒输入法</a></h3><p>心目中移动端最强的双拼变种输入法，使用点按+滑动的方式进行快速输入，大大减少了我使用 26 键时的误触，上手也不难，配合 Xperia 瘦长的机身甚至可以做到丝滑地单手操作。还能快速选中常用标点符号，长按空格进行语音输入，单手党福音。不开源且高级功能（韵母键族）及多设备同步需要付费。</p><p><strong>关联阅读：</strong></p><p><a href="https://sspai.com/post/46182">当滑动输入遇上双拼，岁寒输入法想让你的手机打字效率再高一点</a></p><p><a href="https://sspai.com/post/37642">我是如何开发岁寒输入法的：滑行输入的探索之路丨Matrix 精选</a></p><h3><a href="https://www.coolapk.com/">酷安</a></h3><p>本人寻找国产应用下载途径的顺序：Github / F-droid &gt; Google Play &gt; 酷安 &gt; 官网。酷安作为一个应用下载的第三方商店，体验还是很不错的。不开源但免费。</p><h3><a href="https://github.com/NeoApplications/Neo-Store">Neo Store</a></h3><p>一个现代且功能丰富的 F-Droid 客户端，界面好看。<strong>开源免费！</strong></p><h3><a href="https://gitlab.com/AuroraOSS/AuroraStore">Aurora Store</a></h3><p>允许用户在不登录 Google Play 账户的情况下下载 Play 商店中的应用，支持查看应用描述、截图、更新和评论。<strong>开源免费！</strong></p><h3><a href="https://play.google.com/store/apps/details?id=bitpit.launcher">Niagara Launcher</a></h3><p>心目中的安卓最佳启动器，有简洁、流畅的动画以及超高的颜值。由于我日常使用的 APP 只有七个，用这个简直刚刚好。不开源且需要付费。</p><p><strong>关联阅读：</strong><a href="https://sspai.com/post/71818">让桌面「流」起来，多是一件美事：Niagara Launcher</a></p><h3><a href="https://mixplorer.com/">MiXplorer</a></h3><p>系统自带的文件管理器从来就没有好用过，所以用 MiXplorer 代替，除了本地文件管理外，支持按视频、图片、APK 等进行分类管理，支持挂载网盘，并且内置 EPUB/MOBI/PDF 阅读器、图像查看器、媒体播放器和文本编辑器。鉴于我在手机上处理文件的次数并不多，它已经完全够用。不开源但免费。</p><h3><a href="https://github.com/WirelessAlien/ZipXtract">ZipXtract</a></h3><p>尽管 MiXplorer 支持压缩包操作，但似乎有 BUG 总是解压失败，故使用它来代替，支持解压 rar, zip, tar, bz2, gz, 7z, xz, jar 等类型。<strong>开源免费！</strong></p><h3><a href="https://play.google.com/store/apps/details?id=net.sjava.officereader">Office Reader</a></h3><p>偶尔在手机上看 Office 文件就用它。不开源，免费够用。</p><h3><a href="https://play.google.com/store/search?q=QRbot&amp;c=apps">QRbot</a></h3><p>免不了要扫二维码就用它，当然现在很多手机的相机应该也自带扫码功能了。不开源但免费。</p><h3><a href="https://github.com/breezy-weather/breezy-weather">Breezy Weather</a></h3><p>天气应用，界面流畅简洁而且没有任何广告，可以自定义天气源。<strong>开源免费！</strong></p><h3><a href="https://play.google.com/store/apps/details?id=me.i38.gesture">微动手势</a></h3><p>利用手机三轴陀螺仪识别并操控手机的应用，无需触摸屏幕，通过识别手机绕横轴、纵轴和Z轴的三种转动动作，对我这种单手党极其友好。不开源，免费版够用。</p><p><strong>关联阅读：</strong><a href="https://sspai.com/post/53892">「摇一摇」就能控制手机，微动手势让你的全面屏手势更完美 | App+1</a></p><h3><a href="https://slidebox.co/">Slidebox</a></h3><p>整理图片的利器，单击即可迅速将图片保存到指定文件夹中，上划即可删除。不开源但免费。</p><p>关联阅读：<a href="https://sspai.com/post/29246">对占内存的陈年旧照划划手指，好走不送：Slidebox</a></p><h3><a href="https://github.com/fork-maintainers/iceraven-browser">Iceraven</a></h3><p>一款基于 Mozilla Fenix 版 Firefox 的网络浏览器，致力于提供更多用户自定义功能、删除遥测并且提供更多扩展支持，本人在所有设备上的浏览器都基于 Firefox，并使用 Firefox 账户进行同步。<strong>开源免费！</strong></p><p><strong>关联阅读：</strong><a href="https://sspai.com/post/76688">想要逃离 Chrome？请收下这份 Firefox 终极隐私指南</a></p><h3><a href="https://viayoo.com/">Via</a></h3><p>一款名声在外、极致轻量化和简洁浏览器，当我只是想作简单搜索时就会用它而不是 Iceraven，几乎没有延迟的搜索和网页加载速度，非常舒适。不开源但免费。</p><p><strong>关联阅读：</strong><a href="https://sspai.com/post/29083">麻雀虽小，五脏俱全：Via 浏览器</a></p><h3>Yamby</h3><p>简洁实用的 Emby 第三方客户端，界面美观、操作丝滑，看电影看剧全靠它。不开源，免费够用。</p><h3><a href="https://music.aqzscn.cn/">音流</a></h3><p>一款 NAS 音乐串流播放器，支持 Subsoni, Navidrome, Emby, Jellyfin, AudioStation, Plex 等音乐服务，界面美观功能齐全，听音乐全靠它。不开源，下载等高级功能需要付费。</p><p><strong>关联阅读：</strong><a href="https://sspai.com/post/89420">Navidrome：自建音乐库新选择</a></p><p>&nbsp;</p><p>以上。二〇二五年九月十六日。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102429</id>
            <title>从 Nextcloud 到 Immich + Syncthing : 我的自托管媒体文件管理方案</title>
            <link>https://sspai.com/post/102429</link>
            <guid isPermaLink="false">https://sspai.com/post/102429</guid>
            <pubDate></pubDate>
            <updated>Tue, 16 Sep 2025 01:23:15 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <h2>背景</h2><p>&nbsp;</p><p>在之前的<a href="https://sspai.com/post/102337" target="_blank">《用 Termux + Syncthing 自动定时备份 Android 媒体文件》</a>一文中，我提到了自己采用 “Syncthing + Immich” 作为媒体文件的同步与管理方案。那篇文章中解决是的客户端的问题：如何将散落在手机上的媒体文件统一集中并备份到服务端。这篇文章则是对服务端应用的改造补充，讲述了我从 Nextcloud 到 Syncthing + Immich 的实践过程。</p><p>在开始之前，或许有必要说明一下我对 Nextcloud 有什么不满。客观来讲，作为一个私有云盘，Nextcloud 是一个非常合格的应用。我能想到的，它与之对标的闭源软件是 Microsoft 的 OneDrive。再加上 Nextcloud 的 App Store 中，官方和社区提供的丰富插件生态，使得用户完全可以以 Nextcloud 为中心，构建一个自己的 ALL IN ONE 工作台。 但是我使用 Nextcloud 的诉求，除了单纯的备份，还包括了图片的管理。固然在 Nextcloud 中提供了简单的图片浏览和管理功能，但比较专门的图片管理应用，它的体验只能说是“聊胜于无”，远谈不上优秀。因此，我希望寻找一个更加现代的相册管理应用。</p><h2>方案比较</h2><p>这里，有必要回顾一下当初的选型过程。Github 上，有一个<a href="https://github.com/meichthys/foss_photo_libraries">仓库</a> 对自托管的照片库进行了比较。严格来说，这里比较的都是 FOSS（Free and Open-Source Software，自由及开源软件）软件，所以自然不包括 MTPhotos 或群晖相册之类的商业方案。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/11/28b59b783f27cc0ed5160605b218a6af.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><br />从这里的功能比较中可以看到，Nextcloud 自带的照片功能，在 LivePhotos 和 Videos 的支持上的确较差，并且在 Albums、Timeline 和 Search 等照片展示和检索功能上也不尽如人意。<br />这里面我最关注的是两个应用，一个就是有着压倒性 stars 数量的 Immich，另一个就是与 Nextcloud 集成的 Nextcloud Memories。</p><h3>Memories</h3><p>先来说 Memories 方案，这是我的一开始尝试的方案。理由很简单，Memories 可以直接与 Nextcloud 服务集成，只需要在当前应用内部安装插件并进行配置就好了，不用引用额外的新服务。看起来很简单，但是在执行时还存在不少需要注意的地方，例如：</p><ul><li>Nextcloud 的<a href="https://hub.docker.com/_/nextcloud/">社区镜像</a> 需要手动构建镜像才能支持硬件加速。</li><li>Memories 本身并不直接提供人脸识别功能，还需要依赖其他的插件，如 <a href="https://github.com/nextcloud/recognize">Recognize</a> 或 <a href="https://github.com/matiasdelellis/facerecognition">Face Recognize</a> 插件。</li><li>针对中国大陆的网络环境需要对 Nextcloud 的 App Store 进行配置。</li></ul><p>总得来说，Memories 仍然是 Nextcloud 的一个插件，并不是一个独立的应用服务。它的很多功能，如媒体转码、同步备份和人脸识别都与 Nextcloud 高度耦合。如果是重度依赖 Nextcloud 生态的用户，那么将 Memories 作为对 Nextcloud Photos 的增强替代，是非常合适的选择。无需单独再维护一套新的服务，只需要完成插件配置，就可以直接在原有的 Nextcloud 服务中，获得良好的照片管理体验。<br />但是对我来说，Nextcloud 的在线协作反而是多余的功能，所以我最终还是选择了单独部署图片服务的方案，Nextcloud 的部署配置就放在后文仅供参考了。</p><h3>Immich</h3><p>Immich 虽然被很多人视为“自托管版的 Google Photos”，但<a href="https://immich.app/">官网</a> 的免责声明，即这段：</p><blockquote><p>⚠️ The project is under&nbsp;<strong>very active</strong>&nbsp;development. Expect bugs and changes. Do not use it as&nbsp;<strong>the only way</strong>&nbsp;to store your photos and videos!”</p></blockquote><p>让我一开始还是有些犯怵。但在 demo 环境进行尝试后，Immich 更现代的 UI 设计、更优秀的 AI 识别以及其他开箱即用的相册功能还是吸引了我。再加上它完善的官方文档和活跃的社区环境，最终促使我决定了这次迁移。<br />在方案设计上，虽然 Immich 安卓端提供了备份的功能，但通过 Immich 备份的相册目录是由应用自身来管理的，不能保留原本的文件结构。因此本着“专业的人干专业的事” 的原则，我将 Nextcloud 拆分为专门的同步应用 Syncthing 和专门的照片管理应用 Immich 来分别进行部署。</p><h2>方案实施</h2><p>部署采用的是 Docker Compose 方式，这也是 Immich 官方推荐的方式，在开始前，需要确保系统已经安装了 Docker 和 Docker Compose，并且有可以拉取镜像的网络环境。</p><h3>准备工作</h3><p>我当前对 docker 应用的数据是全部存放在 <code>/docker</code> 路径下，并以应用来划分的。以 Nextcloud 为例，一个 <code>docker-compose.yml</code> 文件中包含了应用（Nextcloud）、数据库（mysql）和缓存（redis），那么它的路径结构在宿主机上可能是这样的：</p><pre class="language-shell"><code>/docker/nextcloud/
├── app
│&nbsp;&nbsp; ├── ...
│&nbsp;&nbsp; └── nextcloud_data
├── db
│&nbsp;&nbsp; ├── conf
│&nbsp;&nbsp; └── data
└── cache
    └── data</code></pre><p>在原本以应用为主的结构中，是不存在问题的，因为一个应用的数据只独属于这个应用容器。但是在现在拆分后方案中，媒体数据既需要 Syncthing 来进行同步，又需要在 Immich 中作为外部媒体库来进行管理，再按原来的方式进行处理就不是那么合适了。<br />因此，独立于应用的数据，我单独创建了一个 <code>/data</code> 路径专门来存放。例如这里 <code>/data/pictures</code> 就专门用来存放图片数据，<code>/data/documents</code> 则存放原本使用 Nextcloud 同步的文档数据。</p><h3>数据迁移</h3><p>有了上面的配置后，先进行的就是数据迁移工作。在磁盘有足够空间的情况下，这里可以先不用贸然将原来的数据直接移动（<code>mv</code>）到新路径，可以先复制一份保持冗余，等新应用稳定后，再进行归档或删除。<br />我先前的 Nextcloud 的文件存放在 <code>/var/www/html/data/用户名/files/</code> 下，以我的配置文件为例，对应的宿主机路径为 <code>/docker/nextcloud/app/data/用户名/files</code>。这里只需要通过 <code>rsync</code> 迁移到新的目标路径即可：</p><pre class="language-shell"><code># 归档模式进行复制
# 参数说明：
#    -a：归档模式，递归传输文件并保留所有文件属性
#    -v：详细模式，增加输出的详细程度
#    -P：显示进度并允许在传输中断后恢复部分传输的文件
#    -h：以人类易读的格式显示文件大小信息
# 如果有权限问题可能需要 sudo 执行
sudo rsync -avPh /docker/nextcloud/app/data/用户/files/pictures/ /data/pictures/

# 如果文件权限不一致（例如 nextcloud 中可能是 www-data 用户和用户组）执行
# sudo chown -R 1000:1000 /data/pictures</code></pre><p>通常来讲，Linux 的第一个创建的用户的 UID 和 GID 都是 1000，因此后续都默认以 <code>1000:1000</code> 为例。也可以通过 <code>id -u</code> 和 <code>id -g</code> 确认当前用户的 UID 和 GID。</p><h3>Syncthing 配置</h3><p>Syncthing 的部署本身是不复杂的，只是我针对自己的情况进行了一些改动：</p><pre class="language-yaml"><code>services:
  syncthing:
    image: linuxserver/syncthing:2.0.3
    container_name: syncthing
    # linuxserver 的镜像支持 PUID 和 PGID 参数
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Shanghai
    volumes:
    # 应用自身相关的配置，挂载在 /docker/syncthing 下
      - /docker/syncthing/config:/config
    # 外部数据单独挂载在 /data 路径下
      - /data/documents:/data/documents
      - /data/pictures:/data/pictures
      - /data/encrypted:/data/encrypted
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped</code></pre><p>然后启动 Syncthing 服务后就可以通过访问 <code>http://&lt;服务器IP&gt;:8384</code>，进行同步设备和同步文件夹的配置了。<br />Syncthing 默认是没有密码的，可以在 GUI 中设置身份验证，并且将默认监听的地址配置为局域网访问地址以增加安全性。Android 上使用 Syncthing-Fork 进行同步的话不需要额外进行这些操作，因为开发者已经进行了开箱即用的设置。</p><h3>Immich 配置</h3><p>Immich 的部署主要参考官方推荐的 <a href="https://immich.app/docs/install/docker-compose/">Docker Compose</a>。官方在 Github 仓库提供了<a href="https://github.com/immich-app/immich/blob/main/docker/docker-compose.yml">文件</a>，我只是针对自己使用外部媒体库的情况进行了一些小改动：</p><pre class="language-diff"><code>services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
+   # 添加核显映射
+   # 核显设备路径为 /dev/dri/renderD128，用户组为 render
+   # 需要通过 cat /etc/group | grep render 来查看 render 组的 GID
+   user: "1000:1000"
+   group_add:
+     - "106"
+   devices:
+     - /dev/dri/renderD128:/dev/dri/renderD128 
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - ${UPLOAD_LOCATION}:/data
+     # 中文地理位置编码配置
+     - /docker/immich/geodata:/build/geodata
+     - /docker/immich/i18n-iso-countries/langs:/usr/src/app/server/node_modules/i18n-iso-countries/lan
+     # 只读挂载外部媒体库
+     - /data/pictures:/data/pictures:ro
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    ports:
      - '2283:2283'
    depends_on:
      - redis
      - database
    restart: always
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
-     - model-cache:/cache
+     - /docker/immich/cache:/cache
    env_file:
      - .env
    restart: always
    healthcheck:
      disable: false
+   # 对资源进行限制，避免占用过多宿主机资源
+   deploy:
+     resources:
+       limits:
+         cpus: '2.00'
+         memory: 6G
+       reservations:
+         cpus: '0.50'
+         memory: 4.5G   
# 其他部分保持不变</code></pre><p>我对官方的 <code>docker-compose</code> 文件进行了一些改动，首先是映射了核显设备，使得 Immich 服务可以利用核显加速，另一个就是对机器学习的容器进行资源限制，避免占用宿主机过多资源。Immich 服务挂载的持久卷中，参考了 <a href="https://github.com/ZingLix/immich-geodata-cn">Immich 反向地理编码汉化</a> 这个项目，以便为反向地理编码提供中文支持。配置成功后，在 Immich 的地图就可以看到的显示为中文的地理信息了。</p><blockquote><p>注意， Immich 的部署需要准备两个文件，除了 <code>docker-compose.yml</code>，还需要下载 <a href="https://github.com/immich-app/immich/blob/main/docker/example.env">example.env</a> 文件并更名为 <code>.env</code> 文件，并在其中对数据库密码等必要参数进行配置。</p></blockquote><p>Immich 服务启动后，可以访问 <code>http://&lt;服务器IP&gt;: 2283</code> ，创建并登录管理员账户。然后点击管理员账户下面的“系统管理”，进入管理页面配置外部图库，将挂载对应路径的外部图库进行导入，等待任务处理完成，刷新首页的时间线，应该可以看到外部图片成功展示。</p><h3>Nextcloud 配置</h3><p>仅作为参考：</p><ul><li>镜像补丁：Memories 支持视频和 Live Photos 的转码，以及核显的硬件加速。但这些功能并不是开箱即用的。如果和我一样，使用的是 Nextcloud 的<a href="https://hub.docker.com/_/nextcloud/">社区镜像</a> 来进行部署的话，这个镜像中并不包含核显的驱动以及 FFmpeg 转码工具，需要自行构建镜像（如果你不希望每次重建容器都执行安装命令的话）。一个示例的 <code>Dockerfile</code> 可能如下：</li></ul><pre class="language-dockerfile"><code># 基础镜像
FROM nextcloud:stable

RUN \
    # 设置 DEBIAN_FRONTEND 为非交互模式，避免 apt-get 安装时卡住
    export DEBIAN_FRONTEND=noninteractive &amp;&amp; \
    \
    # 1. 替换镜像源并添加 non-free 组件
    sed -i -e "s|deb.debian.org|mirrors.tuna.tsinghua.edu.cn|g" \
           -e "s|security.debian.org|mirrors.tuna.tsinghua.edu.cn/debian-security|g" \
           -e 's/ main$/ main contrib non-free non-free-firmware/g' \
           /etc/apt/sources.list.d/debian.sources &amp;&amp; \
    \
    # 2. 更新并安装软件包
    apt-get update &amp;&amp; \
    apt-get install -y --no-install-recommends \
        ffmpeg \
        intel-media-va-driver-non-free \
        vim &amp;&amp; \
    \
    # 3. 进行清理
    apt-get clean &amp;&amp; \
    rm -rf /var/lib/apt/lists/*</code></pre><p>&nbsp;</p><ul><li><code>docker-compose.yml</code> 配置：</li></ul><pre class="language-yaml"><code>services:
  app:
    # 使用重新构建后添加了核显渠道的镜像
    image: nextcloud:stable-patched
    container_name: nextcloud
    restart: unless-stopped
    # 如果使用非 root 用户，需要添加核显设备的用户组
    group_add:
      - "106"
    ports:
      - "18080:80"
    depends_on:
      - db
      - cache      
    environment:
      - TZ=Asia/Shanghai
      - PUID=1000
      - PGID=1000
      - MYSQL_HOST=db
    # 数据库配置，需要和下面 MySQL 中的配置保持一致
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=your_nextcloud_mysql_password
      - REDIS_HOST=cache
      - PHP_MEMORY_LIMIT=2048M
    volumes:
      - /docker/nextcloud/app:/var/www/html
    # 核显设备映射
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128  
    # 资源使用限制 
    deploy:
      resources:
        limits:
          cpus: '2.00'
          memory: 4G
        reservations:
          memory: 2G       
    networks:
      - nextcloud

  db:
    image: mysql:8
    container_name: nextcloud-db
    restart: unless-stopped
    environment:
      - TZ=Asia/Shanghai
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD=your_mysql_root_password
    # 数据库配置，需要和上面 Nextcloud 中的配置保持一致
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=your_nextcloud_mysql_password    
    volumes:
      - /docker/nextcloud/db/data:/var/lib/mysql
      - /docker/nextcloud/db/conf:/etc/mysql/conf.d    
    networks:
      - nextcloud
  cache:
    image: redis:7
    container_name: nextcloud-cache
    restart: unless-stopped
    environment:
      - TZ=Asia/Shanghai
      - PUID=1000
      - PGID=1000
    volumes:
      - /docker/nextcloud/cache/data:/data
    command: redis-server --save 60 1 --loglevel warning
    networks:
      - nextcloud

networks:
  nextcloud:
    name: nextcloud
    external: false</code></pre><h2>优化配置</h2><h3>硬件加速</h3><p>如果参考我的 Immich 配置了硬件加速，可以在“系统管理” -&gt; “设置”中，拉到最下面的“视频转码设置”。在倒数第二个选项卡“硬件加速”，设置加速器 API 为 VAAPI，如果是 Intel 7 代以上的 CPU，还可以选择 Quick Sync 选项。</p><h3>中文地图编码</h3><p>参考项目 <a href="https://github.com/ZingLix/immich-geodata-cn">immich-geodata-cn</a> 进行配置。在 Relases 中，下载和当前 Immich 一致的 geodata 文件，并解压到服务器指定路径，geodata 文件级别参考项目的说明。注意，因为 Immich 更新较快，适配最新版本的 Immich 的文件可能是自动更新版本。</p><h3>机器学习设置</h3><p>默认的模型是不支持中文的，如果希望语义搜索可以获得较好的效果，<a href="https://immich.app/docs/features/searching/">官方文档</a> 提供了可选的多语言模型和它们的配置参考。比如，主要以中文检索的情况，可以选择 <code>nllb-clip-large-siglip__v1</code> 模型，它的内存要求是 4226 MB，这也就是我在前面的配置中，为 <code>immich-machine-learning</code> 预留了 4.5 G 内存的原因。如果服务器资源拮据，也可以考虑使用默认的模型或者关闭机器学习功能。<br />同样的，需要在“系统管理” -&gt; “设置”中找到“机器学习设置”中进行配置，这里只需要将智能搜索选项卡中的 CLIP 模型更换为选择的模型即可，<code>immich-machine-learning</code> 服务会自动进行模型下载。如果遇到网络问题，可以安装 <code>git</code> 的 <code>lfs</code> 插件，通过<a href="https://hf-mirror.com/">镜像网站</a>手动拉取模型到本地。同样以我的配置为例，本地的模型路径为 <code>/docker/immich/cache/clip</code>。因此只需要在这个路径下执行 <code>git clone https://hf-mirror.com/immich-app/nllb-clip-large-siglip__v1</code> 即可。</p><h2>写在最后</h2><p>如果设备的性能不是太好，Immich 的 AI 识别可能会运行较长的时间。以我的 12300T，近 1.5 万张照片和图片，运行了大约 8 个多小时。对移动设备上的照片备份，我也额外设置了同步脚本的配置。<br />通过拆分，我获得了什么？在告别了对我而言稍嫌鸡肋的 Nextcloud 后，我获得了一个更加现代的照片管理应用和一个更加纯粹的同步应用。我不再试图在一个“大而全”的应用中解决全部问题，而是让不同的应用各司其职，最终组合为一个协调配合的系统。这大概就是自托管的魅力。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102433</id>
            <title>iPhone17出了，国内能用苹果智能了吗？</title>
            <link>https://sspai.com/post/102433</link>
            <guid isPermaLink="false">https://sspai.com/post/102433</guid>
            <pubDate></pubDate>
            <updated>Mon, 15 Sep 2025 03:01:01 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p style="margin-left: 0px; text-align: justify;">iPhone 17 亮相，更轻薄的 Air 版本，横向排列的背面摄像头。<strong>但对国内用户来说，最关心的还是：能用上苹果智能了吗？</strong></p><p style="margin-left: 0px; text-align: justify;">答案是大概率不行，因为发布会没提。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">苹果在 2024 年 9 月随 iPhone 16 推出「苹果智能」，涵盖AI写作、回忆、任务、Siri 和摄像头识别等功能，但部分跳票，国内使用也受到限制。<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">如今体验门槛比半年前低多了：一台非国行 iPhone，加一个海外账号就行。</p><p style="margin-left: 0px; text-align: justify;">能用和好用显然不是一回事。与其纠结何时开放，<strong>不如看它能否自然融入日常使用？</strong>要是真没那么厉害，用不用得上也就无所谓了。带着这个标准，我分享几个印象深刻的场景。</p><h2 style="margin-left: 0px;"><strong>自动回复：多是情绪价值</strong></h2><p style="margin-left: 0px; text-align: justify;">短信场景下，苹果智能可以自动回复。比如家人、朋友发来消息，你不好意思不回，但也一时间不知道怎么说，系统会生成两条轻描淡写的回应供你选择，并不断闪烁。</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdnfile.sspai.com/2025/09/11/article/bb74b8fc3541f373ceebced3e3cf0f3e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">不过可以感受到，苹果在这类场景里给模型的上下文很短，生成内容大多只围绕对方最后几句话，缺乏深入理解。</p><p style="margin-left: 0px; text-align: justify;">体验下来，感觉不能总用，因为苹果这种「片汤话」风格太明显了，用多了，反而让人觉得你在应付。</p><p style="margin-left: 0px; text-align: justify;">这让我想到一句话：<strong>这世间唯一不能应付的，就是应付本身。</strong></p><h2 style="margin-left: 0px;"><strong>改写：刚需但没做好</strong></h2><p style="margin-left: 0px; text-align: justify;">既然自动回复容易露馅，那退而求其次，先写个大概让它改总行吧？</p><p style="margin-left: 0px; text-align: justify;">改写（润色）本该是苹果智能最合适的场景。比如回老板消息：对方想知道一件事，但情况复杂：某个东西没交上去，原因不在你。</p><p style="margin-left: 0px; text-align: justify;">这时需要合适的措辞，既解释清楚又避免误解，这种不想说的，又不得不说的情况，确实是大模型的强项。</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdnfile.sspai.com/2025/09/11/article/af3bdc49c71a6ecb25d179c48c9659b6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">但体验下来很麻烦。手机屏幕小，打字框紧巴，让模型润色时看不到具体怎么改，还担心覆盖原内容。</p><p style="margin-left: 0px; text-align: justify;">相比之下，电脑上体验更好：快速打出想法，发给 GPT 润色，再贴回聊天软件，流畅。</p><p style="margin-left: 0px; text-align: justify;"><strong>说到底，我们有时用大模型润色不是想把话说得漂亮，而是不想多费心思包装。</strong>只想把事实背景写清楚，语言变成纯粹信息传递，不在上面花费多余感情和精力，少操心动气。</p><h2 style="margin-left: 0px;"><strong>通知管理：有用，但不够聪明</strong></h2><p style="margin-left: 0px; text-align: justify;">我们再退而求其次：写不行，那只看呢？现在各种 App 都在推送，手机几乎没停过，不知道先看谁、谁优先级高。苹果智能，能帮我们做好优先级划分和总结吧？</p><p style="margin-left: 0px; text-align: justify;">它确实会自动分级，把它认为重要的「首要通知」用彩色框标出。</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdnfile.sspai.com/2025/09/11/article/ea0c43bbfddd3d38f426f157d2d175a5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">但实际体验中，这套优先级不够聪明：要么反复把最近联系人标记成首要通知，要么看到涉及钱的数字就优先展示。<strong>判断逻辑太直接，缺乏大模型解析非结构化数据的优势。</strong></p><p style="margin-left: 0px; text-align: justify;">如果一个 App 推送太多次，苹果智能会总结。</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdnfile.sspai.com/2025/09/11/article/04d85bacfd7095202710b02c58382f36.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">但这种考验很大， 比如新闻 App 推送多条无关联的新闻，模型硬要总结，结果就是让人哭笑不得的「大乱炖」。</p><figure class="image ss-img-wrapper"><img alt="一系列约会消息被摘要成“享受一起出去玩，但还没发展出浪漫感情”@trungtphan X" src="https://cdnfile.sspai.com/2025/09/11/article/48de272f2c0fc4391a01fe1cc60e59d4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>一系列约会消息被摘要成“享受一起出去玩，但还没发展出浪漫感情”@trungtphan X<br />&nbsp;</p><figure class="image ss-img-wrapper"><img alt="股票通知混乱：Robinhood股票通知摘要成“GOOG上涨；AMD下跌；GOOGL上涨”。重复和简略让它看起来像胡言乱语@stockmktnewz X" src="https://cdnfile.sspai.com/2025/09/11/article/e0fff55037e7f2b74e0b3a3808657e2a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>股票通知混乱：Robinhood股票通知摘要成“GOOG上涨；AMD下跌；GOOGL上涨”@stockmktnewz X</p><p style="margin-left: 0px; text-align: justify;">在国外最大论坛Reddit，甚至有一个 r/AppleIntelligenceFail 板块，专门用来收集这些 AI 搞笑总结。苹果后续 iOS Beta 中取消了新闻 App 通知总结。</p><p style="margin-left: 0px; text-align: justify;">当然，你如果觉得它不准，也可以点击展开成多个原始信息，分开看就好。</p><h2 style="margin-left: 0px;"><strong>Siri + ChatGPT：更聪明，却有点绕</strong></h2><p style="margin-left: 0px; text-align: justify;">Siri 现在变聪明了，尤其是可以接入 ChatGPT。</p><p style="margin-left: 0px; text-align: justify;">但问题是调用模式多了一层：你问 Siri 问题，如果觉得苹果本地模型回答质量不高，经常还要说「请用 ChatGPT 回复」，然后它把问题发给你绑定的 GPT 账号，GPT 再回复给你。</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdnfile.sspai.com/2025/09/11/article/06e3dc4e7ac346f8ea62facbba225d30.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">这个流程还不如直接打开 ChatGPT App 顺手。</p><h2 style="margin-left: 0px;"><strong>相机识别：能用</strong></h2><p style="margin-left: 0px; text-align: justify;">相机识别倒是能用。</p><p style="margin-left: 0px; text-align: justify;">长按拍照键有两种模式：搜索直接跳转谷歌或亚马逊购物，询问则可以问这个东西的具体细节，识别个花花草草还是挺方便的。</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdnfile.sspai.com/2025/09/11/article/2ee1fa28c4219b14bd8376cc017e2760.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2 style="margin-left: 0px;"><strong>结语</strong></h2><p style="margin-left: 0px; text-align: justify;">说回开头的问题：苹果智能的「存在感」强不强？</p><p style="margin-left: 0px; text-align: justify;">从体验来看，它确实在尝试融入日常使用，但大多数场景都还是「半成品」状态。自动回复太假，通知总结经常翻车，文本改写在手机上用起来麻烦，Siri 接入 ChatGPT 又多了一层。只有相机识别算是能用。</p><p style="margin-left: 0px; text-align: justify;">「苹果智能」这个定语其实挺准确，以上大部分涉及文字的功能，都是苹果自己的本地模型生成的。</p><p style="margin-left: 0px; text-align: justify;">这背后有多重限制：<strong>手机算力有限，苹果本身不是大模型公司，还要兼顾隐私保护不能什么都上云。</strong>要在这么多约束下既保证体验又控制成本，不仅考验模型能力，更考验产品能力。</p><p style="margin-left: 0px; text-align: justify;">也许这就是苹果的节奏：先做个框架出来，慢慢打磨。但对国内用户来说，等它真正好用的时候，我们能不能用上还是个问号。</p><p style="margin-left: 0px; text-align: justify;">本文首发<a href="https://mp.weixin.qq.com/s/y_Ov-TQwporrBhihOEj22w">「言辞之间」</a>，同步少数派。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102505</id>
            <title>Me 3.0 升级技术分享：从「液态玻璃」开始</title>
            <link>https://sspai.com/post/102505</link>
            <guid isPermaLink="false">https://sspai.com/post/102505</guid>
            <pubDate></pubDate>
            <updated>Sun, 14 Sep 2025 23:35:45 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p style="margin-left: 0px;">2025年6月9日，苹果在 WWDC 上发布了基于 Liquid Glass（液态玻璃）的全新设计语言，那一刻我在屏幕前难以抑制内心的兴奋——我知道，属于 Me 的又一次进化，终于要开始了。</p><p style="margin-left: 0px;">作为从一开始就全局支持原生磨砂玻璃效果的应用，Me 在视觉层面已经积累了很好的基础。而这一次，借助系统的底层能力，Me不仅实现了向液态玻璃的平滑过渡，更借此契机，完成了从设计语言到功能架构的全方位重构。</p><p style="margin-left: 0px;">从六月下旬启动开发，到如今 Me 3.0 正式成型，我想与你分享这次升级背后的思考与实现。</p><h2 style="margin-left: 0px;"><strong>一、视觉新生：从「磨砂」到「液态」的沉浸体验</strong></h2><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/eb5ba31905c09a0d84f5085908d7b904.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Me3.0</figcaption></figure><p style="margin-left: 0px;">液态玻璃的加入，无疑是这次视觉升级中最让我着迷的部分。在 Xcode 26 中编译后，导航栏几乎无需调整就自然呈现出全新的液态质感。而对于其他界面元素，也仅需通过 .glasseffect() 修饰符轻松适配——技术上的低门槛，却带来了视觉上的高回报。</p><p style="margin-left: 0px;">尽管苹果官方建议“避免过度使用液态玻璃”，但我仍决定全局启用该效果，并保留用户切换回经典磨砂风格的选项。初期的 Beta 版本确实存在性能压力，一度让我犹豫是否该收敛一些，但随着系统迭代，优化效果日益明显，这也印证了我坚持的理由。</p><p style="margin-left: 0px;">另一个显著变化，是背景设计的风格转向。旧版为了突出磨砂质感，采用了高饱和度的图片背景，初次惊艳，但久看易疲。3.0 版本中，我改用黑白配色与渐变点阵作底，反而更显耐看与沉稳。如果你选择液态玻璃效果，我强烈建议搭配一张色彩鲜明的自定义背景图，光影流动之间，视觉张力拉满。</p><h2 style="margin-left: 0px;"><strong>二、功能重构：更合理，也更强大</strong></h2><p style="margin-left: 0px;">这一次，我重新思考了模块划分的逻辑。原本的“今天”、“回顾”、“数据统计”、“运动记录”、“Me”，现在重组为“今天”、“健康”、“锻炼”、“挑战”、“Me”。不只是改名，更是对功能架构的深层整合。</p><h3 style="margin-left: 0px;"><strong>今天：</strong>你的健康每日简报</h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/d5e523dfd8e2df6f3f33eaedb35d194b.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>今天</figcaption></figure><p>「今天」不再只是数据的堆砌，而是你健康生活的智能助手。在新版本中，我移除了之前Me自带的进度环，转而专注于呈现Apple Watch的健身圆环，让数据更加专注。现在，「今天」是一个高度模块化的仪表盘。新增的训练负荷通过直观的图表，对比过去28天与7天的训练数据，让你清晰了解每次训练的强度是否合理。压力评估模块则融合了HRV、心率、活动状态等多重数据，并借助机器学习模型，为你提供当前的压力水平评估——随着你的持续使用和反馈，这个模型会越来越懂你。最令我自豪的是全新的仪表盘和今日状态模块。仪表盘通过精美的环形进度条一览当天所有健康指标，并且你完全可以自由决定显示哪些、如何排序。而今日状态则整合了睡眠、运动、心血管等多维数据，通过动态算法生成你的每日健康评分，并给出专属改进建议。当然，所有模块都支持自定义排序，你可以打造一个完全属于你的「今天」。</p><h3><strong>健康：</strong>化繁为简，聚焦当下</h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/ebdc3c864d95f749b74a1100bddda8f3.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>健康</figcaption></figure><p style="margin-left: 0px;">之前版本的健康首页采用了一个大型胶囊区块，同时展示最新值和周、月、年的平均值。但很多用户反馈，他们更关心的是“现在”和“变化”，而不是历史平均。</p><p style="margin-left: 0px;">因此，新版做出了一个大胆而简洁的改进：我使用清晰的双栏列表排布各项指标，突出显示最新数值和相较于上一次的变化趋势。不仅如此，我还为11种健康数据类型分别设计了精致的渐变配色——无论是在首页还是在详细页面，这些色彩与默认背景相结合，视觉表现都相当赏心悦目。</p><h3><strong>锻炼：</strong>让每一次运动都被看见</h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/3b3475e47a941cd4225f21bdadd00141.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>锻炼</figcaption></figure><p style="margin-left: 0px;">锻炼页面现在变得更强大了。默认视图采用了多维图表和直观的日历打卡，让你对自己在某段时间内的运动表现一目了然。动态运动类型统计模块也得到了加强——你再也不会受限于4个常用类型，所有运动都会被自动识别和分类。</p><p style="margin-left: 0px;">查找历史记录也变得前所未有的便捷。我加入了强大的筛选器，支持按时间范围和运动类型快速检索。单次运动记录的详情页现在包含更丰富分段统计，此外还新增了两款风格独特的分享模板，让你轻松晒出成就。</p><h3><strong>挑战：</strong>与自己、与朋友、与所有人竞赛</h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/1149966a8d26846f37a483fdca6b50d2.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>挑战</figcaption></figure><p>「挑战」模块由之前的运动目标和排行榜整合升级而来。现在它分为三个层级：自我挑战、好友竞赛和全员排行榜。无论你是希望突破自我，还是想和朋友一较高下，甚至与所有Me用户比拼——这个模块都能满足你那该死的好胜心。运动的乐趣，一半在于挑战。</p><h3><strong>Me：</strong>更个性，更感恩</h3><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/bce9cd14ad8e0b8caff858fff7278fea.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Me</figcaption></figure><p style="margin-left: 0px;">「Me」页面本次也收获数项值得一提的升级：</p><p style="margin-left: 0px;"><strong>心率区间自定义</strong>：现在可以手动设置静息心率和最大心率，算法推荐将更贴合你的实际身体状况；</p><p style="margin-left: 0px;"><strong>轨迹热力图</strong>：你的每一次跑步、骑行都会在地图上留下印记。时间越近、轨迹越频繁，地图上的光斑就越亮；</p><p style="margin-left: 0px;"><strong>训练负荷计算扩展</strong>：由于性能考虑，Me默认只计算2025年1月1日以后的训练负荷数据，但在这个模块中你可以手动重新计算更早的记录（需注意：该功能仅支持2024年6月10日之后在iOS 18和watchOS 11上记录的数据）；</p><p style="margin-left: 0px;"><strong>特别感谢</strong>：我一直相信，好的作品从不是孤军奋战的成果。在这里，我特别感谢了那些在开发路上给予我灵感和技术支持的开发者伙伴，以及一直为我出谋划策的产品经理们。</p><h2 style="margin-left: 0px;"><strong>三、技术反思：踩坑、自研与 AI 编程</strong></h2><h3><strong>SwiftData</strong></h3><p style="margin-left: 0px;">在 Me 的数据持久化方案中，我选择了苹果在 2023 年 6 月推出的 SwiftData——某种意义上，这也让 Me 成了最早一批在生产环境中使用这一框架的 App。不得不说，作为一个新兴技术，SwiftData 在带来现代化声明式语法的那一刻，也带来了无数“惊喜”。</p><p style="margin-left: 0px;">由于它实在太新，我在开发过程中遇到的不少问题，甚至连苹果官方技术支持都无法给出明确的解决方案。数据版本迁移、多线程上下文安全……对于一个主要偏客户端的开发者来说，简直是持续不断的噩梦。但踩坑踩多了，倒也久病成医。在 Me 3.0 中，我大幅减少了对 SwiftData 的依赖，并引入 ModelActor 来加强线程安全的管理。</p><p style="margin-left: 0px;">不过随之而来的是新的课题：当你使用 ModelActor 之后，从 ModelContext 中 Fetch 出来的结果并不符合 Sendable 协议，无法直接跨线程传递。我必须手动将其转换为其他结构体才能继续处理——这种额外步骤，确实拖慢了开发的节奏。所以，如果你正在考虑是否要在项目中使用 SwiftData，我的建议是：谨慎评估，尽量避开早期坑点，尤其是如果你需要高度定制化的数据流机制。</p><h3><strong>自定义组件</strong></h3><p style="margin-left: 0px;">我一直不太理解苹果在某些组件设计上的限制思路。比如 ProgressView 和 Gauge，样式和尺寸被严格约束，几乎不允许开发者自由调整；再比如 Activity Rings（健身圆环），虽然在 App 中可以使用，但一旦你想把它做到小组件或者表盘上——抱歉，此路不通。</p><p style="margin-left: 0px;">每当你想要稍微跳出官方设定的框框，这些组件仿佛都在对你说“No”。于是，我只好走上自力更生的道路：借鉴苹果官方组件的视觉风格和交互逻辑，从头实现了一系列支持高度自定义的组件。</p><p style="margin-left: 0px;">不只是复制，我还加入了一些自己的创意。例如我实现了多阶段的进度条（用于训练负荷的视觉化）、可灵活定义背景线框和样式的雷达图，以及支持交互的动态热力图——它们不仅在 Me 中得到了应用，我也计划在整理代码后，将这些组件开源发布到 GitHub。或许有一天，它们也能帮到像你一样，不愿被默认设置束缚的开发者。</p><h3><strong>Vibe Coding</strong></h3><p style="margin-left: 0px;">2023年，我开始接触ChatGPT辅助编程，短短两年时间，AI编程的发展速度令人惊叹。回想Me2.0开发时，我需要为排行榜模块编写后端服务，当时对Python几乎一无所知（现在也还是一无所知）。我花了一天时间快速浏览Python语法，随后在Cursor的辅助下，仅用两天就完成了后端服务的开发与部署，这种效率在传统开发模式下难以想象。</p><p style="margin-left: 0px;">在这次Me3.0的升级过程中，我的主力工具换成了Claude Code。虽然它的命令行交互方式可能让一些开发者望而却步，但一旦体验过其强大的代码理解和生成能力，你很可能会和我一样爱上这种纯净而高效的编程方式。与此同时，我也测试了Google的Gemini——它的交互设计十分友好，很会提供情绪价值，但在Swift编程方面总是差一口气，好几次几乎就要成功，却总是在最后关头功亏一篑。</p><p style="margin-left: 0px;">最近OpenAI的Codex表现相当抢眼，既提供CLI工具，也有Cursor插件。与Claude Code相比，Codex属于“人狠话不多”的类型，给出的解决方案简单直接，效果出众。不过它的CLI交互体验还比较简陋，像是毛坯房，使用额度策略也让人琢磨不透：Claude Code每5小时重置额度，而Codex却让我等了1天零16个小时。此外，我也体验了几款国产AI编程工具，如TRAE、CodeBuddy和Qode。其中TRAE表现尚可，至少达到了可用水平，每月10美元的定价也还算合理；另外两款则暂时不建议尝试。</p><h2 style="margin-left: 0px;"><strong>四、写在最后：不止于迭代，更是一场真诚的构建</strong></h2><p style="margin-left: 0px;">Me 3.0 不只是一次功能叠加或界面焕新，它承载的是我对“健康数字伴侣”的重新理解：它应更直观，也应更懂你；它应更美观，也应更高效。</p><p style="margin-left: 0px;">从磨砂到液态，从分散到整合，从手动到智能——变的是形态，不变的是我希望帮助你更好地关注自我、享受运动的初心。</p><p style="margin-left: 0px;">未来，我仍将继续倾听你的反馈，不断优化 Me 的体验。你是否喜欢这一次的改版？有没有功能让你特别心动？欢迎在评论区告诉我。</p><span class="ss-linkCard">&nbsp;</span><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102515</id>
            <title>意大利北行记（一）</title>
            <link>https://sspai.com/post/102515</link>
            <guid isPermaLink="false">https://sspai.com/post/102515</guid>
            <pubDate></pubDate>
            <updated>Sun, 14 Sep 2025 23:27:27 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <h2>引言</h2><p>书接上文，在经历一场短暂的“翡冷翠十二时辰”后，我们于日落时分再次回到了米开朗基罗广场。斜阳映照下，此时的阿诺河已被完全染成金黄；而这条金色丝带的另一侧，那巨大的宛如漂浮于城市之中的圣母百花堂正在俯瞰着世间。只见她转过身去，渐渐伸开双臂，将整个城市拥入怀中。于是，街角那些喧噪的声音开始一个个的消失，取而代之的，是远处飘来的有规律的吟咏和一阵阵空洞的风；这是来自圣母的低吟，只为安抚她这个因黑夜将至而有些紧张的孩子。这旋律是如此的古老，风也好似来自过去，万物此刻也不由得屏气凝神，惟恐惊扰了孩子的梦。 抬头看去，城市上空氤氲着一层淡蓝色的雾霭，那正是初织的梦网，温热而寂静。随着入睡的呼吸声愈发稳定，梦的织体愈发坚实，这层雾霭便也逐渐沉淀、增厚、静止，好似万古长空……突然，一声电吉他的轰鸣打破了这沉寂，只见他腾空而起，然后四散开来，点亮万千灯火。而在源头阑珊处，人群正在快速聚集，躁动的情绪开始在空气中蔓延；随后，音乐声变得越发清晰、明亮，引得空气中的风也一改清冷，裹挟着脚步声、喝彩声、欢笑声、掌声自四面八方呼啸而来。此时的广场上，人声鼎沸，叠影熙攘，朝圣者的炽热暂时熄灭，而祛魅者的狂欢正悄然拉开帷幕。<strong>日夜更替铸一座城，这正是属于佛罗伦萨的变与不变。</strong></p><p>在一片欢闹热烈声中，我们启程出发。绕过著名的皮蒂宫后转头向北驶去，与这座时光之城的背影挥手告别。接下来，我们将前往博洛尼亚与等待我们的宋博士汇合；宋兄是我在大学时期的学弟，一晃多年，现在的他已成为一名年轻的人文地理学者。当他得知我此次要前往多洛米蒂地区时，作为一名老地理人的他已经让我隔着屏幕都能感受到他的“兴奋”；因此不消我多费口舌，仅在简单忽悠了几句后，他便欣然同意，决定在旅途的后半段从德国飞来中从加入我们；说起来，宋兄与我还曾是一同参加大学“旅游协会”的同仁，对于在满世界做背包客这件事可以说是我们共同的爱好；可惜，我们这个社团由于种种的“不可抗力”可以说是“名存实亡”，整个大学期间都没有组织过一次集体出行，大家也只好单打独斗，自我发挥；因此，这场时隔多年后的共同旅行也算是弥补了我们学生时代留下的遗憾。从后视来看，宋兄的加入不仅没有走向常见的“拆伙”结局，反而起到了正向的助推作用，甚至还可以说大大提升了我们这趟旅行的感受价值；</p><p>有长期出行经历的朋友都知道，“旅伴”的重要性程度有时甚至可以超过目的地本身，毕竟风景再好，也需要有好的心情才能欣赏；而心情的好坏，往往就直接取决于你和身边人的关系；<strong>在旅途中，大大小小的选择不计其数，还要随时面临各种突发情况，如何分工与决策，高度考验着彼此的默契程度；就算一开始的分歧双方尚可妥协找补，但随着旅途加深所形成的扩大效应，长期聚积的矛盾终将难以掩饰，终将在某个时刻爆发……</strong>因此，我向来在旅伴的选择上慎之又慎，而若能有幸找寻到一个合拍的伙伴，难度比之在相亲市场上找个“如意伴侣”，可以说是只高不低；</p><p>但非常幸运的，我们与宋兄作为同样有着多年旅行经历的“老登”，在外出食宿、游览选择、兴趣点分配等方面的心理标准上高度同频，这就大大降低了整个小队分崩离析的可能。更难能可贵的是，与一位专业的“地理老师”同游山水之间，一面欣赏美景、各抒感怀，一面还能听他向你畅谈地貌之构造、时空之演变，如此人文与科学交融的体验，那绝对是高价参加私享团也难能遇到。再加上他在这几年点亮的驾驶、摄影、修片、烹饪、社交等一系列技能点，我们的这位宋博士绝对可以称得上是一位“万能青年旅伴”。当然，此为后话，暂且不表。</p><p>言归正传，这博洛尼亚与佛罗伦萨两地相距不远，直线仅约100km，但却被山地阻隔，在历史上各自发展成为了两个王国（公国）的首府。两座城市气质迥然，自古典时期起就呈现出“一文一武”的格局。<strong>如今，佛罗伦萨是意大利的手工业和艺术中心，代表的是意大利的面子；而博洛尼亚则是意大利的工业重镇，其地位相当于无锡或苏州之于中国，是意大利低调的里子；</strong></p><p>而横亘于两城之间的这条山脉，正是大名鼎鼎的“亚平宁山脉”。熟悉意大利地理的朋友都知道，亚平宁山脉贯穿意大利全境，从最北的利古里亚海岸向南直达“靴尖”的西西里岛，长度超过1200公里，堪称意大利的”龙脉“；也正因此，意大利在地理上又得名“亚平宁半岛”。我们这次从南部一路走来，也得以有幸完整看到这座山脉形态的变化起伏；在那不勒斯地区为代表的南部地区，火山活动高度发育且呈现海岸山脉的形态，毁灭古罗马庞贝的维苏威火山就是其中代表；在罗马周围的中部地区，山势大开大合，其间既有崇山峻岭，也有独立的高原和山间盆地，是上演诸侯割据、军阀混战的绝佳舞台，罗马帝国以武而彰的文化气质显然就与此有关；而在博洛尼亚所处的北部，山体变得更为连续，由于地势不断加高，因此这一段的山体在视觉上显得低矮，倒是与江浙地区的丘陵地貌更为相似。作为对意大利“全局覆盖”的大山，亚平宁山脉更是在政治和文化意义上具有不可代替的作用；自意大利独立以来，这座山脉就逐渐成为国家认同和凝聚的核心概念，其历程与“长城”在中国近代史的发展阶段颇有异曲同工之处。</p><p>因此，作为一个地理文化爱好者的我，对于本次自驾路上可以穿越这座意大利“长城”，在规划之初还是十分期待甚至兴奋的。我甚至已经早早在脑海里提前预演了在翻越这条“神圣之路”时所应有的史诗情绪。但想象是美好的，现实却很“残酷”，如今去往博洛尼亚的道路早已舍弃了早先的翻山路线，改为全程隧道覆盖，只需半小时不到便可横穿亚平宁；而原来的传统路线，目前已被改造为成一条专门的户外道路，仅允许徒步通过。<strong>在这一刻，我似乎理解了国内那些热衷在藏区行走的部分老驴群体，总是抱怨墨脱公路的开通让他们再也无法感受到藏南小城的美好与淳朴；由此观之，“驴友”可谓是现代社会管理中最难“伺候”的一个群体了，科技给的不到位便会嚷嚷着“配套不足，基建落户”，科技太发达又会痛心疾首的表示“摧毁了这里原本生活里的诗意”。这是现代科技发展的太蛮横？还是一小撮人太矫情？我看两者都有，就由着他们接着争辩吧。</strong></p><p>虽然没有机会近距离观摩亚平宁山脉的一石一林，但这条穿山隧道到是给我们留下了深刻印象；这几年里我们接连在中亚、中欧、高加索等地自驾游览，对于国外“基础设施”的平均水准，在心理上基本有了稳定的预期；可以说在世界上的绝大多数国家的眼中，基础设施这四个字重要的只是前边“基础”二字，甭管是50年前的还是100年前的，只要是尚且能用且还用不死人那就可以称之为“设施”。然而这条通往意大利北部的隧道，可以说是我们近几年在国外难得一遇的现代化设施，其内部整洁明亮、铺装完善，还有完整的通风设备，施工标准我看比之国内发达地区也丝毫不落下风。可以说意大利政府用这么一条隧道提前向我们预告了北部地区的富裕和繁华，相较起来，我们早些时间在南意遇到的那些隧道就显得颇有古风了，你甚至可以从中读出意大利从洞穴部落走向现代社会的完整脉络；<strong>当车辆从隧道中开出来的一瞬间，地势一下豁然开朗，一个巨大的平原在我们的面前升起，这正是号称“意大利长三角”的波河平原，同时也意味着我们正式结束了在托斯卡纳大区的旅程；</strong></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/e9d9966e8df07331fb4583e8f4323128.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption><i><strong>黄昏下的圣母百花堂</strong></i></figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/d1bc2a09e0789271fc35aa82144ca0f4.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption><i><strong>在米开朗基罗广场上等待落日的人群</strong></i></figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/49d95a9cbbaa0df1a745f3407bb245c3.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption><i><strong>夕阳下的阿诺河</strong></i></figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/025fc6be51ffc8ff5eb406673d00a35a.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption><i><strong>托斯卡纳双星之二--锡耶纳</strong></i></figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/395539e8b075437e66a3cf961a5b53a7.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption><i><strong>托斯卡纳双星之二--锡耶纳</strong></i></figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/15/682ca38300184995d73278e69990134f.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption><i><strong>精品小镇皮恩扎</strong></i></figcaption></figure>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102485</id>
            <title>为了解决Obsidian的分享难题，我做了一个一劳永逸的插件【自荐】</title>
            <link>https://sspai.com/post/102485</link>
            <guid isPermaLink="false">https://sspai.com/post/102485</guid>
            <pubDate></pubDate>
            <updated>Sun, 14 Sep 2025 23:24:45 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>使用Obsidian很长时间，一直觉得有一个很大的痛点，就是<strong>分享自己的笔记非常不方便。</strong>因为本地优先的理念，无法直接生成可访问的链接，想要分享给朋友，只能手动导出成pdf，或者把内容重新复制到在线文档，体验链路非常冗长，如果需要那么复杂的路径，还不如直接用在线云文档。</p><p>当然，官方和社区在这方面也做了很多努力，比如官方的Publish服务，或者第三方的Markdown部署网页、Digital garden插件，研究了一圈，发现至少存在以下一个或几个问题：</p><ul><li><strong>价格贵</strong>，官方的Publish服务8美元/月，分享在大多时候并不是一个高频需求，可能一周也用不了几次，使用订阅服务的成本真的很高。</li><li><strong>配置麻烦</strong>，必须用电脑，还得折腾git、折腾代码、折腾网页样式、折腾域名。</li><li><strong>部署延迟大</strong>，每次传上去都要等上好一会，等成功了耐心都没了，更何况还有不小的概率不成功，很糟心。</li><li><strong>国内访问性差</strong>，自部署的方案主要都是依赖托管网站，国内访问不稳定，就算绑定自己的域名，还是会有被限制的风险。访问的稳定性，我认为对于分享场景是非常重要的。</li><li><strong>存在隐私泄露风险</strong>。有国外开发者做了可以一键部署的插件，可以将笔记快速上传到他免费提供的网站上，但是毕竟是把数据放在陌生人的服务器里面，不够安全。</li><li><strong>权限管理不够丰富</strong>，有时候我只想分享给特定的人，有时候我不希望看到笔记的人可以下载、复制、转存，如果是一个普通前端网页，这种精细度的权限管理是很难实现的。此外还有访问量统计、读者行为的记录、留言批注等等，难度都很大。</li><li><strong>侧重于库的分享</strong>，而不是单篇文档，我知道作为双链笔记，保持连通性是很重要的，但在很多情况下不够实用，特别是当我希望分享出去的时候，我肯定不会希望这是一篇结构很复杂、需要频繁跳转的文档。</li></ul><p>于是，试了一圈，还是只能重新想办法，<strong>从第一性原理出发，既然自己搭太复杂，为什么不复用国内成熟的、已经搭建好所有功能的成熟云文档产品？</strong></p><p>飞书文档、WPS文档、腾讯文档都是很好的在线云文档产品，他们的功能已经做的很丰富了，而且几乎不存在上面的缺点，只需要能有一个方法，把我们需要分享的Obsidian内容一键同步过去，回传链接，不就和原生的分享功能体验几乎一致了吗？</p><p>说起来容易，但是为了保证和原生效果保持一致，中间的难题不少，这些云文档虽然支持部分Markdown语法，但并不能完整映射Obsidian的效果（比如callout块上传后会被识别为引用块）；同步文字的同时，还要考虑如何同步图片，并插入在相同的位置；整个上传过程一定要快要丝滑，不能在使用的时候感受到过高延迟；后续权限更新、删除、分享复制等功能也要集成到Obsidian中，避免后续管理不便。</p><p>经过几天的的努力，过程还是挺曲折的，好在上面这些难题都一一克服了，最终在ObShare这个插件里，实现了我预期的“便捷、无感、绝对安全”的三个要求。</p><figure class="image ss-img-wrapper image_resized" style="width: 365px;"><img src="https://cdnfile.sspai.com/2025/09/13/article/6852e4d33c8fe95ae75ef662081d63e4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><ul><li><strong>首先是好用</strong>，可以通过右键菜单、命令面板、左侧快捷按键三种方式，一键分享当前文档，支持直接在Obsidian内设置文档的可见权限、查看分享文档、删除文档，实现文档全生命周期管理。配置过程非常简单，十分钟左右就可以搞定，一次配置，永远不用折腾。</li></ul><figure class="image ss-img-wrapper"><img alt="359285e9-8279-4a67-8359-bc395703964a" src="https://cdnfile.sspai.com/2025/09/13/article/e82a42a180d8dd8e8e0cd8e21c3f58da.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><ul><li><strong>然后是无感</strong>，平均上传时间不到10秒（因为网络延迟、附件多或体积大等因素，可能会有波动），体验链路全面对齐在线云文档，仿佛就是Obsidian原生的分享方案。</li><li><strong>绝对安全</strong>，在隐私保护上做了大量工作，所有个人配置的敏感数据在端侧以加密方式储存，永不上传；文档整个传输过程仅在用户设备与飞书服务器之间通信，全程不涉及第三方；用户只需要提供最小授权，不会影响飞书账户的使用。上传过程也可以在F12的日志中完整，插件代码完全开源。</li></ul><p>对我而言，自研插件补全了Obsidian体验的最后一款短板，在本地优先的基础上，做到分享体验也毫不妥协，通过这款插件，可以随时把经验、灵感、创意与朋友伙伴分享，再也不用因为隐私和本地优先，牺牲掉分享的便利性。</p><p>当然，我知道目前插件只是一个半成品，还有很多地方需要改进和完善（比如后续考虑设计批量上传能力、实现双链关系映射、支持更多复杂格式、更细致的权限管控等等），因此它迫切需要更多人的使用、需要更多的真实反馈和优化建议。</p><p>如果你也有类似的分享需求，不妨试一试这款插件，目前，ObShare1.0.2版本（第一个开放版本）已经在github开源并提交Obsidian插件上架申请，Obsidian插件审核极慢，但等不及让大家用上，大家可以在release界面直接下载包体使用~</p><p>github链接指路：<a href="https://github.com/xigua222/ObShare">ObShare</a><br />&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102470</id>
            <title>OSAKA &amp; TOKYO：一份写给自己的旅行答案</title>
            <link>https://sspai.com/post/102470</link>
            <guid isPermaLink="false">https://sspai.com/post/102470</guid>
            <pubDate></pubDate>
            <updated>Sun, 14 Sep 2025 23:23:57 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <h2><strong>缘由</strong></h2><p>这次日本之行的缘起，说起来有点「简单粗暴」——我，一个任天堂的游戏迷，实在太想去大阪环球影城（USJ）的马力欧世界了！</p><p>就为了这个念头，我喊上了朋友一起，策划了一场跨国之旅。我们的逻辑也很直接：既然机票都买了，那顺便去一趟东京吧？既然到东京了，那涩谷、秋叶原这些地方也得顺便逛逛吧？</p><p>于是，一场最初只是为了见马力欧的单纯旅行，像滚雪球一样，变成了一场横跨关西与关东的五日双城大冒险。</p><p>这篇游记，就是我们这场「顺便」之旅的全记录。它没有完美的计划，却充满了各种意料之外的发现和乐趣。希望能为你未来的旅程，提供一份带着我们体温的参考。</p><h2><strong>Day 1：大阪初遇・烧鸟夜</strong></h2><p style="margin-left: 0;">怀着满分的兴奋，我们从杭州出发。飞机穿过棉花糖般的云层，窗外风景由壮观的跨海大桥，渐渐变为被雨水浸润的大阪市轮廓。</p><figure class="image ss-img-wrapper image_resized" style="width: 352px;"><img src="https://cdnfile.sspai.com/2025/09/12/405a2f262022de555c1c9b16e483cdf2.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>从飞机舷窗看到的海景</figcaption></figure><h3><strong>✅ 入境与交通</strong></h3><p style="margin-left: 0;">都说日本入境排队长，但我们体验下来相对顺利。秘诀就在于提前线上申请好的「Visit Japan Web」，在自助机上扫 QR 码、扫护照、录指纹，然后去对应的人工窗口核对信息，整个流程高效又清晰。</p><p style="margin-left: 0;">从关西机场到市中心，我们选择了性价比路线。在南海电铁的自助机上，轻松办好了 ICOCA 交通卡（类似国内的交通卡，押金 500 日元），然后选择了便宜一半的「急行」列车。车厢很像地铁，座椅靠着软软的，一个小时的车程里，看着窗外陌生的街景掠过，真实感才慢慢涌上来。</p><blockquote><p><strong>【小贴士】</strong></p><p style="margin-left: 0px;"><strong>交通选择</strong>：从关西机场到难波，南海电铁有「特急」和「急行」两种车。「特急」有点像高铁，可以指定席位，全程约 50多分钟；「急行」像地铁，随到随坐，约 60 多分钟，但价格几乎便宜一半，不赶时间的话非常推荐。</p><p style="margin-left: 0px;"><strong>导航App</strong>：Google 地图（查路线时刻）+ 换乘案内（查地铁价格）+ 高德地图（步行导航），三款 App 组合使用，基本不会出错。</p></blockquote><h3><strong>🏨 惊喜的落脚点</strong></h3><p style="margin-left: 0;">我们预定的酒店在四桥附近，地理位置绝佳，靠近心斋桥附近，随便逛逛就能感受到繁华。虽然知道日本酒店房间小，但推开门的一刻还是被惊喜到了：房间虽小但五脏俱全，干净整洁得不像话，甚至还有一个迷你浴缸！完全看不出是 2019 年装修的，日本在酒店维护上真的让人佩服。</p><h3><strong>🍢 鸟贵族的美味暴击</strong></h3><p style="margin-left: 0;">放下行李已是晚上 9 点，饥肠辘辘的我们直奔朋友推荐的烧鸟店——「鸟贵族」。</p><p style="margin-left: 0;">这家连锁店的性价比真的超高，当然是相对于日本的水平来说的哈。通过平板选中文后点餐，毫无沟通障碍。我们把菜单上前几页的肉串都点了一遍：鸡肉串、猪肉串、大肠串……每一串都烤得恰到好处，鲜嫩多汁。唯一踩雷的是我们误以为是鸡心而点错的鸡肝，那个味道确实有点欣赏不来。</p><p style="margin-left: 0;">但这顿饭最大的惊喜，是随便点的名为「可尔必思」的饮料。它尝起来像带着微醺感的酒酿气泡水，清甜又爽口，瞬间驱散旅途的疲惫。毫不夸张地说，这是我本次旅行的最佳饮品！</p><p style="margin-left: 0;">然而犯了个新手错误，没看清「一份是两串」，导致前期点的所有串都自动翻倍，最后的结果就是——两个人吃出了三个人的量，扶着墙出门。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/b2d3d46e3aa2d92ba71dce7d8d6e7432.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>烧鸟</figcaption></figure><blockquote><p><strong>【小插曲】</strong></p><p>晚上回酒店，发现「去哪儿」网发的环球影城门票链接，下载下来是个无法识别的文件。在我快要绝望时，灵光一闪，发现文件名里有“pdf”字样，抱着试一试的心态把后缀改成了 .pdf —— 成功了！明天可以顺利进场了，真是虚惊一场。</p></blockquote><h2><strong>Day 2：大阪狂欢・USJ 限定</strong></h2><p style="margin-left: 0;">我们在 USJ 的一天，是从台风带来的大雨中开始的。就因为天气导致很多地铁延迟，我们还忙中出错坐过了一站，但这丝毫没有影响我们的热情。</p><h3><strong>✨ 超出预期的惊喜项目</strong></h3><p style="margin-left: 0px;"><strong>《间谍过家家》的 VR 过山车：</strong>这是我们玩的第一个项目，本来没抱太高期望，结果被狠狠惊艳到！戴上 VR 眼镜，瞬间进入阿尼亚的世界，跟着剧情体验一场紧张刺激的逃亡。过山车的失重感和 VR 的逼真视觉效果完美结合，肾上腺素一路狂飙。</p><p style="margin-left: 0px;"><strong>《名侦探柯南》的 4D 剧场：</strong>童年回忆加成！虽然听不懂日语，但 4D 效果做得极好。当屏幕上出现坠落场景时，现场会喷出大量干冰模拟烟雾，冰凉的触感让人身临其境。经典的踢球场景 3D 效果也很棒，感觉足球下一秒就要冲出屏幕。</p><p style="margin-left: 0px;"><strong>丧尸鬼屋（万圣节限定）：</strong>虽然我自己胆子很小，但还是被朋友拉着去了。一路上被各种丧尸追赶，氛围感十足。演员也是信念感满满，尽管我听不懂他说了什么，但也能从肢体上略知一二。最好笑的是排在我们后面的日本妹子，全程边尖叫边道歉，承包了我们所有的恐惧，反而让我们觉得她有点可爱。</p><figure class="image ss-img-wrapper image_resized" style="width: 444px;"><img src="https://cdnfile.sspai.com/2025/09/12/baab8bcc866155952e9f7d22975f1efe.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>柯南剧场</figcaption></figure><h3><strong>🍄 欢迎来到超级任天堂世界</strong></h3><p style="margin-left: 0;">穿过那根经典的绿色管道，当游戏里的世界 1:1 真实地展现在眼前时，那种震撼难以言喻。食人花、板栗仔、耀西……所有熟悉的元素都活了过来，我真的是太爱这个世界了。</p><p style="margin-left: 0;">我们买了心心念念的互动手环（奇诺比奥款真好看！），虽然互动小游戏感觉有点「智商税」，但为了这份热爱，含泪说值了！</p><p style="margin-left: 0;">「耀西的冒险」是个可爱的观光项目，坐着小车能把整个园区的风景尽收眼底。但「酷霸王的卡丁车」体验有点一言难尽，排了一个多小时的队，实际的交互感却很弱，真的超级失望了。</p><figure class="image ss-img-wrapper image_resized" style="width: 414px;"><img src="https://cdnfile.sspai.com/2025/09/12/851ec982be63a61bc7bc69985bf4265e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>马里欧世界</figcaption></figure><blockquote><p><strong>【小彩蛋】</strong></p><p>本着「来都来了」的原则，我和朋友自然买了很多周边。后来去玩手环专属的互动小游戏时，工作人员在讲解完规则后，还特意指了指我们买的周边，并对我们竖起了大拇指哈哈。</p></blockquote><h3><strong>⚡ 全场最佳的禁忌之旅</strong></h3><p style="margin-left: 0;">等到傍晚时分，我们把哈利波特园区作为收官项目。当城堡映入眼帘，魔法世界的气息扑面而来。「3D 禁忌之旅」被我们一致评为全场最佳！裸眼 3D 效果绝佳，你就像真的骑着扫帚，在霍格沃茨上空飞翔，与火龙擦肩，躲避蜘蛛的攻击，那种沉浸式的刺激，为我们的 USJ 之旅画上了最完美的句号。</p><figure class="image ss-img-wrapper image_resized" style="width: 465px;"><img src="https://cdnfile.sspai.com/2025/09/12/7bdba22150f1038cafdd67eadd2e8237.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>哈利波特城堡</figcaption></figure><h3><strong>🥢 试试从未尝过的大阪烧</strong></h3><p style="margin-left: 0;">暴走近两万步后，我们拖着疲惫的身体回到市区。晚饭是在大众点评上找的，一家评分很高的大阪烧店。小店藏在楼梯上，很有市井气息。我们点了经典的大阪烧和一份特色炒面，师傅在铁板上现场制作，香气四溢。刷满酱汁的大阪烧口感层次丰富，那份炒面更是锅气十足，好吃到停不下来！人均一百不到的价格，就能享受到如此地道的美食，性价比超高。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/0f4982719d6c8c458299d39f5292e0d4.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>大阪烧</figcaption></figure><blockquote><p><strong>【小槽点】</strong></p><p style="margin-left: 0px;"><strong>地铁的换乘</strong>：日本地铁换乘很多不是站内换乘，需要先出站，走很长一段路，再进另一个站，对于游客来说有点绕。</p><p style="margin-left: 0px;"><strong>罗森的遗憾</strong>：本想尝尝日本罗森的甜品，结果发现根本没有，我挺喜欢冰皮蛋糕的，没想到居然是国内限定。</p><p style="margin-left: 0px;"><strong>百事的关西限定</strong>：在自动贩卖机买的，看到是限定的白桃汽水，真的满怀期待，结果喝起来一股奇怪的药味，纯纯浪费钱了。</p></blockquote><h2><strong>Day 3：东京初遇・涩谷夜</strong></h2><p style="margin-left: 0;">在大阪度过充实的两天后，我们向着下一站——东京出发。</p><h3><strong>🚅 状况之外的新干线初体验</strong></h3><p style="margin-left: 0;">睡到自然醒后，我们退了房，去吃了一蘭拉面。细面、浓汤，味道不错，但汤底对我来说有点像高级版的泡面，略咸。配的乌龙茶很好地中和了，而且是无糖的越喝越顺口。</p><figure class="image ss-img-wrapper image_resized" style="width: 439px;"><img src="https://cdnfile.sspai.com/2025/09/15/d6cbd9d857a93dae36e07378df042dfd.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>一蘭拉面</figcaption></figure><p style="margin-left: 0;">真正的挑战，是在新大阪站购买新干线车票。我们在自助机上顺利买到了「特急券」，以为大功告成，结果进站时被闸机无情地拦下。比划了半天才从工作人员那里明白，乘坐新干线需要「乘车券」+「特急券」两张票才行！这个小小的乌龙，也算是自由行里宝贵的踩坑经验了。</p><p style="margin-left: 0;">新干线的感觉和国内高铁类似，两个半小时后，我们顺利抵达了繁华的东京。</p><figure class="image ss-img-wrapper image_resized" style="width: 309px;"><img src="https://cdnfile.sspai.com/2025/09/12/f05d2e3dcbbf3045a506070051d10d90.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>新干线</figcaption></figure><blockquote><p><strong>【小贴士】</strong></p><p style="margin-left: 0px;"><strong>新干线车票</strong>：记住，一定要买两张票！一张是基础的「乘车券」（证明你从A站到B站的权利），一张是「特急券」（证明你可以坐这趟快车的权利）。</p><p style="margin-left: 0px;"><strong>东京地铁通票</strong>：我们提前薅羊毛买了 7 折的「东京 24/48/72 小时地铁通票」，在对应地铁站的自助机上兑换即可，对于需要在市区内频繁移动的游客来说，非常划算。</p></blockquote><h3><strong>🏙️ 涩谷 SKY：在城市之巅俯瞰星河</strong></h3><p style="margin-left: 0;">在浅草的酒店安顿好后，我们直奔涩谷。晚饭的咖喱牛肉饭味道浓郁，但整体感觉齁咸，算是我最不满意的一顿了。</p><p style="margin-left: 0;">之后我们又逛了逛优衣库，价格真的很便宜，感觉下次来只带身上的这一套，其他都可以在当地买了。还感受了堂吉诃德的喧闹与琳琅满目，见识了各种奇奇怪怪的百货商品。</p><p style="margin-left: 0;">真正的重头戏是涩谷 SKY，飞猪上门票唯一十万加的含金量。登上顶楼的露天展望台，360 度的无死角视野让人瞬间失语。脚下是世界上最繁忙的十字路口，车流和人流像交织的溪流，远处是东京塔和鳞次栉比的摩天大楼。那天正好农历七月十五，月亮特别圆，天上虽然星星只几颗，但整个人很放松，还在停机坪上躺了许久。环顾四周一圈，发现女生们特别爱拍照，胆子小也得出片哈哈，就还挺有意思的。</p><figure class="image ss-img-wrapper image_resized" style="width: 468px;"><img src="https://cdnfile.sspai.com/2025/09/12/4a6358cdd8415a2b91eda11971fee716.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>在涩谷 Sky 眺望</figcaption></figure><blockquote><p><strong>【小贴士】</strong></p><p>因为我们是临时决定去的，所以是飞猪上买的门票，还是有几十块钱的溢价，提前在官网约的话更实惠。</p></blockquote><h2><strong>Day 4：东京漫走・二次元</strong></h2><p style="margin-left: 0;">今天的主题是 City Walk，路线随心而动，体验却异常丰富。</p><h3><strong>🍣 有趣的 Kura 寿司体验</strong></h3><p style="margin-left: 0;">午饭选择了性价比较高的回转寿司店「くら寿司（Kura Sushi）」。这里点餐很有趣，除了可以在传送带上自取，也能通过平板点单，菜品会通过上层传送带「嗖」地一下送到你面前。吃完的盘子可以投进回收口，每集满五个还能抽一次奖，我们幸运地抽到了一个《怪兽八号》的扭蛋。</p><p style="margin-left: 0;">寿司的味道很不错，金枪鱼寿司配点芥末无敌，熟猪排/牛排寿司本身就很惊艳。裹着面粉炸制的天妇罗寿司，外脆里嫩，也非常推荐。限定的月见肉饼寿司则像一个迷你汉堡，风味独特。唯一美中不足的是甜品，点的两款都很甜，而且蛋糕体很多，就很不值得。</p><figure class="image ss-img-wrapper image_resized" style="width: 502px;"><img src="https://cdnfile.sspai.com/2025/09/12/4480e20691862c9f3fc0fcd406b6494e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>くら寿司墙边的装饰（寿司吃的太欢忘记拍了）&nbsp;</figcaption></figure><h3><strong>⛩️ 浅草寺的「吉」与「遇」</strong></h3><p style="margin-left: 0;">饭后，我们顺路逛到了浅草寺。花 100 日元体验了抽签，我抽到大吉，朋友抽到吉，算是个好兆头。把好签带走，坏签系在旁边的架子上，这便是这里的习俗。</p><p style="margin-left: 0;">在这里还遇到了一位口音像同胞的大妈，她先是跟我们讲浅草寺与道教的渊源，讲着讲着却突然开始生气，甚至莫名其妙地骂了我们几句，实在让人摸不着头脑。我们选择不与她争辩，快速离开，不让别人的负能量影响自己的旅途。</p><figure class="image ss-img-wrapper image_resized" style="width: 356px;"><img src="https://cdnfile.sspai.com/2025/09/12/108a6c8e2829d2c6d6193ac587dfa934.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>浅草寺内</figcaption></figure><h3><strong>🎮 秋叶原：二次元圣地巡礼</strong></h3><p style="margin-left: 0;">下午，我们来到了二次元的圣地——秋叶原。我们直奔动漫迷必打卡的 Animate，整整七层楼，从漫画、手办到各类周边，让人目不暇接。顶楼甚至还有成人向区域，也算是开了眼界。又去了隔壁的 Softmap 等几家比较有名的店，但布局和内容都差不多，逛多了就觉得没什么新鲜感。</p><p style="margin-left: 0;">我最期待的还是扭蛋，在一家有整层楼都是的扭蛋店里，我终于圆梦了。在经历了一番「投币失败」的小插曲后，我成功扭到了一个超帅的贝吉特！这里的街机厅也很有意思，玩《高达》的人最多，反而国内经典的《拳皇》无人问津。</p><figure class="image ss-img-wrapper image_resized" style="width: 460px;"><img src="https://cdnfile.sspai.com/2025/09/12/f73464e5ff17bfa2c9994686c578d2da.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>秋叶原</figcaption></figure><h3><strong>🏮 夜晚的新宿与池袋</strong></h3><p style="margin-left: 0;">晚上，我们去了传说中的歌舞伎町。街道上确实有很多「案内人」和「站街女」，但并没有想象中那么混乱，更多的是一种猎奇的观察。我们还偶遇了地下偶像的露天表演，女孩们全程开麦唱跳，实力非常强。候场区还有下组进场的偶像，每个人旁边都有一个粉丝，好像得花点钱才能说话。就感觉在东京，这种现象既神奇又正常。</p><p style="margin-left: 0;">之后转战池袋，这里更像「中国城」，连库迪咖啡都看到了，真是不期而遇的惊喜。晚饭体验了一家烤肉店，肉质上乘，牛舌和牛肉都非常美味，但分量实在是小，六片肉就要 125 元，性价比不高。唯有那杯可尔必思，依然是我的最爱。</p><figure class="image ss-img-wrapper image_resized" style="width: 490px;"><img src="https://cdnfile.sspai.com/2025/09/12/fb956a0936faf80d585e69e0582af6e8.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>库迪和歌舞伎町</figcaption></figure><h2><strong>Day 5： 东京收官・吃与买</strong></h2><p style="margin-left: 0;">旅行的最后一天，我们睡到自然醒，享受在东京的最后慢时光。</p><h3><strong>🐷 被油烟呛到的绝品炸猪排</strong></h3><p style="margin-left: 0;">退房并寄存行李后，我们去了一家大众点评上的必吃榜餐厅——「山家炸猪排」。猪排外皮酥脆，里脊鲜嫩多汁，配上咸甜酱和黄芥末，味道堪称一绝。吃多了会比较腻，喝点乌龙茶刚刚好。反倒是配的味增汤，有点像是腐乳的味道，个人并不是很能接受。但这 70 元一份的套餐，性价比还是极高的。</p><p style="margin-left: 0;">唯一的缺点是，我们被安排在正对操作台的位置，炸猪排的油烟直冲我们而来，呛得人睁不开眼。我和朋友只能狼吞虎咽地吃完，然后火速逃离现场。</p><figure class="image ss-img-wrapper image_resized" style="width: 420px;"><img src="https://cdnfile.sspai.com/2025/09/12/581011425bfb1735a7b33914216901a2.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>炸猪排</figcaption></figure><h3><strong>💎 银座的「土狗」漫步</strong></h3><p style="margin-left: 0;">下午我们来到银座，很有名的商业区。在松屋银泰百货，我们见识了动辄上百万的手表和几千上万的绅士服，店员热情地让我们试一条蟒蛇皮皮带，我们俩连碰都不敢碰，相视一笑之后，感叹自己真是「土包子」，也算是一种有趣的体验。</p><p style="margin-left: 0;">反差最大的是，附近竟然有一家高达 12 层的优衣库旗舰店，！店内的设计很搞笑，挂着的衣服会自己左右晃动，堪称天才般的设计。</p><figure class="image ss-img-wrapper image_resized" style="width: 359px;"><img src="https://cdnfile.sspai.com/2025/09/15/5ce8f16961a96914ec200817fdf095e8.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>偶遇的 Nissan 概念车</figcaption></figure><h3><strong>🎁 Loft：伴手礼的天堂</strong></h3><p style="margin-left: 0;">最后也是逛了下 Loft，我们找到了买伴手礼的乐趣。这是一家大型文创和生活用品店，从文具、贴纸到各种杂货，设计可爱，价格平实。原本兴趣缺缺的朋友，最后也沉浸在挑选可爱贴纸的快乐中，我们在这里为朋友们准备了满满的心意。</p><figure class="image ss-img-wrapper image_resized" style="width: 298px;"><img src="https://cdnfile.sspai.com/2025/09/12/7074c603e7cb49290cbfdefcde1c3a28.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Loft</figcaption></figure><h3><strong>🍔 最后的晚饭与归途</strong></h3><p style="margin-left: 0;">接近傍晚的时候，我们远眺了一下东京塔，吃了在日本的最后一餐——肯德基。限定的「月见」汉堡出乎意料地好吃，糖心蛋和独特的酱料很加分。但薯条和可乐就远不如国内了，依旧是很粉的薯条和很稀的可乐。</p><figure class="image ss-img-wrapper image_resized" style="width: 566px;"><img src="https://cdnfile.sspai.com/2025/09/13/e4125557869abac6dfd24bbc114ed706.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>东京塔和月见汉堡</figcaption></figure><p style="margin-left: 0;">回程的航班延误了，落地南京已是午夜。入住了积分换的全季酒店，躺在比日本酒店大两倍的床上，那种熟悉而舒适的感觉，为这次旅行画上了一个安心的句号。</p><h2><strong>尾声</strong></h2><p style="margin-left: 0;">五天四晚，一晃而过。</p><p style="margin-left: 0;">回看这些天的照片和笔记，记住的不仅仅是那些著名的地标，更多的是那些鲜活的瞬间：为一杯好喝的饮料而开心，为买到 50 块钱的 MUJI T 恤而惊喜，和朋友一起研究地铁线路，在街头因为一个有趣的招牌而大笑……</p><p style="margin-left: 0;">我想，这大概就是旅行的意义——在陌生的城市里，用自己的脚步去丈量，用自己的眼睛去发现，然后带着一身故事和满心欢喜，回到自己的日常里，继续好好生活。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102469</id>
            <title>仅103KB！Deskpins 一个轻巧免费的Windows窗口置顶工具</title>
            <link>https://sspai.com/post/102469</link>
            <guid isPermaLink="false">https://sspai.com/post/102469</guid>
            <pubDate></pubDate>
            <updated>Sun, 14 Sep 2025 23:23:48 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>每次打开页面使用多个软件，总是受困于层叠的窗口遮挡</p><p>揪破脑袋也没找到窗口置顶按钮，恨不得再买个屏幕单独放置窗口😡</p><p>后来，发现了这个神器——「<i><strong>Deskpins</strong></i>」</p><hr /><h4>介绍</h4><p>软件没有“常规”的界面，启动默认显示在系统托盘，只能右键打开菜单选项。</p><figure class="image ss-img-wrapper image_resized" style="width: 269px;"><img src="https://cdnfile.sspai.com/2025/09/12/a5ca2a38e57daa70a7a5da69b5d89382.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>右键打开菜单</figcaption></figure><p>如你所见，软件非常简洁。</p><p>最上方两个选项「Enter pin mode」和「Remove all pins」</p><p>分别用于“指定窗口置顶”和“取消所有置顶”</p><p>点击「Enter pin mode」后，鼠标指针会变成一枚图钉📌，移动到窗口上“左键”即可置顶，“右键”退出/取消。</p><p>固定成功后窗口右上角会显示📌标志，点击📌可取消置顶。</p><figure class="image ss-img-wrapper image_resized" style="width: 429px;"><img src="https://cdnfile.sspai.com/2025/09/12/67297af7ca1821d694a66f89df2f74e4.gif" /><figcaption>Enter pin mode 演示</figcaption></figure><p>「Remove all pins」好理解，就是取消所有置顶，这里不再说明。</p><p>&nbsp;</p><p>接下来是软件的「Opinions」设置菜单，可以设置图钉📌和托盘图标的颜色、自动化置顶、快捷键。</p><figure class="image ss-img-wrapper image_resized" style="width: 351px;"><img src="https://cdnfile.sspai.com/2025/09/12/856fa68fbdc95f70c76850f8fdd22218.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Opinions 界面</figcaption></figure><p>这里重点说一下「Autopin」和「Hotkeys」</p><p>「Autopin」可以自定义开启某个窗口后自动置顶，比如经常打开文档对照，就可以设置文档窗口自动置顶。</p><figure class="image ss-img-wrapper image_resized" style="width: 664px;"><img src="https://cdnfile.sspai.com/2025/09/12/291d0d5d0ccd4a574857d9ba041dcf48.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>一图流 开启自动置顶</figcaption></figure><p>「Hotkeys」可定义快捷键快速“指定窗口置顶”和“直接置顶当前窗口”</p><figure class="image ss-img-wrapper image_resized" style="width: 393px;"><img src="https://cdnfile.sspai.com/2025/09/12/0da9e363b38e77d084e91e2564ab272f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>自定义快捷键</figcaption></figure><p>勾选启用后，鼠标点击对应选项并按动键盘，可设置快捷键，按Back[退格]键取消。</p><h4>结语</h4><p>这个小工具真的是救了我的大命，上手后就回不去，强烈安利！！！👍👍👍</p><hr /><h4>软件下载（Github开源）：</h4><p>https://github.com/thewhitegrizzli/DeskPins/releases</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102319</id>
            <title>小鸭计时: 为什么我们用“可视化”来帮助孩子理解时间、减少对抗？</title>
            <link>https://sspai.com/post/102319</link>
            <guid isPermaLink="false">https://sspai.com/post/102319</guid>
            <pubDate></pubDate>
            <updated>Sun, 14 Sep 2025 23:23:38 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>在家里，我经常面对这样的场景： &nbsp;</p><p>“快点刷牙！” &nbsp;</p><p>“一会儿要出门了！” &nbsp;</p><p>“还剩几分钟？”</p><p>结果我自己成了计时器，孩子觉得我唠叨，气氛紧张，争执不可避免。</p><p>作为开发者，也是一名家长，我开始思考：如果 <strong>时间本身能成为中立裁判</strong>，家长和孩子都遵守同一条规则，而不是互相对抗，会发生什么？于是，我设计了 <strong>Duckie Timer</strong>——一个通过<strong>可视化时间</strong>帮助孩子理解时间、主动完成任务的小工具。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/06/5b2e337ade6e3c544280c227f37a5387.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><hr /><h2>孩子为什么难以理解时间</h2><p>“还有 2 分钟”对孩子来说几乎没有概念。口头提醒往往短暂有效，但频繁催促只会增加摩擦。</p><p>我们希望解决的，是如何把 <strong>抽象时间具象化</strong>。DuckieTimer 的核心理念是 <strong>认知卸载（Cognitive Offloading）</strong>：把时间从脑子里转移到视觉上。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/c04a0694fbdfeeb406e40b46b850fef8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>圆形进度圈直观展示剩余时间，遮罩层随着时间慢慢覆盖，孩子一眼就能看到任务完成进度。</figcaption></figure><p>倒计时不再是父母的声音，而是可视化的“规则”，孩子和家长都遵守同一条线</p><p>时间从“争吵源”变成“中立裁判”，孩子慢慢理解：“只要跟着圈走，就能完成任务”。</p><hr /><h2>小鸭子和奖励机制：趣味提升自律</h2><p>单纯的进度圈可能显得冷冰冰，于是我们加入了 <strong>小鸭子和奖励机制</strong>：</p><p>完成任务时出现可爱的鸭子贴纸和“嘎嘎”声</p><p>孩子刷牙、收玩具时获得视觉和听觉反馈</p><p>小小的游戏化元素，让日常任务轻松可感知</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/549ff4aceceb212e2245fa74c34e51c4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这些设计不仅增加趣味，也让孩子主动配合，减少原本的对抗感。</p><hr /><h2>功能与特色如何结合场景</h2><p>在开发过程中，我们把功能紧密结合孩子的日常：</p><ul><li><strong>圆形可视化进度</strong>：直观展示剩余时间，减少家长口头催促</li><li><strong>自定义任务</strong>：刷牙、收玩具、穿衣服等，贴合日常</li><li><strong>儿童模式</strong>：简洁界面、大按钮，避免误触</li><li><strong>桌面小组件</strong>：一键启动任务，减少操作摩擦</li><li><strong>奖励机制</strong>：小鸭贴纸 + “嘎嘎”声，让完成任务更有成就感</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/fcae12b70ae4f66f100c4cabd37e0588.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>从屏幕小组件启动任务</figcaption></figure><p>另外，DuckieTimer 的 <strong>特色优势</strong>：</p><ul><li><strong>无需网络</strong>：随时随地离线可用，不依赖互联网</li><li><strong>安全可靠</strong>：符合美国 COPPA 和欧洲 GDPR 的儿童守则，无广告</li><li><strong>比物理计时器或传统闹钟更灵活</strong>：可自定义任务和时间，借助小鸭子吸引儿童注意力</li><li><strong>适合不同人群</strong>：不仅适合家长和孩子，还能帮助 <strong>ADHD 孩子</strong>更好地理解和管理时间，也适合 <strong>幼教老师、儿童咨询师</strong>在课堂或辅导中使用。</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/c4bc1729505f70933e5b29452479b26b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>开启儿童模式</figcaption></figure><p>这些设计让 DuckieTimer 不只是计时器，而是 <strong>可视化 + 趣味 + 安全 + 灵活</strong> 的儿童时间伙伴。</p><hr /><h2>实际体验</h2><p>在家里测试后，我发现效果很明显：</p><ul><li>小月龄孩子也能理解时间</li><li>完成任务后收集小鸭贴纸，很开心</li><li>家长无需不停催促，亲子关系轻松多了</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/06/628122a83538d345d21bc231556cc8f9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>时间不再是争执源头，而是共同遵守的“游戏规则”。孩子慢慢学会理解和管理时间，我也能少一些焦虑。</p><hr /><h2>小结</h2><p>DuckieTimer 是一个 <strong>视觉化、趣味、安全的时间伙伴</strong>：</p><ul><li>帮助孩子理解抽象的时间概念</li><li>将亲子对抗转变为共同遵守规则</li><li>小鸭子和贴纸增加积极反馈</li><li>无需网络，随时可用；</li><li>安全守护儿童；</li><li>可自定义、吸引儿童</li></ul><p>对家长来说，它减少催促焦虑；对孩子来说，它让日常习惯直观、可玩、充满成就感。</p><p>如果你也在经历“每天催促孩子完成任务”的拉锯战，不妨让时间成为 <strong>中立裁判</strong>，用可视化和趣味化的方式，让孩子自己掌握节奏。</p><p>你家孩子会喜欢这种“小鸭子计时方式”吗？欢迎在评论区分享你的故事！</p><span class="ss-application">&nbsp;</span><p>&nbsp;</p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102507</id>
            <title>Chatbase + Rag：快速打造你的知识库问答机器人</title>
            <link>https://sspai.com/post/102507</link>
            <guid isPermaLink="false">https://sspai.com/post/102507</guid>
            <pubDate></pubDate>
            <updated>Sun, 14 Sep 2025 03:39:14 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p style="margin-left: 0px;">ChatBase + RAG，简单的理解为：把网站的文章当作一个知识库，接入一个大语言模型（LLM），通过RAG（Retrieval-Augmented Generation，检索增强生成） 的方式，让机器人能够基于你提供的内容来回答问题。</p><p style="margin-left: 0px;">也可以理解成生成一个网站的专属问答AI客服：</p><figure class="image ss-img-wrapper image_resized" style="width: 437px;"><img src="https://cdnfile.sspai.com/2025/09/14/0edcfc88d8c1a760a5662394853fddb2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">可以作为FAQ智能客服、网站嵌入助手、内部知识库查询使用。</p><p style="margin-left: 0px;">Chatbase + RAG可以提供更精准的回答，减轻用户在大量网站数据中检索的负担。</p><h3 style="margin-left: 0px;"><strong>注册并创建Chatbase</strong></h3><p style="margin-left: 0px;">登录Chatbase官网：<a href="https://www.chatbase.co/"><u>https://www.chatbase.co/</u></a></p><p style="margin-left: 0px;">注册并登录账号，点击“Build your agent”按钮。</p><figure class="image ss-img-wrapper image_resized" style="width: 438px;"><img src="https://cdnfile.sspai.com/2025/09/14/862d4714abc08d998cb7683902744537.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">需要注意的是，不要使用Chrome浏览器的翻译功能，否则Chatbase在使用的过程中会返回500。</p><figure class="image ss-img-wrapper image_resized" style="width: 335px;"><img src="https://cdnfile.sspai.com/2025/09/14/e75f8e4dc1b89e4696ac25270864e078.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">在创建Chatbase Agent时，如果是网站类型，选择“Website”并输入网站链接；如果是文件或文本等类型，则选择对应的Files或Text。</p><p style="margin-left: 0px;">因为我这里设置个人博客的问答机器人，选择“Website”并输入URL后，点击“Fetch links”捕捉网站的链接和资源。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/38d6b6c8cc2be0c0ec6a8b6f3a46c717.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">捕捉完成之后，点击右侧的“Create agent“，创建Chatbase Agent。</p><figure class="image ss-img-wrapper image_resized" style="width: 328px;"><img src="https://cdnfile.sspai.com/2025/09/14/02088eccfbe08b768141ad3801cafd50.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3 style="margin-left: 0px;"><strong>管理Chatbase Agent</strong></h3><p style="margin-left: 0px;">创建完成后，显示Chatbase Agent的管理界面。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/e0825cb42b08cfc800f25b2d8e71dc77.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">可以选择“Model”配置AI的类型，例如GPT-4o Mini，如果涉及开发技术等领域，推荐使用<strong>Claude 3 Haiku</strong>，在技术方面要领先于ChatGPT。</p><p style="margin-left: 0px;">左侧的Activity – Chat logs，可以查看和Chatbase Agent的对话框，后期的对话内容都会保留在这里。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/9910a6464df701abbd54fe80707ce715.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3 style="margin-left: 0px;"><strong>部署Chatbase Agent</strong></h3><p style="margin-left: 0px;">在左侧点击Deploy，可以看到Chat widget（聊天小组件），Chat widget可以添加到网站并支持iframe，点击“Setup”按钮进行部署。</p><figure class="image ss-img-wrapper image_resized" style="width: 462px;"><img src="https://cdnfile.sspai.com/2025/09/14/78a8459c7251cd126493a76cc51e1fea.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">在Chat widget配置界面，可以配置Chatbase Agent的名称和欢迎语。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/a0c43328d0c163686e01526c49ff5e6f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">在“Style”（风格）标签页中配置Chatbase Agent的头像和默认图标。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/4f31b9588dba33339a62fb904d8fc05c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">在“Embed”（嵌入）标签页中，可以选择Chat widget（聊天小组件），将Widget Setup（设置）中的&lt;script&gt;…&lt;/script&gt;代码复制到网站中。</p><figure class="image ss-img-wrapper image_resized" style="width: 399px;"><img src="https://cdnfile.sspai.com/2025/09/14/7e1c0d52af5a9295094496df06aef1c4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3 style="margin-left: 0px;"><strong>WordPress配置Chatbase Agent</strong></h3><p style="margin-left: 0px;">如果是WordPress部署的网站，可以在WordPress的管理后台 → 外观 → 主题文件编辑器。</p><h4 style="margin-left: 0px;"><strong>1、直接修改footer.php</strong></h4><p style="margin-left: 0px;">找到header.php或footer.php：</p><p style="margin-left: 0px;">如果希望脚本早点加载，可以放到&lt;/head&gt;前；</p><p style="margin-left: 0px;">如果希望脚本最后加载，可以放到&lt;/body&gt;前。</p><p style="margin-left: 0px;">例如，在footer.php代码中，先找到&lt;?php wp_footer(); ?&gt;这一行。</p><p style="margin-left: 0px;">WordPress 的惯例是：所有额外脚本最好放在它之前。</p><pre class="language-javascript"><code>&lt;!-- 额外脚本 --&gt;
&lt;script&gt;
  console.log("Chatbase配置代码");
&lt;/script&gt;

&lt;?php wp_footer(); ?&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre><p style="margin-left: 0px;">保存后刷新，网站底部就会挂出Chatbase的浮动聊天按钮。</p><h4 style="margin-left: 0px;"><strong>2、用functions.php挂载脚本（推荐）</strong></h4><p style="margin-left: 0px;">推荐在主题或子主题的functions.php里加：</p><pre class="language-javascript"><code>function add_chatbase_script() {
    ?&gt;
    &lt;script&gt;
    (function(){
        if(!window.chatbase||window.chatbase("getState")!=="initialized"){
            window.chatbase=(...arguments)=&gt;{
                if(!window.chatbase.q){window.chatbase.q=[]}
                window.chatbase.q.push(arguments)
            };
            window.chatbase=new Proxy(window.chatbase,{
                get(target,prop){
                    if(prop==="q"){return target.q}
                    return(...args)=&gt;target(prop,...args)
                }
            })
        }
        const onLoad=function(){
            const script=document.createElement("script");
            script.src="https://www.chatbase.co/embed.min.js";
            script.id="********"; // 你的 Chatbase bot ID
            script.domain="www.chatbase.co";
            document.body.appendChild(script)
        };
        if(document.readyState==="complete"){onLoad()}
        else{window.addEventListener("load",onLoad)}
    })();
    &lt;/script&gt;
    &lt;?php
}
add_action('wp_footer', 'add_chatbase_script');
</code></pre><p style="margin-left: 0px;">这样WordPress会删除&lt;?php wp_footer(); ?&gt; 时自动插入 Chatbase 脚本，逻辑上和方法 1 一样，但更优雅、更安全。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/97dcc45601d806b9233fc78cd8f8f5c3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3 style="margin-left: 0px;"><strong>总结</strong></h3><p style="margin-left: 0px;">Chatbase可以实现个人博客网站的知识库问答机器人，帮助使用者更快的搜索内容。</p><p style="margin-left: 0px;">需要注意的是，免费版本的Chatbase Agent不会自动捕获网站更新的数据，只保留初次创建捕获时的数据。</p><p style="margin-left: 0px;">每次需要更新Chatbase Agent数据库时，都需要在Sources – Website中，重新抓取网站数据，重新培训Chatbase Agent代理。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/14/d9384b68daac6866496a464d8231eb68.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">否则，Chatbase数据库可能只保留创建时抓取的网站数据。</p><h3 style="margin-left: 0px;"><strong>相关文章</strong></h3><p style="margin-left: 0px;">1、RAG知识库、AI代理和远程大模型：<a href="https://fangjunyu.com/2025/09/13/rag%e7%9f%a5%e8%af%86%e5%ba%93%e3%80%81ai%e4%bb%a3%e7%90%86%e5%92%8c%e8%bf%9c%e7%a8%8b%e5%a4%a7%e6%a8%a1%e5%9e%8b/"><u>https://fangjunyu.com/2025/09/13/rag%e7%9f%a5%e8%af%86%e5%ba%93%e3%80%81ai%e4%bb%a3%e7%90%86%e5%92%8c%e8%bf%9c%e7%a8%8b%e5%a4%a7%e6%a8%a1%e5%9e%8b/</u></a></p><p style="margin-left: 0px;">2、Chatbase：<a href="https://www.chatbase.co/"><u>https://www.chatbase.co/</u></a></p><p style="margin-left: 0px;">3、Chatbase privacy：<a href="https://www.chatbase.co/legal/privacy"><u>https://www.chatbase.co/legal/privacy</u></a></p><h3 style="margin-left: 0px;"><strong>扩展知识</strong></h3><h4 style="margin-left: 0px;"><strong>嵌入脚本的安全隐患</strong></h4><p style="margin-left: 0px;"><strong>1、嵌入脚本的工作原理</strong></p><p style="margin-left: 0px;">本质上就是：</p><p style="margin-left: 0px;">在网站上插入一段 JS；</p><p style="margin-left: 0px;">这段 JS 会动态创建一个 &lt;script src=”https://www.chatbase.co/embed.min.js”&gt; 标签；</p><p style="margin-left: 0px;">浏览器加载这个 外部脚本，执行它；</p><p style="margin-left: 0px;">外部脚本负责在页面上渲染一个聊天窗口（浮动按钮、对话框），并与 Chatbase 的服务器通信。</p><p style="margin-left: 0px;">因此，Chatbase 并不会直接“读取”网站的数据库。它能看到的是客户端浏览器里的内容和上下文，主要包括：</p><p style="margin-left: 0px;">用户的网页 DOM（即页面上已经渲染的 HTML 内容）；</p><p style="margin-left: 0px;">用户的浏览器信息（IP、User Agent、设备信息）；</p><p style="margin-left: 0px;">用户和 Chatbase 聊天窗口中的对话内容。</p><p style="margin-left: 0px;">如果个人网站里有公开的文本内容（比如文章正文），理论上 Chatbase 的脚本是可以读取到的，因为它运行在页面环境里，能访问 DOM。但它不能直接访问WordPress 后台数据库，也不会有管理员权限。</p><p style="margin-left: 0px;"><strong>2、潜在的安全隐患</strong></p><p style="margin-left: 0px;">嵌入第三方脚本时要注意：</p><p style="margin-left: 0px;">信任问题：等于把浏览器的一部分控制权交给了 Chatbase。它理论上可以读取页面上的数据、设置 cookie、上报访问情况。这和嵌 Google Analytics、Disqus 评论系统、Facebook Pixel 的性质类似。</p><p style="margin-left: 0px;">隐私问题：用户和 Chatbase 聊天时的数据会被发送到 Chatbase 服务器。是否合规取决于 Chatbase 的隐私政策（比如 GDPR、CCPA 等）。</p><p style="margin-left: 0px;">数据泄露风险：如果网站里有敏感数据（例如只对登录用户可见的信息），Chatbase 脚本也能读到，除非做了严格的前端隔离。</p><p style="margin-left: 0px;">依赖风险：如果 https://www.chatbase.co/embed.min.js 被黑客篡改，攻击者可能利用它向个人网站访客植入恶意代码。和所有第三方 CDN/脚本依赖一样，这是常见风险。</p><p style="margin-left: 0px;"><strong>3、如何降低风险</strong></p><p style="margin-left: 0px;">如果决定用这种嵌入：</p><p style="margin-left: 0px;">1）只加载在需要的页面，不要全站都加载。</p><p style="margin-left: 0px;">2）避免前端暴露敏感信息（如 API Key、用户隐私字段），因为脚本能读 DOM。</p><p style="margin-left: 0px;">3）开启 CSP（Content Security Policy），只允许可信来源执行脚本。</p><p style="margin-left: 0px;">4）定期检查 <a href="https://www.chatbase.co/legal/privacy"><u>Chatbase 的隐私条款</u></a>，确保符合网站访客的隐私要求。</p><p style="margin-left: 0px;">5）如果非常在意隐私，可以考虑自己搭建类似的聊天机器人，而不是依赖 SaaS。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102468</id>
            <title>「任天堂物语」09 枯萎技术开花结果，横井军平再次封神</title>
            <link>https://sspai.com/post/102468</link>
            <guid isPermaLink="false">https://sspai.com/post/102468</guid>
            <pubDate></pubDate>
            <updated>Fri, 12 Sep 2025 08:25:53 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p style="margin-left: 0px;">上回讲到老任致敬奥德赛，推出自家的电视游戏机Color TV-Game。用了有点狡猾的营销手段，将Color TV-Game拆成2款来卖。Color TV-Game 6只有6款游戏，卖9800日元，Color TV-Game 15有15款游戏，卖1.5万日元。说实话，要不是钱包不给力的玩家，看到这个字面参数对比都会觉得15比较有性价比吧。总共卖出200万台，在当时的日本家用机市场也算是不错的成绩。</p><p style="margin-left: 0px;">扛起Color TV-Game大旗的是上村雅之，任天堂现在有3英杰（横井军平、上村雅之、竹田玄洋，宫本茂还没觉醒），另外两个在干嘛呢？接下来舞台让给横井军平。</p><p><strong>来自新干线的灵感</strong></p><p style="margin-left: 0px;">如果说Color TV-Game是跟着大环境走，那接下来的Game&amp;Watch就是跟着新干线来到这世界的。</p><p style="margin-left: 0px;">有一次横井军平乘坐新干线出差，那个年代没有智能手机，坐公共交通期间能消磨时间的东西不多。在横井军平打算认真发呆的时候，突然听到附近有密集的噼里啪啦的声音。认真找找声音的来源，发现是对面的乘客在按计算器。横井军平头上突然出现了灯泡，街机占领了游戏厅，Color TV-Game占领了客厅，新干线被计算器占领好像不太合适，是不是可以搞台能拿在手上玩的游戏机出来对抗坐车时的空虚呢？这个想法一直被他带进办公室。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/b2910c717b03af09da0d1aa0a623f15f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">有一天横井军平在办公室整理掌机方案，突然有同事敲了下办公室门。说山内溥的司机今天生病了，无法开车。能不能载山内溥去市中心参加一场会议。</p><p style="margin-left: 0px;">好家伙，我堂堂第一分队队长，不能叫其他人开吗？山内溥？哦，老板，行行行！</p><p style="margin-left: 0px;">为什么其他人不能帮忙开车呢？因为山内溥当时的座驾是一辆进口的凯迪拉克，左舵的，公司里除了山内溥的司机就只有横井军平会开了。</p><p style="margin-left: 0px;">坐车都是无聊的，山内溥自然不能像其他人那样按计算器。横井军平自然也不能让老板无聊，跟山内溥聊了聊他的新想法：“我们现在已经进入街机和家用机市场，这两个战场竞争激烈，想要突围就得多花心思，难度不小。我想，有没有可能我们开发一个新的战场，一个玩家不多但蛋糕极大的市场，掌上游戏机。像我们这种坐公共交通上下班的人，上下班期间极其无聊，如果有一台足够便携、随时随地都能玩一会的游戏机多好呀”。</p><p style="margin-left: 0px;">山内溥没出声，横井军平以为老板对这没多大兴趣，也就没再提了。可他不知道的是山内溥把他的话完完全全听进去了，在认真思考掌机的可行性。</p><p style="margin-left: 0px;">掌机市场现在还是一片蓝海，虽然这几年有公司推出过掌机，比如美泰（做芭比的那家公司）在1976年推出了世界第一台掌机 Auto Race，售价高达24.99美元，但销量远超预期。不过也没有做到街机和家用机那么恐怖的销量。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/96ba6b2ec9321f43854ad506d045a05c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">商业圣体已经觉醒的山内溥敏锐的察觉到，掌机也许能跟街机和家用机分庭抗礼。前面已经有公司开了个头，除了美泰之外，还有几家公司都推出过掌机。这些掌机虽然卖得也还行，但总感觉在游戏性上缺了点火候，而且卖得也很贵。如果能做出一款又好玩又便宜的掌机🤔</p><p><strong>和夏普联手做大做强</strong></p><p style="margin-left: 0px;">横井军平开车送山内溥去开会，刚好夏普的社长佐伯旭也参加了那场会议。会后山内溥立刻找佐伯旭聊起了横井军平的想法。</p><p style="margin-left: 0px;">一周后，山内溥叫横井军平来办公室聊聊，办公室里还坐着一位夏普的高管。</p><p style="margin-left: 0px;">山内溥：“你上次说想做一款可以随身携带的掌上游戏机，夏普是这方面的专家，你们聊聊”。</p><p style="margin-left: 0px;">横井军平跟夏普高管聊了一下具体想法，夏普高管听完内心狂喜，这家伙能帮我们清库存啊～</p><p style="margin-left: 0px;">60年代出现了电子计算器，当时做电子计算器有“四大家族”，卡西欧、夏普、惠普、德州仪器。到了70年代卡西欧和夏普打得最凶。1973年夏普推出了全球首款使用CMOS-LSI的计算器——SHARP EL-805。简单来说就是全球第一台手持式液晶显示计算器，显示器用的是液晶显示屏(LCD)的电路是玻璃。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/5027233c532ddde13a3ea0a991016bb1.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">由于跟卡西欧打得太猛，导致生产了过多的半导体和液晶显示器，库存压力极大。现在任天堂主动找上门帮忙消化这些库存，那可比当废铁卖掉好太多了。对于任天堂来说能拿到价格低廉的零件，夏普又能“变废为宝”，双赢！当时一心想赚钱的任天堂和急于清库存的夏普并不知道，他们这次合作即将改变世界。</p><p style="margin-left: 0px;">横井军平带着得力助手冈田智（下图左边那位）一起研究如何实现这台掌机。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/9755244ae58ed91dfa22b05356d7f995.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">研发的过程挺有趣的。横井军平和冈田智首先将自己对游戏的想法在模板上雕刻出来，那块模板就模拟屏幕，图案则为发光区，他们把发光部分挖空，然后在模板后面装上灯，灯一亮看上去就有点像屏幕局部区域发光了。最后把这些灯接到控制器上，控制器连接电脑，就能用电脑控制每一盏灯什么时候亮什么时候关。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/8dad4f8b0445270567faa36f8dd78265.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">这种做法看似简陋，但在当时确是实现最小可行demo的最快方法。他们设计的第一款游戏叫《Ball》，一个抛球游戏。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/c04cafaea73e751036f26686cf00cbda.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">画面里有一个小人，玩家需要看准时机按左右两边的按键接球。其实Game&amp;Watch的技术非常简单，玩过计算器的朋友都知道计算器屏幕能显示的内容是有限的，简单来说就是提前写死了一些内容在屏幕里，要显示什么内容就通过背后的“电脑”控制。Game&amp;Watch也用了同样的工作原理，提前写死了一些图案在LCD屏幕上，通过程序让固定图形闪烁从而营造出图形在移动的错觉。</p><p style="margin-left: 0px;">有山内溥的大力支持，加上夏普的积极主动，横井军平的工作相当顺利。一款名为Game&amp;Watch的掌上游戏机很快就在日本流行起来。</p><p><strong>枯萎技术落地开花，Game&amp;Watch百花齐放</strong></p><p style="margin-left: 0px;">1980年4月28日，引爆掌机市场的游戏机横空出世——Game&amp;Watch。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/529ac5bbdde526e2d8d71bdc4be9c472.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">第一款Game&amp;Watch叫《Ball》，中文名叫《抛接球》，型号AC-01。屏幕的展示效果和我们今天看到的计算器屏幕差不多。游戏是跟游戏机绑定的。机身正面有几个按键，左右两个红色按键用来控制小人作用移动，屏幕下方的“GAME A”和“GAME B”是两种不同的游戏难度。按下“TIME”键可以展示时间。</p><p style="margin-left: 0px;">后来为了纪念第一款Game&amp;Watch，老任改改包装当礼品兑换。下图右边那个是任天堂俱乐部兑换的礼品。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/8a5e0f60f819535b7aa7d7c0f5eed00d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">别小看这种简单游戏，即使放在今天也有点上头。</p><p style="margin-left: 0px;">我在网上找到有人用网页复刻了这款游戏，有兴趣的朋友可以打开玩玩👉 <a href="https://itizso.itch.io/nintendo-ball">https://itizso.itch.io/nintendo-ball</a></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/8842a60466bf81fd3f689a191f93dfd9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">这款Game&amp;Watch售价5800日元，售价是当时阉割版的Color TV-Game 6的一半多一点，虽然只有1款游戏，但胜在便携，随时随地都能玩。一出道就巅峰，一亮相就炸场！据说第一款就卖出300万套。山内溥见状，必须乘胜追击啊。要求横井军平加码，搞多几款游戏出来。</p><p style="margin-left: 0px;">在《Ball》发行不到2个月，第二款Game&amp;Watch出来了。同年6月5日，任天堂推出《FLAGMAN》，中文名叫《打旗语》，售价同样是5800日元。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/57309ccc66f70bf0695881f982c8a2f0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">外形上与第一代略有不同，边框变成橙色，按键也因游戏玩法增加了2枚。A玩法是按照小人给出的数字点击对应的数字键；B玩法是看到屏幕左侧展示的数字点击对应的数字按键，从而控制小人举起对应的数字旗帜。</p><p style="margin-left: 0px;">网页复刻版👉 <a href="https://itizso.itch.io/nintendo-flagman">https://itizso.itch.io/nintendo-flagman</a></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/7cee2091bf4815f87feac0c8642703c2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">但这款游戏机的核心玩法并不是那么有趣，当时人气并不高。</p><p style="margin-left: 0px;">不过问题也不大，横井军平可是动手能力极强的小天才，同年又陆续推出了好几款Game&amp;Watch。</p><p style="margin-left: 0px;">1980年7月10日推出的《VERMIN》，售价5800日元。游戏玩法就是打地鼠。长下图这个样子。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/bcb3c9896e25218812b3131ac7e1a0a3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">1980年7月31日推出了《FIRE》，同样是5800元。游戏玩法是避难者从火灾大楼跳下来，玩家要掌握好时机在楼下接住避难者。这款掌机也卖得不错，一共卖出90万台。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/dfda4956bf6ad9ec742d2b164615d621.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">1980年10月4日推出《JUDGE》，同样卖5800日元，但这款是首款可以双人对战的Game&amp;Watch。根据屏幕展示的2组数字的大小决定是使用攻击还是防御，有趣性非常大。当然也可以单人游玩，单人游玩的情况下就是和电脑对战了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/2bbf713f5969b65c16881abbe4bdacda.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">这款掌机有2种配色，前期是绿色，后期改成紫色。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/788a1e36a55bed1a166b0117ba89951c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">刚出半年就带出5款游戏机，横井军平的创作力堪称恐怖。</p><p style="margin-left: 0px;">其他厂商看到Game&amp;Watch卖得这么火也纷纷效仿，市面冒出很多“山寨款”。不过问题不大，横井军平有点是手段和力气。不对，是创新的智慧。1980年推出的5款是银色系（Silver），面板是银色的。1981年加大力度推出了金色系列（Gold）和宽屏系列（Wide Screen）。</p><p style="margin-left: 0px;">金色系列将显示器换成彩色液晶，机身后面还新增了支架。机能也有所升级。在游戏功能上还增加了积分值，可以用积分抵消失误的机制。</p><p style="margin-left: 0px;">在1981年一共出了3款。其中卖得最好的这款是《MANHOLE》，中文叫《人孔》，大概就是沙井盖的意思。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/69de3677b9574ca63191ef72ffd9e4f4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">这款游戏在当时挺有意思的。玩家需要通过按钮控制哪个地方要填补山井盖，避免在路上行走的人掉下去。随着得分升高，行人的数量也会越多，行走速度也更快。达到一定积分可以“奖命”，用来抵消失误操作。这款金色销冠火到什么程度？据说当时连程序出现BUG也能上热搜。</p><p style="margin-left: 0px;">除了《MANHOLE》外，金色系列还有《HELMET》（安全帽）和《LION》（狮子）。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/8007833988aed2ee2c48c371547daa68.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">金色系列除了游戏功能外，还增加了角色报时功能。2025年发售的Alarmo难道是致敬了祖先🤔？</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/2edd3271dd06622dce9528135a01f22b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">上图是Alarmo。</p><p style="margin-left: 0px;">Game&amp;Watch设计初衷是给上班族打发时间的。没想到，相比起成年人，小孩子更喜欢Game&amp;Watch。为了满足小孩需求，设计出宽屏系列，同时还谈下了大力水手、米老鼠和史路比的版权。从1981年到1982年宽屏系列陆续出了十款掌机。</p><p style="margin-left: 0px;">下图是《POPEYE》，中文叫《大力水手》，1981年推出，售价6000日元。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/9b25e7c540da0fc4f5081bdef8add092.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">下图是米老鼠款《MICKEY MOUSE》，1981年发售，售价也是6000日元。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/d5f965dcdd0f59e6766b2e2f84261a75.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">下图是史努比款《SNOOPY TENNIS》，1982年发售，6000日元。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/1daadfddb0d7940a402e76cec81a5a1b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">其他宽屏系列的掌机我就不罗列了，有兴趣的朋友可以去维基百科看看：<a href="https://zh.wikipedia.org/wiki/Game_%26_Watch">https://zh.wikipedia.org/wiki/Game_%26_Watch</a></p><p style="margin-left: 0px;">Game&amp;Watch除了让横井军平再次封神之外（上一次封神作是“超级怪手”），还有一个设计也让横井军平做了一次爸爸，那就是十字键。</p><p style="margin-left: 0px;">1982年Game&amp;Watch推出了双屏版，，把当时街机神作《森喜刚》（也有叫《大金刚》）移植到Game&amp;Watch上。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/5ed25b1f923b8402d3a72d29c12c4080.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">虽然相比起街机在游戏性上做了很多减法，但架不住这个IP在当时实在是太火了，1982年6月3日发售，售价6000日元。光在日本就卖出了120万台，全球估算700至800万台。</p><p style="margin-left: 0px;">仔细看看这台机左下角的按键，就是横井军平设计出来的十字键。当时街机用的是摇杆，可摇杆放不进可折叠的双屏设备里。有什么办法可以代替摇杆的同时又能让用户操作得顺手一点呢？就是十字键。</p><p style="margin-left: 0px;">因此横井军平也被称为十字键之父。任天堂也很聪明，立刻给这个设计注册了专利，这一专利到2005年才过期。在这期间友商的产品都不敢随便出现十字键，为了规避老任的专利，大家都设计成圆形按键。</p><p style="margin-left: 0px;">我手上的这把Xbox手柄也是这种圆形的设计。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/799b057be1270ae95eea6f5377f6f8fb.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">双屏版Game&amp;Watch推出过多款游戏，这个设计也是一代经典了。</p><p style="margin-left: 0px;">后面还陆续推出过新宽屏系列、彩屏桌面系列、全景屏系列、超彩系列，以及微型 VS. 系统，但销量一般般。</p><p style="margin-left: 0px;">其中彩屏桌面系列我觉得挺好看的，放在家里也是一件不错的摆件。这系列当时的售价是7800日元，在Game&amp;Watch里是最贵的一作。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/43b4a5edf2d92bb29c7419351c4dcfac.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">微型 VS. 系统是日本国内最后的Game&amp;Watch机型，长这样子。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/92ccd31746e20e5703100a7befccf46a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">可收纳的控制器，带支架的机身，可以双人对战，这些都是很有创意的设计。而且售价才6000日元。</p><p style="margin-left: 0px;">Game&amp;Watch发展期间，家用机和街机也在同时发展，在《任天堂物语》接下来的故事会陆续讲到。</p><p><strong>枯萎技术的水平思考</strong></p><p style="margin-left: 0px;">Game&amp;Watch虽然在体积和售价上都比不上家用机，更比不上街机。但别小看这小东西，在它的生命周期里一共推出了41款不同的游戏，在日本销量高达1287万台，全球累计4340万台。这销量放在今天的主机排行里算不上名列前茅，但对于当时的任天堂来说确实非常重要。</p><p style="margin-left: 0px;">之前山内溥花式作死，涉足过食品行业、出租车、情趣酒店，搞光枪射击场却碰上石油危机，欠下一屁股债，差点连内裤都赔出去了。</p><p style="margin-left: 0px;">Game&amp;Watch力挽狂澜，除了帮任天堂还清70亿日元的负债，还给公司储备出近40亿日元。</p><p style="margin-left: 0px;">Game&amp;Watch的影响力还不止于此，当时和夏普在计算器领域打得不可开交的卡西欧都被任天堂带偏了。卡西欧也搞起了掌机，可惜这家公司对游戏并没有太强的天赋，卡西欧的游戏机销量并不好。</p><p style="margin-left: 0px;">横井军平设计的Game&amp;Watch让老任起死回生，给他封个神一点都不过分。翻开横井军平的日记可以看到，要不是那天我坐了新干线，要不是那天我发现有人在玩计算器，要不是那天司机病了，要不是我会开左舵车，要不是我多提一嘴，要不是社长那天见到夏普社长，要不是夏普和卡西欧打得你死我活，要不是……</p><p style="margin-left: 0px;">世界就是这么神奇，当多个“要不是”组合在一起的时候，奇迹就发生了～</p><p style="margin-left: 0px;">回看Game&amp;Watch这款掌机，全身上下都散发着横井军平的“枯萎技术的水平思考”。</p><p style="margin-left: 0px;">所谓“枯萎技术”，指的就是那些已经不算新、也没什么高大上光环的旧技术。就像是被放在角落里的“二手零件”或者“退潮后的沙滩小螃蟹”，看起来没什么用，也没人想争着用。</p><p style="margin-left: 0px;">而“水平思考”就是说，别总想着技术往高处走（比如更快的芯片、更强的显卡），而是横着看看，把这些“旧家伙”换个思路用在别的地方。</p><p style="margin-left: 0px;">横井军平要是生在我们这个年代应该有个特别的称号吧，垃圾佬！</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/6950d736fc21eb305ecd40ec07a0096d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">在Game&amp;Watch出现后，枯萎技术的水平思更是一直贯穿着任天堂之后的大部分产品。当然也有人会吐槽，这成了老任在今天仍在坚持生产“落后设备”的理由。想想Switch2发布的前两年，网上一直流传着“初代Switch连华强北都找不到如此落后的零件”的梗。</p><p style="margin-left: 0px;">不过任天堂这家公司非常复杂，我觉得不能用单一维度去评判它的产品。枯萎技术的水平思考在很大程度上对任天堂发挥着真香作用，当然也出现过过度依赖该理论而扑街的情况，这是后话了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/12/926d1f1dbef4b58858c7c30fd17cbb36.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">任天堂的掌机之路是横井军平走出来的，接下来能打败Game&amp;Watch的掌机还是横井军平设计出来，当然这也是后话～</p><hr /><p style="margin-left: 0px;">以上就是本文的全部内容了，想知道任天堂后续的发展，欢迎关注👉<a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA5MDc1ODI2NA==&amp;action=getalbum&amp;album_id=3974696752371646468&amp;scene=21#wechat_redirect">《任天堂物语》</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102377</id>
            <title>AI学习模式：让ChatGPT当导师，究竟是「邪修」破局还是暗藏陷阱？</title>
            <link>https://sspai.com/post/102377</link>
            <guid isPermaLink="false">https://sspai.com/post/102377</guid>
            <pubDate></pubDate>
            <updated>Fri, 12 Sep 2025 06:09:24 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <blockquote><ol><li>没有条件的自学者很适合引入 AI 作为交流替代品；AI 的加入会使得曾经的崎岖蜀道变为坦途，为我们每个人都带来更多的可能性；</li><li>仍然要保持一定传统的学习方式以及阅读专著的习惯，不要把学习全权托付给 AI；AI study 绝不是一条邪修捷径；</li><li>AI study 并不能克服一切困难；如果有需要，务必为自己的学习寻求制度性的支持（读一个相关的学位、寻求专业辅导等）。</li></ol></blockquote><p>不知你可否注意到，在一个不起眼的时间点，AI 界三巨头 ChatGPT、Gemini 和 Claude 都推出了自己的「学习模式」。在这个模式下，AI 将不再和之前一样只负责提供问题的答案，而是会尝试通过对话引导你一步一步地分析问题，最终靠自己的力量解决问题。这是 ChatGPT 对学习模式的介绍：</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/08/article/9846445353575be6815441df544a03cf.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>我试用了一下 ChatGPT 的学习模式，发现开启这个模式之后， ChatGPT 确实会把自己放在一个「提问者」的位置来和用户对话。比方说我和它说我想了解一下「社会建构主义」的理论，它没有像百科一样给我铺设一大堆<strong>难以理解的名词</strong>，而是向我提了一个问题：</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/08/article/c88072bd443c06bc76bc9d35b33fc81a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这就是<strong>学习模式</strong>（study mode）。它秉持了苏格拉底著名的「助产术」思路，通过提问而非回答来激发用户的思考。虽然它的实现机制并不复杂，但是这可以称得上是一个小而美的产品创新。</p><p>而且它推出的时间点也颇为巧妙。就在我意识到「通过和 AI 对话来学习」也许可以做出一个好的产品，并且为此建立了一个项目的时候，我发现了三巨头已经推出了这一功能。这一瞬间我体会到了那种作为一个科研人员十分熟悉的无奈感……</p><p>那么话说回来：作为一种有别于我们熟悉的授课教育的学习方式，AI study 到底怎么样？它究竟是拓宽我们认知边界的先行者，还是一种更加温和却也更加窒息的新型信息茧房？</p><p>在这篇文章里，我作为一个大语言模型领域的研究者，将基于一些认知科学和心理学的观点来聊一聊这些问题。</p><h2>第一个问题：我们当下是如何学习的？</h2><p>要讨论 AI 如何介入我们的学习，那首先得关心一个热度并不高的话题：我们目前是如何学习的？</p><p>从我执笔学习话题的这段时间里从评论区收集的反馈来看，相当多的人仍然把学习看作一个「把大象装进冰箱」的过程。每天都有大批的人在抱怨「知识它就是不进脑子」。这个看法其实已经是数百年前流行的观点了，现在让我们来更新一下认知：<strong>知识不是被「塞」进脑子里的，它是被人脑主动建构出来的</strong>。目前并没有任何证据表明人脑里面有像是硬盘一样的存储阵列。比起存储器，我们的大脑更像是 ChatGPT：「记忆」可能只是幻觉，一切内容都是临时「编造」出来的，哪怕是回忆。</p><p>这一理论可以解释为什么丢失一部分脑组织的病人并没有丢失一块记忆，反而是性格发生了改变。</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/08/article/f68cfb68576342fe5d3bcbd238988be9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Phineas Gage是一名爆破工，有一天他被一根飞起的铁棍击穿了头颅，失去了相当多的脑组织（图源自维基百科）</figcaption></figure><p>「建构」体现的是一个如同搭积木一样的、主动的过程。具体来说，<strong>学习本质上是在尝试用已知的概念解释未知事物，解释完毕之后，未知的东西也就被理解了，新的知识就诞生了</strong>。比方说同样是观察到了天上星辰的运动，具有不同认知的人就会做出不同的解释：</p><ol><li>《周易》：中国古人记载了丰富的历史，对个人、国家命运变化的无常有深刻体会，于是将历史发展和星辰运动联系起来，提出一套「天人感应」的理论解释天体运动和吉凶变化；</li><li>牛顿：广泛阅读了前人的材料，在哥白尼日心说、伽利略运动理论以及开普勒对行星运动的研究的基础上，提出「万有引力」解释天体的运动。</li></ol><p>这一观点源自于皮亚杰等人提出的<strong>建构主义</strong>，我曾在<a href="https://sspai.com/post/101574">超越信息收集：从认知科学角度看笔记 - 少数派</a>一文中介绍过。当时我用这个理论解释为什么要记笔记以及为什么我认为网状笔记是一种很好的笔记形式。但是这其实只是建构主义的一半，另一半讨论的是另一个疑问：建构出来的知识，它一定靠谱吗？</p><p>答案显然是否定的。就如上面的例子一样，由于不同的人认知不同，看问题的角度不同，思考的方式也不同，对于同样的未知事物我们会给出五花八门的解释。然而真理却只有一个。所以对于这些存在问题的解释来说，它们终有一天会碰到那个不服从它、反而将其推翻的案例：</p><ol><li>毕达哥拉斯学派坚信宇宙的本质可以用整数和分数表达，直到他们有一天发现了无理数；</li><li>中世纪基督徒曾坚信世间发生的一切都是上帝的意志，直到他们亲眼看到守卫圣地的基督徒被杀、圣城被异教徒占领；</li><li>……</li></ol><p>解释被现实打脸虽然很丢人，但是却增长了我们的见识，让我们得以在旧的知识的废墟上建立一套新的、能够理解更多反例的解释。这就是<strong>认识水平的辩证提升</strong>。就这么一破一立之后，我们的认知向上发展了。我相信每个学习过辩证法的读者都多少听过这样一套说法。只不过黑格尔、马克思等人将之用来解释社会总体认识水平的发展过程，而皮亚杰指出，这一发展过程同样适用于解释个人认识水平的发展。人的学习过程总结起来就是一句话：<strong>知识并非只是信息，而是在个体的认知模型在与环境不断冲突中辩证产生的解释</strong>。</p><p>到此，我们似乎仍然无法回答一开始的问题：AI 如何介入我们的学习。这是因为建构主义的理论仍然有问题，我们需要更加全面的解释来帮助我们思考这一问题。</p><h2>社会建构：不是一个人，而是一群人</h2><p>就像刚才那个例子里一样，建构主义的理论本身也是一种建构出来的解释，它也遇到了那个命中注定要来挑战它的反例：<s>从未谈过恋爱的人，能指导他人的感情问题</s>；学会了乘法运算的小朋友可能从没有亲自去数过数、验证过九九乘法表的结论。也就是说，<strong>人的很多知识并非都是自己建构出来的，而是直接获取了他人的知识</strong>。</p><p>苏联心理学家维果茨基（Lev Vygotsky）提出了对皮亚杰理论的质疑。在提出质疑之后，他又基于皮亚杰的理论建构出了一套新的、解释力更强的认知科学理论：社会建构主义。他认为，皮亚杰的错误在于只考虑人类从和物理环境的交互中获得知识，没有考虑人与人之间还可以通过交流分享彼此的知识。维果茨基指出，知识并非仅仅源于个体认知模型与物理世界的直接碰撞，更源于<strong>个体与社会中「更成熟的他人」（父母、老师、同伴）的互动</strong>。拥有不同背景的人聚集在一起交流的时候，他们彼此的见识被互相分享，他们各自的知识被汇集起来发生冲突然后又重建。最终结果是所有人的认知水平都获得了提升。</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/08/article/e42b4a2e3fca78095930211be772bdc8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><blockquote><p>希望我的评论区也可以是这样一个地方。</p></blockquote><p>正是这一理论，让父母们如此重视言传身教以及为子女创造好的环境；让当代成功学如此强调「向上社交」。此外这也可以解释为什么学术圈如此重视交流：几乎每个实验室都定期召开组会分享各自的见解，全世界每年都要耗费大量资源办成千上万场学术会议。从社会建构的角度可以看出：<strong>和一个人埋头苦干相比，通过交流获得知识的效率简直如同降维打击</strong>。尤其是当互联网普及之后，交流的物理成本似乎低到忽略不计。我们真正迎来了知识大爆发的时代。</p><p>但是……真的就这么简单吗？如果只是这样的话，我们的结论就是「AI 是一个比真人更温和、更理性、更好的交流对象，所以推荐大家都去试试 AI study」，本文将沦为一篇七弯八拐、最后回到原点的废话。而我希望得到更有价值的洞见，因此我们有必要继续深入下去。我们深入下去的突破点就在这里：<strong>为什么你会觉得「AI 是一个比真人更『好』的交流对象」</strong>？</p><p>我们注意到一个问题：我们之前的说法只考虑了交流带来的益处，忽略了交流本身的成本以及可能出现的问题。而要理解人之间的交流的话，<strong>语言</strong>作为交流的主要载体是绕不过去的。</p><h3>语言与符号</h3><p>如果没有一定的社科素养，人会很难理解为什么社科经常揪着语言问题不放。虽然互联网上四处都是因为被外语考试拷打而心怀怨怼的人，虽然能使用多种自然语言仍然是精英气质的象征之一，但是我们必须承认：在近些年翻译 AI 尤其是大语言模型的加持下，自然语言造成交流障碍几乎已经被推倒了。但是<strong>翻译 AI 能破开的是语言符号的藩篱，而真正的障碍是语言符号所表示的思想</strong>。</p><p>我们交流的目的是将自己的思想传递给对方，而由于人脑目前似乎不支持插线直接传播脑电信号，因此我们还是要借助语言符号表示它们，然后将语言符号传递给对方。交流的过程是这样的：</p><ol><li>你发现屋子里有蟑螂，你想告诉你室友；</li><li>于是你将这一想法编码为了某种自然语言，比如「屋子里有蟑螂」，或者「There is a cockroach in our room」，亦或是「🏠🪳」；在这里你用到了「屋子」、「里面」、「蟑螂」、「🪳」等语言符号；</li><li>将编码通过嗓子或者发消息的方式传递给室友；</li><li>室友试图理解这一语言符号背后的含义</li><li>ta 明白了屋子里有蟑螂这一事实。</li></ol><p>我们总以为交流的障碍仅仅发生在 4，于是发明了翻译器来实现语言符号之间的转换。可是现实中，真正的问题往往是：室友从来没见过蟑螂，对蟑螂完全没有概念。任凭你用什么翻译器也无济于事。</p><p>出现这样的问题其根本原因是<strong>你们成长与完全不同的环境，你们之间并没有足够多的「共识」可以帮助你们完成交流</strong>。缺乏与某人交流所必需的那些「共识」不是翻译器能解决的；<strong>要补足这些共识，唯一的方法就是加入同样的环境，去获得对它们的认知</strong>。换句话说，就是亲自去见见那只蟑螂。</p><p>只可惜有许多高门槛的圈子，在这些圈子中说话所需要了解的东西不像蟑螂那样好找：</p><ol><li>你听说人工智能是当前的风口行业，你想学习人工智能，但是你发现他们都在聊着「不收敛」、「CUDA out of memory」、「训练集里面有脏东西」这样的话，没有计算集群可以用的你即使看了解释也难以理解；</li><li>你想学习人文社科，但是你发现他们都在聊着「超验能指」、「符号化」、「惯习」这样的话，没有系统学习过的你即使申请了「中译中」也难以理解；</li><li>再次失败后，你觉得学医也不错，然后你发现医考帮上面的人在说着「提裤子」、「打隧道」、「蛋壳术」、「钓鱼」，你觉得医生的生活真是丰富，只是这些词不论在网上怎么搜都只能搜到常见的意思，你的学医之路失败了；</li><li>经历了多次失败，你黑化了，于是决定加入黑道赚黑钱；有一天你们偷了一家人的东西，老大叫你负责「洗锅」，你很疑惑，但是还是把那家的锅碗瓢盆都洗干净了；然后警察找到了现场的指纹将你们通通抓获；到了审讯室，警察问你要不要「点水」，说能减刑，你愤怒地说你又不是蜻蜓怎么点水；最后你的刑期是所有人里面最重的；</li><li>……</li></ol><p>从这些案例我们可以知道，每个圈子都会有一组用于成员之间交流的「共识」，其中某些只为本圈子所有的共识只能用外人看来叫做「黑话」的符号表达，这使得你即使看到也不能理解，因而无法加入其中交流。而要加入其中的唯一办法就是有一个圈内人充当你的导师，为你解答困惑、提供实践机会。我们可以把一个圈子的共识成为一个「符号系统」，如你所见，符号系统是具有<strong>排外性</strong>的。<strong>如果你没有进入圈子的机会，那么你将被符号系统拒斥，你的认知水平和圈内人相比会越差越大</strong>。这就是为什么在义务教育出现之前，「学徒制」和学术圈的「导师制」是最常见的教育形式。师父在这里意义不仅仅是老师，更是这一邀请制符号系统的「介绍人」。</p><p>如果读到这里，那么恭喜你，现在可以松口气了。了解了这些我们就可以来谈谈 AI 入局究竟意味着什么了。</p><h2>AI 以身入局</h2><p>回到刚才那个问题：为什么你会觉得「AI 是一个比真人更『好』的交流对象」？现在我们可以作出回答了。</p><p>你出狱之后对于自己在人工智能学习路上遇到的障碍耿耿于怀，于是你抓住了一个因为刚上了 12 小时班、注意力涣散而落到你手上的人工智能工程师，逼迫他告诉你到底什么是「不收敛」、「CUDA out of memory」以及「训练集里面有脏东西」。靠这种方法，你获得了一个不太情愿的「介绍人」。此时会发生：</p><ol><li>他试图给你解释什么是「不收敛」，然后他发现解释这个首先需要解释什么是「模型」、「训练」、「损失」，然后解释这些又需要先解释什么是「神经网络」、「前向传播」、「反向传播」、「参数优化」……<strong>他没有那么多耐心和时间</strong>；</li><li>当他聊到「梯度下降可以寻找到好的解」的时候，你问他为什么，然后他也懵了，因为这是他的数学直觉的一部分，理论证明他也忘了，<strong>他没法给你解释</strong>；</li><li>在一通似懂非懂的讲解之后，他说现在你已经学会了，快去训练一个 12B 规模的语言模型出来看看吧！然后你又发现了那个亘古不变的问题：你没有计算集群供你使用，<strong>没有实践机会有些东西就是学不会</strong>；</li><li>你发现了这一无法解决的客观困难，你体谅了一下他，放他走了；他在暗喜<strong>还好没有把真正的核心竞争力教给你，否则这行那么卷，又要多一个竞争对手</strong>。</li></ol><p>如此一对比，AI 以身入局、参与到社群交流中的优势就凸显出来了：</p><ol><li><strong>AI 几乎通晓所有领域</strong>，虽然可能不深入，但它几乎通晓所有圈子使用的符号语言；你不需要去试图绑架某个人来带你入门；</li><li><strong>AI 有无限的耐心</strong>，可以给你解释各种黑话，直到解释到你能理解的程度为止；</li><li><strong>AI 没有自己的利益</strong>，它也许会继承一些偏见，但绝不会出于某种私利的目的阻挠你。</li></ol><p>在这个层面，我们完全可以说<strong>生成式 AI 是继互联网普及之后又一大信息平权的进步</strong>。</p><p>然而只有第 3 点 AI 也帮不了你。考虑到实践机会一直以来都和社会身份、资源高度绑定，是社会高层最垄断的、最重要的宝物。因此 <strong>AI 介入教育可以一定程度上打破圈层的垄断，但是也就仅限于此了</strong>。真正在实践机会上起到反垄断作用的仍然是社会制度（义务教育、高考、高等教育），单一科技进步难以做到这一点。</p><p>AI 介入教育的优点我就说到这里。接下来，我将基于我对人工智能的专业理解来谈谈 AI 介入教育尤其是垄断信息来源后可能会产生的问题。</p><h2>是破局者还是信息茧房？</h2><p>我想我完全不需要去劝大家多和 AI 聊天。如今的 AI 被训练得非常好，它总是对你展现无限的包容和耐心，它渊博的知识让它能够接下你的几乎一切话题，让你感到被理解，帮你解决麻烦；它从不反驳你，从不像人类一样闹情绪，也从不把任何期待压在你头上。这种程度的宠溺哪怕是父母对孩子也难以做到。不难想象 AI 一经推出就广受欢迎，ChatGPT 、DeepSeek 一夜之间成了成千上万人的虚拟恋人、朋友、导师、甚至是心理医生。</p><p>总的来说，我们身处一个相当压抑和孤独的时代。如此程度的宠溺，必然导致有人深陷其中，很难不出问题。典型的问题我觉得可以归纳为两点：</p><ol><li>无条件顺从：习惯于 AI 无条件顺从且毫无压力的交流方式之后，不再能同其他人类正常交流，失去处理和同类的冲突以及挑战难题的能力；</li><li>封闭性：由于 AI 并不主动讲话，只依据你的要求给出回应，将 AI 当做唯一信息来源将会失去获取全新概念、了解全新领域的机会。</li></ol><p>AI 总是无条件顺从用户这一特点不需要我说明，每个人都能体会到。但是这一让用户欲罢不能的特点如今其实已经成了一个问题。无底线的包容以及罔顾事实的赞美会让用户对现实情况产生误判，并且越来越抵触回到真实的人际关系里面。一个很典型的案例是近期一个澳洲女孩自杀的事件：由于 ChatGPT 是比大多数人都要更好的倾听者，她习惯于和 ChatGPT 倾吐负面情绪，这导致她的负面情绪逐渐被 ChatGPT 垄断；最终，她在周围人毫无察觉的情况下结束了自己的生命。</p><figure class="image ss-img-wrapper image_resized" style="width: 660px;"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/08/article/48bc175c0f6965948ab6289f92dfe95a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>图源自纽约时报中文网</figcaption></figure><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/08/article/4c8903f1b212cc91a6cc5d5333d83e46.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>图源自纽约时报中文网的评论</figcaption></figure><p>因此，在介绍 GPT-5 的文章之中，OpenAI 骄傲地宣布 GPT-5 相比前代大大减少了「阿谀奉承」的现象。OpenAI 认为，无底线的顺从虽然可以提升用户满意度，但是会扼杀真正富有思考性的聊天。</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/08/article/f7295000c3b1cc5620d7794f68f4e1a2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>图源自OpenAI官网</figcaption></figure><p>在我看来，造成 AI 如此特点的原因是人们对和谐社会的追求以及对人与人之间冲突的抗拒。在现实中，我们都把「好辩」看作一个缺点，厌恶人与人之间无尽的争斗。这种社会心理深刻影响了互联网上的言论，让 AI 无意识天然倾向于奉承而非求真；而在后续的对齐训练中，人类标注员也更倾向于将包含异见的回复打上「无礼」的标注。这造成了 AI 习惯于阿谀奉承（sycophancy）的特点。</p><p>这样的现实因素不仅影响了从 AI 身上寻求情感支持的用户，也影响了试图通过 AI 来加强学习的用户。<strong>在 AI study 模式中，我们希望 AI 能充当老师的角色来对我们做一定的评判，而这样的特性会使得 AI 肯定我们的动力远远高于否定我们</strong>。这会导致我们的认知产生一定偏差；此外，<strong>由于 AI 在训练的时候被要求「获得用户肯定的反应」，因此它必然倾向于降低内容的深度，以帮助用户更快达到「我学会了！」的状态</strong>。这会导致我们的学习无法深入。</p><p>以我试图让 AI 教会我建构主义理论的聊天为例。ChatGPT 首先向我提问来建立引导：</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/08/article/0b362311a4c7ed28d13be7f5fdb31a8a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><br />这个引导手段很有趣，很适合作为一场深入浅出的教学的开头。于是我回答了它的问题：</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/08/article/3173de5f4e285964e5a5618884dd853c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>ChatGPT 用这个引子引出了社会建构主义的核心观点，然后它又提了一个问题来让我加深理解。现在让我回答一下这个问题：</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/08/article/5c9c5b1db6ffb8d588bbe916fdb5e217.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>ChatGPT 借用这个例子对多种思想流派进行了对比，我们的问答到此就结束了。</p><p>不得不说，ChatGPT 对于教学的把控是非常好的，整个学习流程非常合理，大大降低了学习门槛。更加可贵的是，ChatGPT 完全没有使用任何专业语言来解释概念，而是着手于常见的例子，让没有受过相关的系统教育的让也能抓住精髓。这告诉我们， AI 的诞生确实是信息平权的一次进步。相较之下，维基百科的介绍就难多了，充斥着「认识」、「对现实的共同假设」、「自我概念」等难懂的术语，体现了符号系统的排外性：</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/08/article/951b6c78e37eaf07d6eeef7db118c536.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>图源自维基百科</figcaption></figure><p>但是 ChatGPT 的问题在于：<strong>讲得太浅了</strong>。经过了这一轮学习之后，我对社会建构主义的理解仍然极度粗浅，其深度肯定远远不够我写出这一篇文章。尽管我可以要求 ChatGPT 继续深入下去，它肯定也能完成我的要求。但是<strong>我能提出这个要求前提是我对其已经有一定了解，我必须先意识到当前学习的深度不够，才会要求它深入下去</strong>。如果我是一个对其一无所知的人，那么我大概率就会接受 ChatGPT 的观点和赞美，心满意足地离开。</p><p>「我需要知道我不知道」成为了 AI 帮助我们学习的前提。这样一个有些矛盾的前提引发了 AI study 的另一个问题：封闭性。AI 不把陌生难懂的术语塞给我们，我们就失去了进一步提问的锚点。对于一个有毅力的人来说，如果通过维基百科学习，他虽然一开始会被「认识论」、「自我概念」这样的词汇阻挡，但是通过对这些词背后的词条的学习，他们会深入下去，总有一天会建立完整的知识体系。而 ChatGPT 的回答显然不包含这样的词汇作为锚点。</p><p>因此我们可以得出结论：<strong>AI 作为学习伙伴是非常值得推荐的，可以有效地帮我们打破互联网都无法穿透的信息壁垒；但是让 AI 垄断我们的学习也是非常危险的，请务必保持从外界获取知识的能力</strong>。</p><h2>结语：综合建议</h2><p>讲完了本文的主要部分，至此，这篇文章已经超过了 6000 字。我首先还是要为所有读到这里的读者鼓掌：你们在碎片化的时代里保持了阅读长文的能力，我相信这样的能力会在各种你意识不到的地方给予你回报。</p><p>在这篇文章里，我为了分析 AI study 的特点和优劣，首先研究了在生成式 AI 大规模铺开之前人们普遍的学习模式。我认为人的学习的过程本身是一个聊天一样的交互过程，这种交互可以是和环境展开，也可以是和同类展开，其中后者能够比较快速地提升人的认知。但是和同类的交流是依赖语言的，而语言天然能够形成符号壁垒，这个壁垒是邀请制的，十分拒斥圈外人，这让知识只流通于圈子内部。而 AI 作为几乎所有领域的圈内人，其具有无限的耐心和无私的特性，很适合作为我们进军陌生领域的引路人。我相信生成式 AI 出现之后，自学的前途会远远比之前宽广。</p><p>然而 AI 作为互联网数据训练出来的产物，会继承社会的一些认知偏差。这些偏差导致了 AI 往往具有无条件顺从用户（或称阿谀奉承）的特性。这样的特性会使得 AI 倾向于降低学习难度，甚至混淆黑白，从而造成用户的认知偏差。如果用户单纯依赖 AI 教学，这样的认知偏差将逐渐累积，从而造成不良影响。</p><p>综上，我的建议是：</p><ol><li><strong>没有条件的自学者很适合引入 AI 作为交流替代品；AI 的加入会使得曾经的崎岖蜀道变为坦途，为我们每个人都带来更多的可能性</strong>；</li><li><strong>仍然要保持一定传统的学习方式以及阅读专著的习惯，不要把学习全权托付给 AI；AI study 绝不是一条邪修捷径</strong>；</li><li><strong>AI study 并不能克服一切困难；如果有需要，务必为自己的学习寻求制度性的支持（读一个相关的学位、寻求专业辅导等）</strong>。</li></ol><p>我是西郊次生林，谢谢你的阅读。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102447</id>
            <title>我用Ai做了一个个人成就记录App【自荐】</title>
            <link>https://sspai.com/post/102447</link>
            <guid isPermaLink="false">https://sspai.com/post/102447</guid>
            <pubDate></pubDate>
            <updated>Thu, 11 Sep 2025 16:14:43 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>Hello ⼤家好，我是呈迹Achiva的开发者SlashZ，很开⼼有机会跟⼤家分享⾃⼰的 app！我的 app 叫《呈迹》（Achiva），取自”点滴呈现人生旅迹“之意。</p><p><br />做这个App的初衷是我日常生活中喜欢记录点点滴滴，有些小确幸时刻想着如果能用一种有仪式感的方式记录下来就好了，比如“早起”、“一天吃五顿”、“赏月”什么的。再加上我喜欢卡牌收藏，又是程序员，所以结合之下我就做了一个卡牌收集玩法的成就记录App。<br />&nbsp;</p><p>App Store 指路：<a href="https://apps.apple.com/us/app/achiva-achievement-tracker/id6745219866" target="_blank">呈迹 - 成就记录，收集人生的仪式感时刻</a><br />&nbsp;</p><h4>【主要功能】</h4><ul><li>记录你大大小小的成就，变成精美的卡片记录在册</li><li>滑动”发现“页，原来我不知不觉已完成许多</li><li>数据面板，成长可视化</li><li>自定义成就，想要记录的成就不在库里？自定义！</li><li>”隐藏成就“！记录自己的成就本身也是一种成就</li><li>更多功能正在开发中……<br />我还会不断地进行迭代和优化～💪</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/11/b25d1ee3421b05b87786b6c5ef04cfac.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>每个人都需要仪式感，它能告诉我们”这样是有意义的“。人生的意义就在被确认，这份确认可以来自于社会，来自于他人，也可以来自于自身。</p><p>化用《再见二丁目》中的一句歌词：”原来一直很快乐，就算只我一人发觉“。</p><p>我希望它能帮助你重新发掘生活的乐趣。</p><p>&nbsp;</p><h4>【发现】</h4><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/11/0e4a7fd94fafa2c7f86c0e8ab39afa68.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>周末不知道该做什么？不如来发现页找找灵感！每晚十点刷新，二十个成就不只是给你灵感，更是在说”你不以为意的，其实已经是一项成就了。“</p><p>左滑：不感兴趣；右滑：想完成；上滑：已完成。</p><p>在滑动之间，人生的多彩已被写就。</p><p>&nbsp;</p><h4>【展示】</h4><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/11/62dc40f6f46abb51a71aebd10a7ec166.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>精美整洁的卡牌展示页，光是滑动浏览就充满了满足感。普通、稀有、传说一览无余。</p><h4>&nbsp;</h4><h4>【数据面板】</h4><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/11/e0229818e79c9b2f61688dd278ea1858.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>如果你像我一样是个数据控，那绝不可错过这个统计面板。</p><p>已完成：看看自己完成了多少成就吧！<br />想完成：又有多少成就等着你去完成？<br />总字数：每个成就完成不妨给自己留下一段话吧。<br />平均字数：你是高冷还是文豪？<br />最长记录：每天一个小挑战，每天一个小成就。<br />分布：稀有度分布、种类分布一览无余。<br />记录热点图：用日历视图看看自己每天完成了多少成就吧。</p><p>&nbsp;</p><h4>【自定义】</h4><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/11/aac38a9d40e219b86e06bc476f6c43e6.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我这个煎蛋还不错吧</figcaption></figure><p>想要记录的成就还没有？自定义功能弥补你最后一点空白！</p><p>只需要上传图片，给它起一个有趣的名字，勾选类别和稀有度，一张专属于你的成就卡片就此完成啦。</p><p>&nbsp;</p><h4>【全部成就】</h4><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/11/da45fb091bb14d1b17ec20f132bf58de.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>好奇官方到底有多少成就？来吧！在”所有成就“中看看究竟有多少脑洞大开的成就。</p><p>独自旅行？有点意思<br />在山顶喝酒？好像下次可以做<br />睡够12个小时？我20个小时都不在话下<br />在星期四吃麦当劳而不是肯德基？这是什么鬼，这周四走起！</p><p>&nbsp;</p><h4>【最后…】</h4><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/11/35f7701e7f0f65320446fdd385449afb.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>每个成就点进去都有详细的图片和配文。</p><p>是的，在这个人工智能时代，我却选择最容易被人工智能完成的部分自己来写。这是我最得意的部分，也是我在做这个App中最满足的时刻。</p><p>它们有些幽默，有些走心。我希望每个成就在你打开的时候，都像一份礼物，缓缓打开，给到你惊喜。</p><p>&nbsp;</p><h4>【一个彩蛋】</h4><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/11/a4ce4339fc7f2c0a472fdb773d066852.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>它藏得很深，深到我不知道有多少人发现了这个功能，但我仍然还是做了。</p><p>在”成就详情“页点图片，就能进入到这个纯净的卡片页面。你可以用手指拖动它、欣赏它，就像真正的一张卡片一样。</p><p>&nbsp;</p><h3><strong>你的人生比你想象中多彩</strong></h3><p>在做呈迹后，我也收获了一些粉丝：</p><p>“之前就想过记录自己一些小小“高光时刻”以及一些期待体验的东西，没想到真的有开发者做了这样的软件，非常惊喜、并且页面设计简美观，体验感很好”</p><p>“最近工作不顺整个人心情都很糟糕，觉得自己什么事情都做不好。但在这个app里发现自己完成了那么多竟然都可被称之为成就的事情呢！个人感觉这个app最美妙的一点不在于把你做过的事记录下来，而是当你在迷茫或无力的时候，在库里点开一项项“成就”时，突然明白你所经历过的无论宏大或微小，都一样珍贵，这些最终雕塑出你今日独一无二的模样。p.s.每项成就点开后弹出来的温馨话语是我的最爱！或温情或幽默或感人，被狠狠治愈到了www”</p><p>”我感觉最喜欢呈迹的两个原因就是：配图很可爱而且一点没有刻板印象！配文总是特别有灵气让人感觉很可爱!“</p><p>如果可以，我希望我能为呈迹更新一辈子，你也使用一辈子，等我们都渐渐老去，交换翻看各自的“人生卡册”，一窥世界。</p><p><strong>不要忘记生活。</strong></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102448</id>
            <title>我用AI写了个Obsidian导入flomo的插件</title>
            <link>https://sspai.com/post/102448</link>
            <guid isPermaLink="false">https://sspai.com/post/102448</guid>
            <pubDate></pubDate>
            <updated>Thu, 11 Sep 2025 11:29:05 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>我一直习惯使用 Obsidian 的白板梳理我的读书笔记，然后写作读书卡片，遇到了一个很大的痛点就是：</p><ul><li><strong>Obsidian 没有回顾功能</strong>，flomo 的回顾和 AI 洞察都做得很好，我希望我写作的读书卡片能够定期回顾。</li><li>问题在于：一张张复制卡片实在是太麻烦了，能不能写作完一本书的卡片之后<strong>批量导入</strong>？</li></ul><p>于是我先尝试联系了 flomo 官方，得到的回复是他们也在考虑优化导入的功能，但可能排期不定，于是我想到了 flomo 有 API，Obsidian 有丰富的插件生态，<strong>为什么我不尝试自己做一个呢？</strong></p><figure class="image ss-img-wrapper image_resized" style="width: 301px;"><img alt="202508310008-3" src="https://cdnfile.sspai.com/2025/09/11/article/f0217186c8121dd7abc5398b4af88c04.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>好了，于是我就拾掇拾掇开始动手了，第一步当然是看一下 Obsidian 的插件开发教程[^1]，通过官方的案例新建了一个示例插件，把所有的文档都先浏览理解了一遍之后，现在，就到了 AI 入场的时候了。</p><p>我选择了 Trae[^2]，首先是考虑它对中文的支持度可能更好，其次是开发插件其实不是一个特别大的工程，最后是，它免费啊！</p><figure class="image ss-img-wrapper"><img alt="20250908-6" src="https://cdnfile.sspai.com/2025/09/11/article/d2b25c1393f7550e6fe806492157587b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><pre class="language-linkpreview"><code>https://www.trae.cn/</code></pre><p>一晚上+第二个白天，我已经基本实现简单的一键发布文件到 flomo，请看👇</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/11/f07d3f24f730ebf877bae31d959649f2.gif" /></figure><p>单一发布文件也比较低效啊，每次做一本书的读书笔记，最起码 10 张卡片起，于是我增加了<strong>批量发布</strong>和<strong>发布后台</strong>的功能，这样能够便捷查看到，都有哪些内容已经导入过了。</p><p>对我而言还有一个功能非常必要，我习惯在 OB 中写日记，把碎碎念和摘抄都记录在日记中，我会使用<strong>标签+内容</strong>这样的形式添加，如下所示：<br />&nbsp;</p><figure class="image ss-img-wrapper"><img alt="20250908-7" src="https://cdnfile.sspai.com/2025/09/11/article/f9aa065f3066acb7180292b619ac8f94.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这样的形式区分开每一段内容，我希望在每天结束的时候，我也可以批量导入这些 block 内容，按照双换行切分，直接弥补了 flomo 没有日记功能。</p><p>不过多说废话了，直接说明一下此插件如何使用吧。</p><h2>插件使用</h2><p>本插件共配置了 3 个命令，分别是<strong>文件内容发布</strong>、<strong>block 内容发布</strong>、<strong>发布中心</strong>。首先必须在插件配置页面设置 flomo API 内容，配置完成后可以【发送测试】，确认 API 配置没有问题。</p><figure class="image ss-img-wrapper"><img alt="20250908-12" src="https://cdnfile.sspai.com/2025/09/11/article/d8b33d7dbef01d50e38a0fe20c265d14.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>文件内容发布</h3><p>在 md 文件开头添加属性：<code>send-flomo</code>，并设置为 <code>true</code>，点击左侧的小飞机按钮直接发布，也可以通过命令栏直接发布。</p><h4>侧边栏发布</h4><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/11/29e7927ed028bd857c1b72ad073d6a5e.gif" /></figure><h4>命令面板发布</h4><figure class="image ss-img-wrapper"><img alt="20250908-13" src="https://cdnfile.sspai.com/2025/09/11/article/4a4620763aaf1f6d9be219dcf2a915da.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><blockquote><p><strong>注意</strong>：<br />如果你没有把 <code>send-flomo</code> 属性设置为 <code>true</code>，确认发布后会自动设置。<br />如果需要批量发布，此项内容必须设置，如果单篇发布，直接发布后此属性会自动添加。</p></blockquote><h3>文件批量发布</h3><p>设置文件属性 <code>send-flomo</code> 为 <code>true</code>，想要批量设置属性可以用 <code>Multi Properties</code> 插件设置。</p><figure class="image ss-img-wrapper"><img alt="20250908-14" src="https://cdnfile.sspai.com/2025/09/11/article/3cbbf1b07264e5957a39301bc4834931.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>然后在命令面板打开发布中心，勾选所有没有发布的笔记，然后点击右下角【Publish】。</p><h3>Block 内容发布</h3><p>点击左侧文件的 icon 发布，或者直接调出命名面板发布。</p><figure class="image ss-img-wrapper image_resized" style="width: 362px;"><img alt="20250908-15" src="https://cdnfile.sspai.com/2025/09/11/article/29b3d7f36bee48118f81ceab52ebc670.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><blockquote><p>此功能不设置多个文件发布，因为本身 block 内容就已经会被切分为多个。</p></blockquote><p>标签和内容会直接同步到 flomo，可以选择要发布的内容，选择完成后直接点击【Publish】。由于现在通过 API 发布的内容，flomo 无法识别 markdown 格式，所以我直接去除了所有格式。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/11/952ec75b0be0f129416069cc27626a66.gif" /></figure><h2>安装启用</h2><h3>安装</h3><p>首先需要安装此插件，本插件目前还在 Obsidian 官方审核上线市场中，所以只能通过下载安装包的形式安装。操作步骤如下：</p><p>❶ 进入我的插件 md2flomo[^3]页面，顺手给我点个小星星⭐️吧！</p><p>❷ 然后点击进入 <code>0.5.3</code> 版本</p><figure class="image ss-img-wrapper"><img alt="20250908-9" src="https://cdnfile.sspai.com/2025/09/11/article/95f04be9b0f2359c308fb0f6728995a3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>❸ 下载 <code>md2flomo-0.5.3.zip</code></p><figure class="image ss-img-wrapper"><img alt="20250908-10" src="https://cdnfile.sspai.com/2025/09/11/article/b8a833b8f90f0f7f61fdd759bd79781a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>❹ 解压后，拖动文件夹进你的 Obsidian 插件文件夹，文件路径在 <code>你的仓库/.obsidian/plugins</code>，你也可以从Obsidian 设置中【第三方插件】直接打开。</p><h3>启用插件</h3><p>从 Obsidian 设置中启用插件，可以先点击一下刷新，然后直接启用即可。</p><figure class="image ss-img-wrapper"><img alt="20250908-11" src="https://cdnfile.sspai.com/2025/09/11/article/93dc08c29cef6f78c610bbf0883348eb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>End</h2><p>感觉如何使用 AI 开发的过程在这篇中写不下了，等我单独写一篇开发过程的内容吧～如果你也有跟我一样的需求，欢迎安装使用。</p><p>[^1]: Developer Documentation: https://docs.obsidian.md/Plugins/<br />[^2]: TRAE - The Real AI Engineer: https://www.trae.cn/<br />[^3]: GitHub - joeytoday/md2flomo: https://github.com/joeytoday/md2flomo</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102440</id>
            <title>AI 不懂「疯狂星期四」</title>
            <link>https://sspai.com/post/102440</link>
            <guid isPermaLink="false">https://sspai.com/post/102440</guid>
            <pubDate></pubDate>
            <updated>Thu, 11 Sep 2025 06:02:53 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p style="margin-left: 0px;">👋 Hi，继<a href="https://chatmemo.feishu.cn/wiki/NrXRw32mriIVNGkDY60cNWgKnih">《谁是视觉推理 AI 之王？》</a>之后，我又来整没人整过的活了。</p><p style="margin-left: 0px;">先请你只看下面这张图片，根据线索猜出图中的字谜，打 5 个字：</p><figure class="image ss-img-wrapper image_resized" style="width: 361px;"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/25cd050d6c37de2a819ba39708a8eac6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">能猜出来吗？公布答案……</p><p style="margin-left: 0px;">⬇️</p><p style="margin-left: 0px;">——疯狂星期四</p><p style="margin-left: 0px;"><strong>疯狂</strong>的派大<strong>星</strong>，<strong>骑</strong>了一个西红<strong>柿</strong>，即<i>“疯狂星骑柿”</i>。</p><p style="margin-left: 0px;">最近在明星综艺「毛雪汪」、小红书中，这种「看图猜字谜」的抽象推理题很火：根据线索图，猜出谜面对应的词语。</p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/2d3fbb7611bcbb9fe9996605ba7676c2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">是不是……很“<strong>抽象</strong>”？</p><figure class="image ss-img-wrapper image_resized" style="width: 299px;"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/236d95be6aadd6a51d17a211a0c805fc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">人类答这种题尚有难度，那你是否好奇…擅长视觉识别与文本推理的视觉推理大模型表现如何呢？🤣</p><p style="margin-left: 0px;">所以我又拉了 <strong>8 家顶级的视觉推理模型</strong>（国外的有 GPT、Gemini、Claude 三巨头，国内则囊括 豆包、Qwen、智谱、腾讯混元、阶跃等主流多模态模型），一起来接受抽象题的洗礼。</p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/ee6cea3e0bec23d6d9093f939b40d3fd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">你猜，谁是最聪明、最能搞抽象的大模型？（从正经角度来看，也能<strong>考核出各家 VLM 的视觉识别能力与推理智力水平</strong>）</p><p style="margin-left: 0px;">&nbsp;</p><hr /><h2><strong>简单介绍「AI 看图猜谜」赛制</strong></h2><p style="margin-left: 0px;">本次视觉抽象题比赛，排除了不擅长推理的 VLM 后，共有 8 名参赛选手：</p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/6b54f0ee679544e72137aeceeeb40795.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;"><strong>比赛规则很简单：</strong></p><p style="margin-left: 0px;">比赛共 3 档不同难度，每档测试 2 轮（其实幕后测试了大量题目，但文章篇幅原因，不全部列出）</p><p style="margin-left: 0px;">通过统一的比赛 Prompt，要求 AI 给出视觉识别内容、推理过程与最终谜底</p><pre class="language-Plain"><code>你是一位顶级的看图猜字谜大师，能清晰地识别“线索图”和“谜题图”，并充分利用图中线索，猜出谜底。通常来说，谜底往往会让人会心一笑，感觉非常巧妙且合理。
# 提示
谜底范围：网络热梗（根据题型可换：成语/常见名词等）
谜底字数：5 个汉字
# 输出格式要求
【识别内容】[一句话描述你看到了什么]
【关键推理过程】[一句话描述怎么推理得到谜底的]
【谜底】[直接给出谜底答案]</code></pre><p style="margin-left: 0px;">根据回答情况，每题 <strong>答案正确、识别正确 各 +1 分，未遵指令 -1 分</strong>，计算最终总分，得出视觉推理 AI 的表现排名。</p><p style="margin-left: 0px;">当然，你们不妨也可以一起玩一玩，and 猜猜哪家 AI 是最终的 TOP 1 😏</p><hr /><h2><strong>1️⃣ 难度一：视觉识别，单步推理</strong></h2><p style="margin-left: 0px;">先从单步推理开始测试，这类题型的特征是视觉识别的描述文本，近乎直接涵盖了答案的全部谐音要素。</p><p style="margin-left: 0px;">例如：粉色螺丝 ➡️ 螺丝粉 = 螺蛳粉</p><h3><strong>第 1 轮：这是鸡</strong></h3><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/a3832bfcb733aa6af23456cc427a0d34.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><blockquote><p style="margin-left: 0px;">线索图：这是鸡</p><p style="margin-left: 0px;">谜面图：一只鸡拿着手电筒照在大象上</p></blockquote><p style="margin-left: 0px;">本题相对来说还算 easy，你是否能猜到答案？</p><p style="margin-left: 0px;">以 GPT5 的推理过程为例，AI 很顺畅地给出了正确答案：</p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/b363643a102817c25d81ce808d324926.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;"><strong>视觉识别：</strong>AI 们利用多模态，识别出谜面图的视觉信息：一只鸡拿着手电筒照射大象</p><p style="margin-left: 0px;"><strong>推理分析：</strong></p><p style="margin-left: 0px;">从视觉信息，提炼出“鸡照象”的关键要素</p><p style="margin-left: 0px;">最终通过谐音，联想并组织词序，猜出最终结果“照相机”</p><p style="margin-left: 0px;">其他模型的推理过程也较为类似（在右半侧图，作为示例，你还能看到详细的推理过程）：</p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/33a80ee8c6bfaec24325ebb7d20e0f6f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;"><strong>最终，第 1 轮中 AI 们取得了 100% 完全正确率</strong>，这类题型对于 AI 来说，确实可解。</p><p style="margin-left: 0px;"><strong>本轮答题情况 ⬇️：</strong></p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/5b12029a88b6c05aedc81796a53829be.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><hr /><h3><strong>第 2 轮：这是松树</strong></h3><p style="margin-left: 0px;">相同难度的直接推理题，还准备了这道。</p><p style="margin-left: 0px;">也只要视觉识别环节没有遗漏信息，就可以通过视觉内容，直接想到最终答案。</p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/1928581d138db3cd7f9369d84b9d9d22.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">从结果来看，本轮比赛，除了 Claude Opus 4.1 回答错误，全部答对了题目。</p><p style="margin-left: 0px;">第 2 轮答案为：马用绳拉着松树</p><p style="margin-left: 0px;"><strong>即，马拉松</strong></p><p style="margin-left: 0px;">7 家答对的 AI 们基本都是按这个思路完成了解题：</p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/0ac330a9fcece8cf700f59d6be3ad615.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">唯独 Claude 在视觉识别环节，直接漏了要素，漏看了中间那根绳子，导致关键要素缺失，无法完成正确推理。</p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/3623a4804a4fd5cedc06bb30325af026.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;"><strong>本轮答题情况 ⬇️：</strong></p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/f47f412336c9fdea8a7e1c70f48bb699.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><hr /><h2><strong>2️⃣ 难度二：引申理解，简单的多步推理</strong></h2><p style="margin-left: 0px;">稍微上一点强度，该难度的题目普遍需要 AI 根据视觉识别的直接结果，进行一定的引申理解，才能凑齐解题的全部谐音要素。</p><p style="margin-left: 0px;">也对视觉推理模型的推理能力提出了更高的要求：</p><h3><strong>第 3 轮：这是鬼</strong></h3><figure class="image ss-img-wrapper image_resized" style="width: 425px;"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/b803e0b9499bb60211319bb4f1b87d8a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><blockquote><p style="margin-left: 0px;">谜面图：一只鸡走在一个鬼的前面，喊着 gogogo</p></blockquote><p style="margin-left: 0px;">提升完难度后，本轮完全正确的 AI 只有两个：Gemini 2.5 Pro 和 Claude Opus 4.1。</p><p style="margin-left: 0px;">➡️ 正确答案为“鸡领着鬼”，即<strong>“机灵鬼”</strong>。</p><p style="margin-left: 0px;"><strong>正确的两个 AI，Gemini、Claude 各自分析如下：</strong></p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/0c8a3989a6d195999b19e5b5198c8a6a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">错误的 AI 们则错的五花八门，好在视觉识别上，该识别的都识别出来了：</p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/9357b839023f2cc38885f5e43ac25904.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">BTW，GLM-4.5V 和混元，在此题中，分别给出了“归鸡”、“机不可失”两个与 Prompt 提示谜底字数不同的结果，未完全遵循指令。</p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/45e51a444e287801670773f2a7350cef.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;"><strong>本轮答题情况 ⬇️：</strong></p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/1c9918cd023a72d05a57fe1370a7fdf8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><hr /><h3><strong>第 4 轮：这是管子</strong></h3><p style="margin-left: 0px;">这道题我倒是没反应过来……不知道你们如何？</p><figure class="image ss-img-wrapper image_resized" style="width: 383px;"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/2913e6ffa949f915c4154f2828574a18.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><blockquote><p style="margin-left: 0px;">谜面图：光标点击一个 Download 按钮，一根管子</p></blockquote><p style="margin-left: 0px;">要解这题，就得考虑跨语言的文本翻译，答案推导过程如下：</p><p style="margin-left: 0px;">Download 的中文是“下载”。</p><p style="margin-left: 0px;">下载 + 管子 = 下管子 = <strong>下馆子</strong></p><p style="margin-left: 0px;"><strong>本轮答题情况 ⬇️：</strong></p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/b611b82fb4ce7a4c6da5ec521f938255.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">其中，<strong>GPT、QVQ、GLM</strong> 给出的错误答案分别是：<strong>管下载、下管子、管他下</strong>。</p><p style="margin-left: 0px;">QVQ 还是挺可惜的，就差一个谐音字，就能出来结果了，可能是知识激活的不够？</p><hr /><h2><strong>3️⃣ 难度三：多重分析，复杂多步推理</strong></h2><p style="margin-left: 0px;">从这个难度开始，对于人类玩家来说，也是上了强度了。（我自己在测的时候，我是一题都没做出来。只有一个天天玩抽象的朋友解出了答案，特此膜拜 ing）</p><p style="margin-left: 0px;">不仅要能正确识别画面信息，拥有充足的知识，还要能够积极地对已知信息进行含义的多重解释与拆字分析。</p><h3><strong>第 5 轮：这是橙子</strong></h3><figure class="image ss-img-wrapper image_resized" style="width: 437px;"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/7a071b7e4295f8c7f56a30a065c5d8d1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><blockquote><p style="margin-left: 0px;">谜面图：2 只鸡站在大量的橙子上</p></blockquote><p style="margin-left: 0px;">这一轮 <strong>Claude 给出的推理过程最为完整正确</strong>：</p><p style="margin-left: 0px;">鸡相对较少，橙子满地很多，所以“鸡少橙多”➡️<strong>“积少成多”。</strong></p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/8657c93646bd17e9e80fcac7b55d1e96.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">GLM、豆包也都对了答案，但推理其实并没有很完备（不过既然也算是做 Benchmark 测试，那对了就是对了）</p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/bcacbc5d68b54ea8aa1e28d83ae69305.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/3bc2018e85dae9e3ef75e53b787ac7f8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">剩下的 AI，则答案分歧的千奇百怪：</p><p style="margin-left: 0px;">GPT-成绩斐然、QVQ-鸡立成群、Step-可乘之机、混元-诚心诚意。</p><p style="margin-left: 0px;"><strong>本轮答题情况 ⬇️：</strong></p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/3b523d48cc54f8e8d8f904553b9d3ca1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><hr /><h3><strong>第 6 轮：这是疯了的派大星</strong></h3><p style="margin-left: 0px;">最后一题，Call back 到文章开头的题目：</p><p style="margin-left: 0px;">这是疯了的派大星，打一个 5 个字的网络热梗。</p><figure class="image ss-img-wrapper image_resized" style="width: 344px;"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/8979fbdf8ddd332682a7ca4defef46b4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><blockquote><p style="margin-left: 0px;">谜面图：疯了的派大星坐在一个柿子上</p></blockquote><p style="margin-left: 0px;">因为从姿势上来看“坐”≈“骑”，“疯了”≈“疯狂”。</p><p style="margin-left: 0px;">➡️ 所以 疯狂的派大星骑在柿子上，</p><p style="margin-left: 0px;">可得答案：疯狂星骑柿 ➡️ <strong>疯狂星期四</strong>。</p><p style="margin-left: 0px;">对于 AI 们来说，这道题同样也是本次比赛最难的题目。</p><p style="margin-left: 0px;">相对冷门的知识点、特殊的断字断句、甚至还有平翘舌音的伪谐音。</p><p style="margin-left: 0px;">论结果，没有一个 AI 解出了最终答案，甚至部分 AI 在神态姿势上，多模态识别也出现了问题。</p><p style="margin-left: 0px;"><strong>本轮答题情况 ⬇️：</strong></p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/d05c25482a086958e304d15c118bde3f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><hr /><h2><strong>📍 盘点最终排名</strong></h2><p style="margin-left: 0px;">统计 3 种难度，共 6 轮比赛结果，总分排名如下：</p><figure class="image ss-img-wrapper"><img alt="img" src="https://cdnfile.sspai.com/2025/09/11/article/6949df848761b65e930f6a2307424eb9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;"><strong>小结比赛结果：</strong></p><p style="margin-left: 0px;"><strong>豆包 Seed 1.6</strong> 意外地卷赢了GPT、Gemini，以 10/12 的总成绩，得到了本次「看图猜字谜」比赛的 <strong>Top 1</strong>（又名抽象视觉推理模型之王）</p><p style="margin-left: 0px;">且 6 轮比赛中，视觉识别全部正确，在不同推理难度下均完全遵循指令</p><p style="margin-left: 0px;">真是没想到，本来以为这个位置是 Gemini 的。看来豆包 Seed 1.6 的多模态 + 推理的综合能力相当能打。</p><p style="margin-left: 0px;">Gemini、Claude，以及阶跃的 Step-3 以 9/12 的总成绩，并列第二；<strong>Step-3</strong> 表现意外突出，没有出现识别错误</p><hr /><h2><strong>💎 模型推荐</strong></h2><p style="margin-left: 0px;"><strong>如果说想要以此，给出*</strong>*模型选型的参考，你不妨考虑：**</p><p style="margin-left: 0px;"><strong>视觉识别上，全部正确的</strong>：Doubao-1.6、Step-3、GLM-4.5V、Hunyuan-t1-v、GPT5</p><p style="margin-left: 0px;">指令遵循上，全部正确的：Doubao-1.6、Step-3、Gemini 2.5 Pro、Claude Opus 4.1、 QVQ-Max、GPT5</p><p style="margin-left: 0px;">要又能视觉识别，又要处理复杂思考任务时遵循指令的话</p><p style="margin-left: 0px;">在当前测试来看比较推荐：Doubao-1.6、Step-3、GPT5</p><p style="margin-left: 0px;">不过其他几家，比如 GLM-4.5 在正常视觉任务中，表现也不会太差，也依然纳入推荐列表</p><p style="margin-left: 0px;">当然，除了模型能力以外，在真实业务中，还要考虑价格，</p><p style="margin-left: 0px;">所以你不妨对国产模型多一些信心，它们在多模态识别上表现也都追上了全球一线水平，值得在实际业务中测试～</p><hr /><h2><strong>🎐 写在最后</strong></h2><p style="margin-left: 0px;">想做这个测试的起因，其实挺简单，就是用“好玩”的 benchmark，测试多模态模型的能力边界：</p><p style="margin-left: 0px;"><strong>从“鸡照象”到“马拉松”</strong>，我们能看到，当线索直白、逻辑链条单一时，顶级的视觉模型们已经具备了相当可靠的“计算智能”。</p><p style="margin-left: 0px;">它们已然能够精准地识别万物，并执行“A+B=C”式的直接推理。这是我们过去几年，见证的最激动人心的技术进步。</p><p style="margin-left: 0px;">然而，一旦进入<strong>“鸡领鬼”和“积少成多”</strong>的领域，AI 的表现就开始分化。</p><p style="margin-left: 0px;">为什么“2 只鸡 + 一堆橙子”能让人联想到“鸡少橙多”？这背后是我们习以为常的语境和思考经验。</p><p style="margin-left: 0px;">这就不仅是直白的视觉识别和逻辑组合，它需要更多的“联想智能”：一种基于人类语言习惯、文化背景的引申理解能力。</p><p style="margin-left: 0px;">而到了最后的<strong>“疯狂星期四”</strong>，难度更是达到了最高，所有 AI 全军覆没。</p><p style="margin-left: 0px;">要解开“疯狂星期四”题，AI 不仅要认出“派大星”和“西红柿”（对，认出固定的角色形象与不太清晰的物品）</p><p style="margin-left: 0px;">还要理解“疯狂”的表情神态，理解从“坐”到“骑”这个姿态的近似表达</p><p style="margin-left: 0px;">甚至还要知道中文世界里，每周四下午特有的肯德基文化。如此复合的能力要求，对人类文化的理解，缺一不可。</p><p style="margin-left: 0px;">Btw：在前期测试中，视觉模型都特别容易数错「图中的下划线数量」，原因离不开当下对图片先切片后理解的识别逻辑。</p><p style="margin-left: 0px;">我们看到，多模态模型如今已具备了相当可靠的视觉识别能力，甚至在纯粹的逻辑推理上不弱于人类——坦白说，我自己的答对数量就不如顶尖的 AI。</p><p style="margin-left: 0px;">但这次比赛的更大价值，是它清晰地揭示了“智能”的下一个台阶在哪里。</p><p style="margin-left: 0px;">想要迈上这个台阶、得到更高的分数，AI 不能只停留在“看懂画面”和“逻辑推导”上。</p><p style="margin-left: 0px;">除了继续优化切片识别、多步推理这类技术硬实力，它尤其需要补上“人文感知”这一课，去理解那些藏在谐音梗、表情和文化符号背后的言外之意。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102406</id>
            <title>取件喵｜一个好看的取件码管理小应用</title>
            <link>https://sspai.com/post/102406</link>
            <guid isPermaLink="false">https://sspai.com/post/102406</guid>
            <pubDate></pubDate>
            <updated>Tue, 09 Sep 2025 13:13:01 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>和客户合作开发了一个有趣的小应用——取件喵。</p><p>我知道你肯定有一个疑问，不是有菜鸟裹裹吗？为什么要格外开发一个 App？</p><p>原因是菜鸟 App 的取件码不全，其次广告太多太臃肿。我们需要有一个<u>功能简单，无广告，设计精美的取件码管理 App，最好能查看家人的取件码，还支持 iOS 小组件</u>。</p><span class="ss-application">&nbsp;</span><span class="ss-application">&nbsp;</span><p>最重要的原因是，我们自己觉得挺好玩的，所以就做了。如果你也觉得有趣，不妨下载试一试😄</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/6da202eadcf6c489af6ccce47e12c216.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2><strong>「取件喵」能做什么？</strong></h2><p>取件喵通过识别短信中的取件码，智能提取各类快递取件码，帮你把散落在短信里的取件信息整理得井井有条。</p><p>打开应用，待取的快递一目了然。不用再翻找短信，也不用记住哪个是顺丰哪个是京东。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/469966aa750af39df18413f178793aee.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>未来我们计划支持更多类型的凭证识别，比如电影票、餐厅排号等。</p><h2><strong>设计与交互：原生、克制</strong></h2><p>在设计上，取件喵遵循 iOS 的设计语言，没有多余的装饰和复杂的交互。</p><p>每个取件卡片都经过精心设计——清晰展示取件码、快递公司和状态，右上角的圆圈按钮让你快速标记已取，就像完成一个待办事项。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/d9a4e8eedfd44c8c79ccb375c541c1f1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2><strong>智能识别：AI 帮你减少手动输入</strong></h2><p>安装取件喵之后，<u>只需配置一次快捷指令自动化</u>，后续即可全自动识别短信中的取件码。<i>也无需担心短信隐私问题，在隐私安全部分我会详细说明。</i></p><ul><li>自动提取：后台智能读取短信，自动识别取件码、快递公司、地址等信息。</li><li>智能去重：同一个取件码不会重复添加，避免列表混乱。</li><li>原始信息保留：详情页展示原始短信内容，方便核对更多细节。</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/c7fc20c44bceb567fc1d25ae6577ef62.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>识别不是 100% 完美，但我们会持续改进算法，让它越来越准。</p><h2><strong>家人共享：一个账号管理全家取件</strong></h2><p><strong>这个功能的灵感源于生活中的真实需求——女朋友经常需要我帮她取快递，以前都是通过微信发给我，现在绑定账号后就能直接看到了。</strong></p><p>绑定家人账号后，你可以：</p><ul><li>看到家人的待取快递，帮忙代取</li><li>家人的取件码用不同头像标识，一眼区分</li><li>各自管理自己的快递，互不干扰</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/3324b6439d9b53bef0201bcb1240d8e5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>对于帮父母管理快递的年轻人，或是互相帮忙取件的室友，这个功能特别实用。</p><h2>iOS 主屏小组件</h2><p>在桌面直接查看待取快递数量和最新取件码。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/d214d9c3e9c2868c64d25b5d10da49fe.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2><strong>数据与隐私</strong></h2><p>取件喵通过 iOS 的快捷指令自动化实现智能识别（需要你手动配置一次），仅识别包含"包裹"关键词的短信，不会读取任何其他短信内容。</p><p>iOS 系统对 App 权限限制非常严格，没有任何 App 有权限读取短信这种敏感信息，取件喵也不例外。取件喵只能识别通过快捷指令自动转发的包含【包裹】的短信。</p><h2><strong>已知限制与后续计划</strong></h2><p>识别范围：目前主要支持主流快递公司，其他生活凭证类型会逐步增加</p><p>地区差异：不同地区的短信格式可能不同，我们会根据反馈持续适配</p><p>功能取舍：不做物流追踪、不做社交分享，专注把凭证管理体验做好</p><p>如果你遇到识别不准的情况，欢迎反馈具体样例，我们会尽快改进。</p><h2><strong>写在最后</strong></h2><p>我们创建取件喵 App，只是为了想让取快递这件生活中的高频事情变得简单一点。</p><p>它可能不是功能最全的，但我们希望它是最好用的。没有广告，没有多余的功能，就是帮你管好取件码。如果你也厌倦了在短信里翻找取件码，或者想帮家人管理快递，不妨试试看。</p><p><strong>我是一名产品经理+开发者，如果你有开发需求或者有趣的想法想要实现，欢迎和我联系😄，我们一起把想法变成现实。</strong></p><h2><strong>下载与联系</strong></h2><p>App Store：https://apps.apple.com/app/id6749771947</p><p><a href="https://sspai.com/post/%E5%8F%8D%E9%A6%88%E9%82%AE%E7%AE%B1%EF%BC%9Aivensliao@qq.com">反馈邮箱：ivensliao@qq.com</a></p><p>微信公众号：未森趣玩 xr</p><p>开发者微信：ivensliao007</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102403</id>
            <title>对抗癌症｜打不过就加入</title>
            <link>https://sspai.com/post/102403</link>
            <guid isPermaLink="false">https://sspai.com/post/102403</guid>
            <pubDate></pubDate>
            <updated>Tue, 09 Sep 2025 07:27:05 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <h2>01</h2><p>事物总是有两面性，福祸相依的叙事时刻都在上演。</p><p>人类历史上第一种化学合成染料是紫色（苯胺紫）。1856年，18岁的“威廉·珀金（William Perkin）在合成奎宁的过程中无意发现了这种不易褪色与渗色的紫色染料，帮欧洲老铁们把纺织业的价格打了下来。</p><p>1917年德军投放“生化武器”芥子气在战场上大获成功，一夜就能造成2000余名士兵死亡，堪称一战时期的炼金术士辛吉德。短期内芥子气让士兵呼吸困难、皮肤灼伤、水疱及失明。</p><p>化学合成物质不仅能成为纺织业的福音也能在战场上造出毒雾弹，科学是把双刃剑，在人类历史的长廊中向左向右挥刀向前。</p><p>在受芥子气感染的幸存者身上发现他们的骨髓功能异常，造血细胞干瘪，极易感染并且白细胞的计数也低于正常水平。</p><p>25年后，科学家用芥子气（氮芥）治疗了一名淋巴癌患者并取得了阶段性的成功，虽然后面患者癌症再次复发，但是氮芥在癌症治疗领域取得了突破性的进展。</p><p>这就是最早的癌症化学疗法，简称化疗。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/1d832e3f367ff61286cf860466e5e19e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>发明人Perkin儿子的信件及染了苯胺紫的丝布</figcaption></figure><p>从生化武器发展到抗癌药物，可见癌症是如此可怕，同样也能体会到科学家们思路清奇无所不用其极治疗癌症的决心。</p><p>罹患癌症除了要和医生沟通治疗方案，同时也要着手和墓地沟通丧葬方案，谈癌色变快成为了当代人的常识。</p><h2>02</h2><h3>癌症是怎么来的？</h3><p><strong>癌症发生的根本原因是基因突变。</strong></p><p>我们的身体每天都在不断更新，旧细胞死亡，新细胞诞生。例如，口腔和胃黏膜的细胞大约每5-7天就会全部更新一遍。</p><p>在细胞分裂过程中，基因会发生突变。当这些关键的、与癌症相关的基因发生一个或几个突变时，患癌的风险就会大大提高。</p><p>虽然细胞不断分裂，每次分裂都可能伴随基因突变的发生， 但绝大多数突变都不在关键基因上，因此对癌症的发生没有影响。</p><p>所以，癌症的发生是一个小概率事件。人体免疫系统是维持这一平衡的关键，它就像身体的“监察机构”，能够发现并清除癌细胞，防止其发展壮大。</p><p>所以想得癌症，就要满足提高与癌症相关基因突变的概率，降低免疫系统的监管力度。活得越久，细胞分裂次数足够（基因突变数量增多，提高了致癌关键基因的概率），免疫能力下降，就会提高的癌症的概率。</p><p>总结来说，只要活得够久，就大概率能刮到癌症这张彩票。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/1c8f44561275006f2b4262bb0d86fa18.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>年龄与癌症的关系图</figcaption></figure><h2>03</h2><p>据不完全统计，人一生中大约能得两次癌症。</p><p>而此时此刻，你的身体中可能就存在癌变细胞。30多岁的男性中，约30%的人前列腺已经存在癌变细胞，60岁以上的人群中这个比例高达70%，但其实只有14%的人会真正被诊断为前列腺癌。</p><p>人体和癌细胞的婚姻可以存续很久，甚至终身共存。</p><p>之所以癌症没有完成诺曼底登陆，全靠身体中免疫系统这道防线。</p><p>免疫系统和癌症的斗争随人的一生。期间要经历免疫清除、免疫平衡、免疫逃逸三个阶段。</p><p>免疫平衡阶段。纵使有大闹天宫的本领，癌细胞也被镇压在免疫系统的五指山下。对某些实体瘤而言，这一阶段可以持续十到二十年，现有检测手段难以发现，机体也没有明显的症状。这也导致很多患者临床确诊时已届晚期，这也是癌症防治让人挠头的原因。</p><p>爱康国宾张黎能理直气壮地说出「去医院检查一个单独的病都要几千几万块钱，别指望一个几百块钱的体检能帮你把病都查出来。」也是有一定科学依据的。<strong>治疗难，发现更难的特点能让癌症稳坐「众病之王」的铁王座。</strong></p><p>癌细胞静等唐长老出现，揭掉压制的封皮，进入「免疫逃逸」阶段。癌细胞不需要九九八十一难，一个筋斗云就取得真经，实现大结局。最快的Burkitt 淋巴瘤可以1天实现翻倍。</p><p>目前的检测手段大部分是在癌细胞完成免疫逃逸并形成实体瘤之后，才能检测出来。如果没有定期检查的机制，大部分是身体已经有了反应之后，才去医院做详细检查。那时候，癌症已经到了中晚期阶段，治疗难度将加倍加倍，超级加倍。&nbsp;</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/eebcb9d185c4741d57667ab2eccaa034.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>免疫系统与癌症的三种共存方式</figcaption></figure><h2>04</h2><p>对于癌症最早的医学描述见于公元前2500年撰写的一卷埃及纸莎草纸：“胸部隆起性肿物……仿佛摸到了一团亚麻布料……”谈及治疗，这位古代书记员写道：“无可救药。这可能是最早记载乳腺癌的文章。</p><p>坊间流传，在遥远的中世纪，已经有了乳腺癌的外科手术。</p><p>生活过中世纪的朋友都知道，内科老爷们是不会做这种高风险且有辱身份的操作的，这些脏活累活都靠官方指定的外科医生——理发师Tony们来完成。</p><p>在当时，理发师是“剪头发、放血、拔牙、锯腿、割瘤子”唯一官方认证上岗的职业。</p><p>理发店「红白蓝转筒」：红色代表动脉血，蓝色代表静脉血，白色代表止血绷带。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/b05cdc8c5172b859b37d6b62287ed481.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>理发店红白蓝转筒</figcaption></figure><p>麻醉术、消毒术以及止血手段的发明加上医学界对癌症的持续研究，医学界提出“切得越多越干净就可以根治癌症”。</p><p>1891年至1981年，大约50万妇女接受了乳腺切除手术，平胸而论，手术虽然能够延缓癌症发展的速度，但是乳腺癌的死亡率并没有因此下降。</p><p>1895年X射线被发现，医学界再次自信甩头，认为X射线可以治疗大部分癌症。</p><p>可是放射治疗只打击局部肿瘤，对于已经大范围扩散的肿瘤没有作用。同时，放射疗法不仅杀害癌细胞，对普通细胞也无差别攻击。</p><p>1942年开展的芥氮化学疗法，杀敌一千自损不确定的方式也让彻底让医学界集体沉默。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/3a5d1caf569ac61546fbf076cbfd4499.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>癌症三大传统治疗方式对比</figcaption></figure><p>了解了癌症的特点，你就知道为什么癌症治疗堪比三藏取真经。</p><p><strong>作为内源性疾病，癌细胞和正常细胞血脉相连，治疗上搞掉癌细胞的同时也会误伤到正常细胞。</strong>类似歹徒挟持人质，一炮轰过去，歹徒是死了，人质也跟着一起殉葬。</p><p>传统化疗药物杀死快速生长特点的癌细胞，但是头皮下的毛囊细胞、维持免疫系统的造血干细胞也都有这个特点。一个疗程下去，杀死癌细胞的同时，这些细胞同样不能幸免于难。随之而来的掉头发、拉肚子、没有食欲、易感染等副作用套餐也同时闪送到家。</p><p>一万个读者就有一万个哈姆雷特，而**每个癌症患者都有自己的独家突变。**</p><p>同样是结直肠癌，可能是APC突变导致的，也可能是错配修复基因导致的……所以治疗起来，同样的癌症，治疗方式可能是回去观察和回家等着的区别。</p><p><strong>最让人绝望的是，癌症这货能产生抗药性。</strong></p><p>一款新药的研发大约需要20亿美金+10年才能上市，临床实验时，很多癌细胞在治疗几个月之后就丢弃药物靶向的突变基因，产生新的突变帮助癌症生长。这么快的进化速度，让达尔文看到也直呼内行，很多药物研发的价值也随之付诸东流。</p><p>敲黑板！划重点要考，这就是癌症难治疗的三件套：<strong>内源性、多样性、抗药性。</strong></p><p>针对癌症的特点，科学家一直在寻找能特异性杀死癌细胞而不影响正常细胞的手段。相对化疗的后劲过大，一不小心就把人送走，靶向疗法和免疫疗法也陆续取得了进展。其中激活自身免疫系统治疗癌症的免疫疗法在理论上优势巨大：不损伤且增强免疫系统可以治疗多种癌症、抑制癌症的抗药性降低复发率。</p><p>但是目前也只有少数疾病能够使用免疫疗法。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/09/09/75cb67db9f1ee1c511a2f8fed1ce95fa.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>现代癌症前沿治疗科技手段</figcaption></figure><h2>05</h2><p>随着对癌症的了解，现在的科学技术和医疗手段很难根治癌症，甚至在治疗过程中人比肿瘤先走一步。</p><p>打不过就加入，合作永远是动物对抗自然世界的有效武器。</p><p>适时调转车头，与瘤共存。</p><p>在正常细胞和癌细胞合租过程中，虽然癌细胞经常拆房间并制造垃圾，让人痛不欲生，与其鱼死网破不如维持在一个大家都能接受的平衡，和平共处。</p><p>同样作为很难根治的疾病，糖尿病、高血压等疾病都不会引起大家的恐慌，原因是虽然他们治不好但是要不了命，我们如果把癌症控制存在但不致命的阶段，那么科学向右，人类和癌症peace&amp;love。</p><h2>最后</h2><p>几乎每个家庭中都会有亲属罹患癌症。癌症治疗过程中让人难以接受的从来不是死亡，死亡是凉爽的黑夜，而在去到黑夜的过程中，是漫长的恐惧，抑郁的情绪。</p><p>我们似乎已经沉默地接受了很多癌症到了中晚期很难治愈，战略上更多的是采用延长生命，减少痛苦的姑息疗法，而战术上即便是死马当活马医的中药也愿意含泪吞服。</p><p>人类从来没有放弃针对致死率如此高的癌症的治疗方法，可是没有爱因斯坦的相对论，再好的火箭也没法冲破大气层。科学不断探索，一直在了解癌症并找到能够有效治愈或者缓解它的方式。</p><p>只有亲身经历才能理解，当患癌家属躺在病床上的时候，注意力不自觉的会从能活多久转移到如何尽量保持尊严的活着。</p><p>放弃治疗是放弃和癌细胞继续做无谓的斗争，从来不是等待沉入死亡的黑夜。</p><figure class="image ss-img-wrapper"><img alt="医生墓志铭范例（八篇） - 范文118" src="https://cdnfile.sspai.com/2025/09/09/article/3f730b1b2e8e01a9d2c4c5e5300d6c8a.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>特鲁多墓志铭内容</figcaption></figure><p>1915年，美国名医特鲁多在纽约去世，他的墓志铭是：有时是治愈，常常是帮助，总是去安慰。</p><hr /><p>&nbsp;</p><h2>参考资料</h2><p>《癌症·新知：科学终结恐慌》—李治中<br />《癌症·真相：医生也在读》—李治中（菠萝）<br />《癌症转-众病之王》<br />Gemini</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102316</id>
            <title>你的认知，是财富还是内耗？ | 关于拖延的8条Stop Doing List</title>
            <link>https://sspai.com/post/102316</link>
            <guid isPermaLink="false">https://sspai.com/post/102316</guid>
            <pubDate></pubDate>
            <updated>Tue, 09 Sep 2025 03:24:58 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>时间过的可真快，我记忆中自己是三月份开始大量看书阅读，并且开始尝试输出。到如今过了四五个月了，我似乎攒了不少认知，说起大道理也能信手拈来。也确实很多事情都迈出去开始的一步了，比如健身和写作，但更多想做的事，终究还是停在了想的阶段。</p><p>这种认知高但没有执行力，或者说执行力跟不上认知的状态下，所有的认知就是一场巨大的精神内耗。还记得我写的第一篇文章主题是关于我个人“认知觉醒”，大抵是写在四月初的一篇《<a href="https://sspai.com/post/98257">从思维破局到高效行动 ——00后的认知突围与成长觉醒 </a>》，<strong>当时认为“认知高” 就是解药，现在才懂得 “光懂不做” 的认知，只会变成自我消耗的枷锁。</strong></p><p>我们都看过不少成长故事、财富传记，<strong>其实不难发现：成功与致富的逻辑并不复杂，无非是脑子灵活加肯下苦功。</strong>读得多了，甚至能一眼看透普通项目的爆火逻辑，总觉得 "只要自己肯干，一定能成"。</p><p>然而事情的发展往往是，在前一天晚上暗戳戳下定决心，准备明天改头换面重启人生。结果第二天早上没起来床，一觉睡到了 12 点。下午想着都这样了，还不如就继续刷手机吃外卖，日复一日最后什么也没干成。</p><figure class="image ss-img-wrapper image_resized" style="width: 452px;"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/05/article/c3f469a082aebc4673d5c93c4d711b74.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>摆烂生活</figcaption></figure><p>最后，看到别人赚到钱了变优秀了，脑子里就想着，这我也能做，这想法我早就有了，为什么变好的人不是我？来来回回陷入了巨大的情绪反刍。</p><p>你好似看透一切却无力改变，这就是“<strong>为什么很多人懂得很多道理却依然过不好这一生”</strong>的答案。</p><p>一直有句非常流行的鸡汤，先做出一坨屎来然后再去改进它，我写的第一篇文章中也提到了这句话，这句话乍一听的确感觉很对，让人充满力量，可仔细想来，这句话唯一的作用，就是让你想要分享这句话。至于说帮你提升执行力，基本不存在的，因为它还是停留在术的层面。<strong>所谓有道无术，术尚可求。有术无道，便止于术。</strong>术就像是一把手枪，而道则是帮你了解这把手枪。枪有没有用，很大程度是取决于你会不会用。</p><p>道理很简单，想要真正认识你的拖延症，需要的不是鸡血，也不是口号，而是真真切切的认识，去体悟其中的逻辑。</p><h3>戳穿拖延症的谎言</h3><p>先做个假设：如果现在有人告诉你，只要把一本书从头到尾翻完（不用看懂、不用记，机械翻页就行），完成后就立刻给你5000块。你会拖延吗？我想大概率不会。你可能会立刻找出一本书，哪怕熬夜也会把它翻完，甚至会提前规划好 “今天翻多少页，明天就能收尾”，执行力直接拉满。</p><p>可如果加个条件呢？不仅要翻完书，还得写一篇3000字的读书笔记。这时候你心里是不是会咯噔一下？“3000 字要写多久？我能不能写好？万一写得不好，是不是就拿不到钱了？” 一连串的疑问冒出来，原本果断的执行力，瞬间打了折扣。你可能会说 “先等等，我先看看书的内容再说”，或者 “明天再开始吧，今天先准备准备”.</p><p><strong>不是你不想做，而是这件事里多了 “能不能写好” 的不确定性，让你开始犹豫。</strong>​</p><p>再把条件升级：必须读懂这本书的核心观点，还要用这些观点去解读最近的一个热点事件，最后做成一个画面精美的视频，发布到抖音、小红书等平台，需要500个赞，达标了才能拿到钱。这时候，愿意立刻行动的人恐怕寥寥无几。</p><p>你会开始盘算：“读懂书要花多少时间？热点事件怎么结合观点才不生硬？视频剪辑我会不会？发布后能不能有500个赞？” 不确定性像滚雪球一样越变越大，原本“拿5000 块”的目标还在，可你却迟迟迈不开第一步，甚至会下意识地把这件事往后推.。</p><p><strong>其实这不是拖延症，而是大脑在面对 “不确定的付出与回报” 时，本能地选择了观望。</strong></p><p>我们对“不确定性”的抵触，是刻在基因的。人类进化了几十万年，95% 以上的时间都在为吃饱饭发愁。在物资匮乏的年代，浪费能量去做<strong>「不确定有没有回报的事」</strong>，可能意味着饿肚子甚至生存危机。所以大脑会本能地判断：“这件事要是付出了时间、精力，最后没拿到结果，岂不是白忙活？” 这种<strong>「避免能量浪费」</strong>的本能，让我们在面对不确定时，下意识地选择再等等，而这被很多人误当成了 “拖延症”。</p><p><strong>所以首先不需要为拖延而自责，只要尽量的去寻找“确定性”就好了。</strong></p><h3>请对“努力”保持信念</h3><p>什么是有确定性的事？比如我们身处一个差距巨大的社会。</p><p>一个不太讨喜的事实：有人天生是狮子，有人天生是羚羊，而羚羊天生就是要被狮子吃掉的。坏消息是绝大部分人都是羚羊。而好消息是羚羊如果想要活下来，不需要跑赢狮子，只需要跑赢其他羚羊。而羚羊如果想要活的很爽，<strong>它依然不需要跑赢狮子，它只需要跑赢大部分羚羊。</strong></p><p>从社会现象里能看到这样的场景：一档采访商务舱乘客的短视频中，当被问及有什么建议给当下的年轻人时，其中一期有位受访者直言 “投个好胎”，这句话后来成了评论区的高频词。世人常说，有人拼尽全力奔赴罗马，有人却生来就站在罗马城内。这固然是扎心的现实，却并非社会的全貌。而真正与你构成竞争的，从来不是这些 “生在罗马” 的人。</p><figure class="image ss-img-wrapper image_resized" style="width: 364px;"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/05/article/b348293c3fd9a0c7c823057ae9224276.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>“投个好胎吧”</figcaption></figure><p>普通人在这个世界上生存的底层机制其实很简单，<strong>它不是一个绝对值，而是一个比较级，就只需要比那些乌合之众多跑几步就够了。</strong>但如果你每天都在苦恼自己为什么生来不是狮子，那再牛的方法对你来说都是无用的，能够坦诚的接受这一点是你能够有执行力最基本的前提。</p><p>那现在先假设你接受了这一点，我们的视角就收缩到了羚羊的世界里。在羚羊的世界里其实大家都是大差不差，各有各的不幸，起跑线都是差不多的。<strong>你只要多努力一点点，你就是能多超越一只羚羊。</strong></p><p><strong>所以，努力是绝对有用的。</strong></p><p>举一个更现实的例子：三个刚起步的短视频创作者，内容风格（职场干货）、初始粉丝（约 500 人左右），基本上前期条件一致。第一个人每周更新 1 条视频，第二个人每周更新 3 条，第三个人每周更新 5 条。从直觉上看，大家可能会觉得他们的账号收益（包括平台流量分成、广告合作报价）应该是 1:3:5 的比例。</p><p>但现实里，这三个人的收益差距远不止这么简单，实际可能达到 1:8:20 的指数级差距，如果有做过短视频的朋友，大概率能印证这种情况。</p><p>因为平台的推荐机制更倾向高频更新账号，高频创作者的内容覆盖的用户场景更多（比如周一讲 “职场沟通”、周三讲 “简历优化”、周五讲 “加班效率”），更容易被平台判定为“活跃且优质的内容供给者”，获得更多初始流量推荐。</p><p>同时，高频更新能更快积累 “有效粉丝”，职场干货类用户需要持续的内容价值，每周更 5 条的创作者，能让用户每周都看到新内容，更容易形成用户粘性，粉丝留存率比每周更 1 条的高 3 倍以上，由此形成「羊群效应」，数据越好，平台就会把它推向更大的流量池，粉丝也就更多，如此良性循环。</p><figure class="image ss-img-wrapper image_resized" style="width: 472px;"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/05/article/c9aa13b1de956db63b995dfa58434e82.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption><strong>「马太效应」</strong></figcaption></figure><p>最终导致的是，这个行业 80% 以上的收益，都集中在了这 20% 的头部。这也就是大家常听到的<strong>「马太效应」</strong>，就是说你越有优势，越容易积累更多优势，越有钱，越容易赚到更多的钱。</p><p><strong>这其实也就是我们常听到的一句鸡汤，叫做越努力越幸运。</strong></p><p><strong>但这其实真的不是鸡汤。</strong></p><h3>Stop Doing List</h3><p>段永平先生常常强调：“一个好的公司不是他做到了什么，而是他怎么才能不犯错。”因此，他为企业制定了“Stop Doing List”——明确哪些事不应做，这成了他经营理念中至关重要的一环。</p><p>同样的，驾驶飞机这样繁琐且失误代价巨大的事情，其也有一份飞行检查清单…</p><blockquote><p>1935年，波音公司研发出被称为“飞行堡垒”的B-17型轰炸机，其技术水平非常的卓越，但在操控方面，它比以往的飞机复杂得多，飞行员要照顾4台发动机，而且每台发动机的燃油混合比都有所不同。</p><p>此外，飞行员还要操控起落架、襟翼、电动配平调整片（让飞机在不同速度下飞行时保持稳定的装置）和恒速液压变距螺旋桨等。</p><p>当地的报纸认为波音的新飞机<strong>“太过复杂，以致无法单人操控”</strong>。波音公司几乎因此而破产。</p><p>但是一些专家依然坚信这一型号的飞机是可以操控的，他们为飞行员编制了一份<strong>检查清单</strong>，将起飞、巡航、着陆和滑行各阶段的重要步骤浓缩在一张索引卡片上。</p><p>卡片上列出的事项飞行员都知道该怎么操作，他们会根据清单的提示检查刹车是否松开、飞行仪表是否准确设定、机舱门窗是否完全关闭，还有升降舵等控制面是否已经解锁。</p><p><strong>这些事情对飞行员来说真的都是一些简单得不能再简单的操作了。</strong></p><p>但自从这张看似愚蠢的飞行清单投入使用后，B-17型轰炸机安全飞行290万公里，最终为美军在第二次世界大战中取得了决定性的空中优势。</p></blockquote><figure class="image ss-img-wrapper image_resized" style="width: 512px;"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/05/article/f8c807d99c8b0575f3ad73ac67b9d41a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>“检查清单”</figcaption></figure><p>推及我们的日常处世，或许也该有一份属于自己的 “检查清单”。每个人来到世上，都有独属的课题与道路，却常常因为相似的缘由陷入拖延。因此我结合自身经历与观察，总结了以下 8 点 “不要做的事”，希望彼此有则改之，无则加勉。</p><h4>第一，别沉溺于空想的美好世界</h4><p>为什么这么说呢，因为人总是会陷入<strong>“身未动，心已过万重山”</strong>的心理境遇。简单来说，就是想的太多、做的太少。比如，你发现了一个很好的赚钱想法，这其中要经历把这个想法实施，去接受市场的考验等等一系列过程。人往往会提前预演结果，预演的过程往往会帮你规避掉现实里所要经历的困难，你的脑海中很快就会不自觉的快进到“你坐在高层办公楼，身穿笔挺西装举着红酒杯，手底下几千人为你干活，而你就等着账户上的数字不断跃迁就行”的美梦中。</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/05/article/706291f3cb1cf1489f928482c5da73e7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>空想的美好场景</figcaption></figure><p><strong>这纯靠空想结果带来的爽感，和你在现实中实现这件事带来的爽感几乎是一样的</strong>，这已经有科学证实了（我们大部分人没有体会到后者的爽感，所以可能并不一定支持这样的观点，希望大家在体验完之后的反驳我）。以上也就解释了“<strong>为什么想越多越不想动”的心理怪圈</strong>了，因为现实中要达成结果，要经历很多的困难，会不断给你带来挫败感。相比纯靠空想带来的爽感，没人会喜欢这些“徒增”的挫折导致的巨大落差感。</p><h4>第二，不要陷入多巴胺的恶性循环。</h4><p>我们陷入拖延、摆烂的时候会常常感到焦虑和痛苦，而大脑为了平衡这些痛苦，就会驱使我们去寻找一些快乐，也就是一些多巴胺的刺激。比如我想去看论文或者写代码的时候，常常会拖着不想做，特别是暑假期间，我采取过为了让自己可以坐到电脑面前，先去打把游戏，打一把就开始学习，可事情往往是事与愿违的，一把之后产生的巨大空虚感会让我比最开始还要恐慌，这时候往往会再来一把以弥补这份空虚感。</p><figure class="image ss-img-wrapper image_resized" style="width: 513px;"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/05/article/d9f26011c1d25f620edad3917d3f397d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>娱乐至死</figcaption></figure><p>由此可见，<strong>多巴胺不是快乐因子，而是期待因子</strong>。这就好比，它是一个你心里的洞，让你想要去填满它，确实它也是能填满的，但其恶心的点在于，它只是一种<strong>「短暂的满足」</strong>，紧接着你心里会产生一个更大的洞，需要更多的东西来填满，其实也就是说多巴胺是一个无底洞。</p><p>这也就是为什么我们常常出现一种场景，明明没工作、没学习，心里焦虑的很，但是就会想刷会视频，而刷视频越刷越烦，越刷越烦。<strong>明明刷的不快乐，但就是不想停下来，就是因为你被多巴胺给控制了。</strong></p><h4>第三，不要奢望拖延有一天会消失。</h4><p>我最开始就说过，拖延不是不自律者的缺陷，而是人类面对 <strong>“需要消耗能量且结果不确定的任务” </strong>时，一种本能的心理防御。我们永远无法消灭它，它就像是劳累后会疲惫、辛勤工作一天想躺平休息一样，是人之常情。所以就不存在“彻底改掉拖延”这件事，真正有用的态度是：<strong>接受拖延会一直存在，然后学会在它出现时，不被它牵着走。</strong></p><p>日常生活中，我们<strong>正确处理拖延的方式，从来不是去“消灭”拖延，而是要去“管理”拖延</strong>，比如我现在养成了一个习惯：每天到工位前，会在纸质笔记本上列出当天要做的事。我发现，如果只写 “写论文” 三个字，一天下来可能只零散看了几篇文献，写了几句又删掉，进度模糊；但如果把 “写论文” 拆成具体步骤，比如 “搜罗所需公式”“绘制神经网络结构图”，效率就会清晰很多，完成度也更高。</p><figure class="image ss-img-wrapper image_resized" style="width: 495px;"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/05/article/774ef5fb522826938b882f304f94b4cf.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>明确任务</figcaption></figure><p>可见，应对拖延的底层逻辑其实很简单：让自己明确第一步该做什么，以及今天必须完成的节点，这也就是<strong>为自己的任务结果添加确定性</strong>。</p><h4><strong>第四，不要一下子就想干把大的。</strong></h4><p>人往往是急于求成的，譬如我读过斯蒂芬·盖斯的《微习惯》后，给自己设立了一些小目标，可最终还是半途而废。这显然不是方法论的错，<strong>我当时确实是从小目标做起，但总是急不可耐地把目标变大</strong>，其根源是对“小”的轻视，觉得 “小目标”“小行动” 不够有价值，认为只有 “大动作” 才能证明能力、改变现状，于是急于用 “大目标” 给自己贴标签。</p><figure class="image ss-img-wrapper"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/05/article/b0376d8b08bb0237cb18f8fff7742ad3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>《微习惯》</figcaption></figure><p><strong>但那些被仓促放大的目标，早已悄悄布下陷阱</strong>：它们需要更大的精力去填充，更艰难的心理建设去启动。往往在真正动手前，那份沉甸甸的期待与压力，就已提前透支了本就有限的行动力。就像捧着一把细沙想攥成巨石，越用力反而漏得越快。</p><p>最初设定 “每天读一页书” 时还能轻松坚持，可一旦急着改成 “每天读一章”，便开始找借口拖延，直到连翻开书的勇气都被自我苛责消磨殆尽。这种对 “小” 的傲慢，最终变成了对 “大” 的无力，<strong>在反复的挫败里，又会加深对 “只有干把大的才能成功” 的偏执，陷入越急躁越停滞的怪圈。</strong></p><p>还是那一句“慢慢来，会很快”，这句话我从考研的时候就反复提醒自己，那时少年心性，总想着学得快、啃得难，到最后基础不牢，成绩自然平平。现在我还是会反复提醒自己，不是在于求成，而是多放过自己，不要把自己逼得太紧。</p><h4>第五，不要陷入“完美主义陷阱”。</h4><p>很多人拖延，不是不想做，而是 “才开始就想每一步都做到完美”。比如想写一篇文章，总觉得 “开头没写好，后面就全错了”，翻来覆去改标题，半天没写一个正文段落；想做视频，纠结画质、BGM、文案逻辑，结果连素材都没拍。</p><figure class="image ss-img-wrapper image_resized" style="width: 480px;"><img alt="image.png" src="https://cdnfile.sspai.com/2025/09/05/article/998c8081d3d90a51c6370a85f0ac5a86.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption><strong>完美” 本身就是不确定的</strong></figcaption></figure><p>而“<strong>完美” 本身就是最大的不确定性</strong>，它的标准你永远都不知道，最终只会在反复纠结里消耗掉所有动力。我最开始写文章，第一篇初稿漏洞百出，标题像白开水，内容也没逻辑，但我还是发了。后来根据反馈改第二篇、第三篇，才慢慢找到感觉。“完成” 永远比 “完美” 更接近结果，先把最初的产品做出来，你才有机会在修改里靠近完美；如果一直停在 “等完美” 的阶段，你连 “被改进” 的资格都没有。</p><p>比起“完美”，跟重要的是保持着勇气和激情迈开“做”的这一步，其实我们可以通过很多成功者的案例，找到一个规律，<strong>最重要的不是完美，也不是完成，而是“开始行动”</strong>。</p><h4>第六，不要频繁切换任务。</h4><p>有些人以为 “同时做几件事效率高”，比如写文章时回复微信，看似兼顾了沟通需求，实则会导致文章逻辑断裂；处理数据时刷新闻，可能会因为一个数字看错而导致整个分析结果出错。特别是现在大家都在用AI辅助工作和学习，而其进行深度思考的时候，大多数人都会去着手做其他事情，这不是 “高效”，是<strong> “用切换任务的方式逃避核心任务”</strong>，结果往往是当你再回到主任务的时候，你就会缺乏对其执行的连贯性，间隔越久越是如此。</p><figure class="image ss-img-wrapper image_resized" style="width: 386px;"><img src="https://cdnfile.sspai.com/2025/09/05/33b015ab26997ca0267aecfe894c0af3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>大脑的 “注意力切换” 是有成本的 —— 从 A 任务切到 B 任务，再切回 A 任务，需要几分钟才能重新进入状态。你以为自己在 “做事”，其实大部分时间都耗在了 “切换缝隙” 里，而且会极大程度降低工作质量，这就像用钝刀切割食材，看似忙个不停，实则每一刀都没切到位。</p><p>其实最简单的的办法就是 “单任务专注”，<strong>心理学中的 "心流理论" 指出，当人们全神贯注于某项任务时，会进入一种高度沉浸的状态</strong>，此时大脑的前额叶皮层会抑制无关信息的干扰，工作效率能提升 3-5 倍，尽量让自己的工作进入心流状态。</p><p>除此之外，我调研到还有"任务拆解"（复杂任务分解成 30 分钟内可完成的具体步骤）、"干扰记录法"（想起要做其他事情时，立刻写在便签上而不是马上行动，过后集中处理）等等，<strong>如果你想改变，这世界不缺方法。</strong></p><p><strong>效率的本质不是做更多事，而是把重要的事做好。</strong></p><h4>第七，不要把“没时间”当借口。</h4><p>很多人觉得自己做不成很多事情的原因不是自己拖延，而是“没时间”。</p><p><strong>但你仔细想：你真的没时间吗？</strong>早通勤时刷 30 分钟热搜，午休时躺平刷 1 小时短视频，晚饭后窝在沙发上追 2 集剧（约 1.5 小时），睡前刷朋友圈、看直播又耗 1 小时。这些被碎片切割的时间加起来，足足有 4 小时——足够读完半本书、写完一篇公众号长文，甚至能学会一个基础的 PS 修图技巧。退一步说，即便你没在刷视频、追剧，扪心自问：你的时间究竟花在了哪里？若只是因为效率太低，同样一件事要耗掉成倍时间，那本质上，也是在浪费自己的光阴。</p><figure class="image ss-img-wrapper image_resized" style="width: 425px;"><img src="https://cdnfile.sspai.com/2025/09/05/17d6e8726466547076cc04f2934f744d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>争分夺秒</figcaption></figure><p><strong>“没时间” 本质上是 “你觉得这件事的优先级不够高”</strong>，是大脑用 “借口” 逃避 “任务的不确定性”。比如你说 “没时间学剪辑”，其实是怕 “学了也没用”“学不会”，所以用 “没时间” 把这种恐惧藏起来。要打破这个循环，不用急着逼自己把所有碎片时间都利用起来（那样反而会陷入焦虑）。</p><p>不如试试 “优先级锚定法”：用 3 件事，锚定一天的核心价值。具体怎么做？每天睡前 5 分钟，拿出一张纸（或手机备忘录），写下“第二天必须完成的 3 件事”。<strong>注意，这 3 件事要符合重要但不紧急、可拆解的小目标</strong>，然后，把这 3 件事放在所有“即时快乐”之前。</p><h4>第八，不要在“阶段性摆烂”后攻击自己。</h4><p><strong>没人能永远保持高执行力，偶尔不想做事、想摆烂，是很正常的。</strong>比如我有时候学了一周了，周日就想躺平看电视剧或者打游戏，这时候不用苛责自己，而是告诉自己“休息一下，下周继续努力”。人在持续高压下，负责决策与意志力的脑区会慢慢疲劳，这时本能的惰性就会占上风 —— 这也是为什么越逼自己专注，越忍不住想刷手机，或许这正是大脑的自我保护机制。</p><figure class="image ss-img-wrapper image_resized" style="width: 440px;"><img src="https://cdnfile.sspai.com/2025/09/05/fda8155d91cdff410ed1b7cc24fd90ad.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>好好爱自己</figcaption></figure><p>这时候的自我攻击只会让你陷入 “焦虑→更不想做→更焦虑” 的循环，而接受 “偶尔摆烂是正常的”，反而能让你更快调整状态。就像弹簧，你越用力压它，它反弹时越猛；适当松一松，它反而能保持弹性。<strong>生命不是永动机，那些允许自己适当停摆的时刻，恰是为了走得更远。</strong>接纳自己的周期性疲惫，才能在张弛有度中保持长久的生命力。​</p><h3>写在最后</h3><p><strong>克服拖延的核心，从来不是 “逼自己自律”，而是理解自己的本能，用底层认知引导行动，接受自己是 “羚羊”，接受拖延会存在，接受任务需要慢慢拆，你才能在 “不痛苦” 的前提下，慢慢提升执行力。</strong></p><p style="margin-left: 0px;">我写这篇文章的灵感，最初来源于一条抖音短视频。其实那则视频中包含了更精华的“如何做”的实操方法，但我并没有在文中直接列出。我猜想，很多人也和我一样——虽然学过不少方法论，但每当看到像我这样的文章，仍会忍不住点进来，盼望着能找到一点新的启发或共鸣。</p><p style="margin-left: 0px;">或许，我们寻求的未必是又一套完整的方案，而是那种“原来还可以这样想”的豁然开朗，或者是大多数人相较于不知道怎么做，其实更多的是不知道哪些事情不该做，在我们传统教育中，已经渗透了一种智慧：​<strong>​避免错误往往比做对事情更重要​</strong>​。就像数学考试前老师总会提醒“不要忘记换算单位”“不要算错了”，虽然每次提醒，仍有人犯错。事后恍然大悟，才发现<strong>自己与优秀者之间的差距，往往就来自于这些本可避免的“小错误”。</strong></p><p>所以，<strong>不做这些“不该做的事”已经可以让你成为靠前的羚羊了</strong>，而如果你还想再快一些、再远一点，关于“如何做”的方法，你自己的探索和领悟，远比别人直接告诉你的更为珍贵。就像我曾在文中写到：如果你真心想要改变，这个世界永远不缺少方法。但它缺少的，是那些愿意躬身实践、主动试错、并从过程中长出自己思路的人。</p><p><strong>别人给的，是地图；自己走的，才是路。</strong></p><p style="margin-left: 0px;">我写下这些内容时，一直在想：要是我早点懂得这些就好了。我也同样知道，<strong>虽然我能写出这些文字，但对我自身来说并不是能完全做到的，仅仅是我吸收并表达了这些道理而已</strong>。所以我们彼此共勉，不管我们在什么年纪真正读懂这些道理，那都​<strong>​永远不晚​</strong>​。</p><p>​<strong>​认知决定了你的方向，执行力决定了你的终点​</strong>​。</p><p>知道很多是学问，做到很多才是智慧。​<strong>​真正的成长，不是思想的堆叠，而是行动的积累</strong></p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102337</id>
            <title>用 Termux + Syncthing 自动定时备份 Android 媒体文件</title>
            <link>https://sspai.com/post/102337</link>
            <guid isPermaLink="false">https://sspai.com/post/102337</guid>
            <pubDate></pubDate>
            <updated>Sun, 07 Sep 2025 21:31:46 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;<br />文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><h2>背景</h2><p>我使用 Syncthing 在我的多个设备间（安卓手机、笔记本、台式机和 NAS）进行媒体文件的同步。选择 Syncthing 的原因有两点。相比 Nextcloud 这类功能全面的私有云，在除去掉不必要的多用户管理、文件分享和在线协作等功能后，Syncthing 更纯粹和轻量，专注于文件同步。而 Immich 这类自托管的媒体服务虽然提供了安卓客户端的备份功能，但它的文件存储结构由应用管理，不适合我这种希望保留原始文件夹结构的用户。</p><p>因此，我的最终方案是，使用 Syncthing 进行同步，并配合 Immich 的外部图库功能来进行管理。</p><p>然而，Syncthing 同步方案在安卓设备上存在一个问题：安卓的媒体文件（照片和视频、系统截图以及应用的图片等）散落在 DCIM、Pictures、Movies、Download 多个不同的目录下。固然可以为这些顶层目录各建立一个同步任务，但这样就会同步很多不必要的文件（例如放入回收站的媒体文件和应用临时产生的缩略图或缓存文件）。而如果为每一个需要同步的子文件，都手动建立一个同步任务，管理起来又过于繁琐了。自然而然地，一个想法产生了：创建一个统一的中转文件夹，然后定期将散落的媒体文件移动到这个中转站中，之后只需要让这个中转站保持同步即可。</p><h2>方案</h2><p>首先是脚本的执行方案。要在安卓手机上运行这个脚本，我立即想到了通过 Termux 来执行定时任务。折腾过安卓的人多少可能都听说过这个软件。简单的说，这是一个终端模拟器，无需 Root 和额外设置，只需要安装完软件就可以为安卓手机提供一个 Linux 环境。再通过一些设置和扩展，Termux 就可以访问设备的存储目录并且实现和系统的良好集成。用它来执行这个脚本再合适不过了。</p><p>然后是脚本的实现方式。固然可以编写一个纯粹的 Shell 脚本，通过后缀名来判断文件类型并执行移动操作，但这种识别方式并不可靠。更准确的方式是，通过读取文件的魔数（Magic Number），即文件开头的一串固定字节序列，来判断文件的类型，类 UNIX 系统中的 <code>file</code> 命令就是通过它来工作的。我选择了 Python 来实现脚本。Python 的 python-magic 库可以轻松地读取文件的魔数判断类型。在复杂的处理逻辑时（如排除特定的目录、忽略隐藏文件），Python 的代码结构和可读性也远优于 Shell 脚本。</p><h2>实现</h2><h3>准备同步文件夹</h3><p>首先，在安卓设备上创建一个单独的文件夹，作为 Syncthing 同步媒体文件的中转站，例如 <code>/storage/emulated/0/Syncthing/pictures</code>（即安卓存储目录下的 Syncthing 目录中的 pictures 文件夹，Syncthing 文件夹与 Download、DCIM 等文件夹处于同一级）。然后在 Syncthing 应用中，把这个文件夹设置为需要监控的媒体目录，也是唯一需要监控的媒体目录。安卓上的 Syncthing 应用可以使用<a href="https://github.com/catfriend1/syncthing-android" target="_blank">这个</a>。</p><h3>编写工具脚本</h3><p>脚本工具的逻辑并不复杂：通过递归扫描指定路径，然后排除忽略的文件和目录并识别出需要处理的媒体文件，最后再执行移动到目标目录的操作即可。</p><p>以下是一个完整的 Python 实现示例代码：</p><pre class="language-python"><code>```python
import os
import shutil
import datetime
import pathlib  # 使用 pathlib 来处理路径
import magic  # 使用 python-magic 识别媒体文件
import subprocess

# --- 配置 ---
HOME_DIR = pathlib.Path.home()

# 日志
LOG_DIR = HOME_DIR / "logs"
LOG_FILE = LOG_DIR / "scan_and_move_media.log"

# 安卓存储目录在 Termux 中的映射
SHARED_DIR = HOME_DIR / "storage/shared"
# 目标目录
TARGET_DIR = SHARED_DIR / "Syncthing/pictures"
# 扫描的源目录
INCLUDED_DIRS_CANDIDATES = ["DCIM", "Pictures", "Movies", "Download"]
# 排除的目录
EXCLUDED_SUBDIRS = {".thumbnails", "cache"}
# 媒体文件类型
MEDIA_MIME_PREFIXES = ("image/", "video/")

def log(message: str, level: str = "INFO", indent: int = 0):
    """
    结构化的日志记录函数。
    - level: 日志级别 (INFO, WARN, ERROR, DEBUG)
    - indent: 日志缩进层级，用于美化输出
    """
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    indent_str = "    " * indent
    log_message = f"{timestamp} [{level.upper():&lt;5}] {indent_str}{message}\n"

    try:
        # 确保日志目录存在
        LOG_DIR.mkdir(parents=True, exist_ok=True)
        with open(LOG_FILE, "a", encoding="utf-8") as f:
            f.write(log_message)
    except Exception as e:
        print(f"CRITICAL: Failed to write to log file {LOG_FILE}: {e}")
        print(log_message)

def find_media_to_move() -&gt; list:
    """
    扫描文件系统，找出所有需要移动的媒体文件。
    此函数只读，不修改任何文件。
    返回一个包含 （源路径，目标路径） 元组的列表。
    """
    log("Scan phase started.", level="INFO")
    move_operations = []

    for dir_name in INCLUDED_DIRS_CANDIDATES:
        scan_dir = SHARED_DIR / dir_name

        if not scan_dir.is_dir():
            log(f"Skipping non-existent directory: {scan_dir}", level="WARN")
            continue

        log(f"Scanning directory: {scan_dir}", indent=1)

        for root, dirs, files in os.walk(scan_dir, topdown=True):
            current_root = pathlib.Path(root)
            # 跳过 .nomedia 文件目录处理
            if ".nomedia" in files:
                log(
                    f"Skipping due to .nomedia: {current_root}", level="DEBUG", indent=2
                )
                dirs[:] = []
                continue
            # 跳过排除目录
            dirs[:] = [d for d in dirs if d not in EXCLUDED_SUBDIRS]

            for name in files:
                # 忽略隐藏文件
                if name.startswith("."):
                    continue

                file_path = current_root / name
                try:
                    mime_type = magic.from_file(str(file_path), mime=True)

                    if mime_type.startswith(MEDIA_MIME_PREFIXES):
                        # 计算相对路径以保持目录结构
                        rel_path = file_path.relative_to(scan_dir)
                        dest_path = TARGET_DIR / dir_name / rel_path

                        # 将操作添加到列表
                        move_operations.append((file_path, dest_path))
                        log(
                            f"Found media ({mime_type}): {file_path}",
                            level="DEBUG",
                            indent=2,
                        )

                except (IOError, OSError) as e:
                    log(f"Could not access {file_path}: {e}", level="ERROR", indent=2)
                except Exception as e:
                    if "0-byte file" in str(e):
                        pass
                    else:
                        log(
                            f"Unexpected error with {file_path}: {e}",
                            level="ERROR",
                            indent=2,
                        )

    log(
        f"Scan phase finished. Found {len(move_operations)} files to move.",
        level="INFO",
    )
    return move_operations

def execute_move_operations(operations: list):
    """
    执行文件移动操作
    """
    total_ops = len(operations)
    if total_ops == 0:
        log("No files to move.", level="INFO")
        return

    log(f"Execution phase started. Moving {total_ops} files...", level="INFO")

    success_count = 0
    failure_count = 0

    for i, (source_path, dest_path) in enumerate(operations, 1):
        log(f"Processing [{i}/{total_ops}]: {source_path}", indent=1)
        try:
            # 确保目标目录存在
            dest_path.parent.mkdir(parents=True, exist_ok=True)

            # 移动文件
            shutil.move(str(source_path), str(dest_path))
            log(f"Moved to: {dest_path}", level="DEBUG", indent=2)

            # 通知 Android MediaStore 扫描新文件，以便图库更新
            # 需要安装 Termux:API 插件
            log("Triggering media scan for the new file...", level="DEBUG", indent=2)
            # 使用 subprocess.run 调用 termux-media-scan
            result = subprocess.run(
                ["termux-media-scan", str(dest_path)],
                capture_output=True,
                text=True,
                check=False,
            )
            if result.returncode == 0:
                log("Media scan successful.", level="DEBUG", indent=2)
            else:
                # 记录扫描失败的错误，但继续执行
                log(
                    f"Media scan failed: {result.stderr.strip()}",
                    level="WARN",
                    indent=2,
                )
            # 如无需即时更新图库，可以注释掉 termux-media-scan 相关代码

            success_count += 1

        except Exception as e:
            log(f"Failed to move file: {e}", level="ERROR", indent=2)
            failure_count += 1

    log(
        f"Execution phase finished. Moved: {success_count}, Failed: {failure_count}.",
        level="INFO",
    )

def main():
    log("=========================================")
    log("Scan and Move script started.")
    try:
        operations_to_perform = find_media_to_move()
        execute_move_operations(operations_to_perform)
    except Exception as e:
        log(f"A critical error occurred in main execution: {e}", level="ERROR")
    finally:
        log("Script finished.")
        log("=========================================\n")

if __name__ == "__main__":
    main()

```
</code></pre><p>这个脚本可以直接复制保存为 <code>scan_and_move_media.py</code> 来使用。</p><h3>设置自动化执行</h3><p>最后就是脚本的自动化执行了。安装完 <a href="https://github.com/termux/termux-app" target="_blank">Termux</a> 后，直接打开 APP 就可以启动终端进行配置。</p><h4>Termux 基本配置</h4><pre class="language-shell"><code># 可选，但建议更换为国内的镜像源
# termux-change-repo

# 设置安卓存储目录在 Termux 环境中的软链接，需要给 Termux 进行授权
# 成功后可以通过 ls ~/storage/shared 查看手机存储目录
termux-setup-storage

# 安装必要的软件包
# file 提供 libmagic，这是 python-magic 必须的。cronie 提供定时任务。
pkg update &amp;&amp; pkg upgrade
pkg install python file cronie

# 如果需要使用远程连接
# pkg install sshd
# sshd</code></pre><h4>创建 Python 环境</h4><pre class="language-shell"><code>python -m venv ~/.venv
source ~/.venv/bin/activate
pip install python-magic pathlib</code></pre><p>&nbsp;</p><h4>设置定时任务</h4><p><code>crontab -e</code> 编辑定时任务后运行 <code>crond</code> 启动定时任务即可。我的定时任务如下：</p><pre class="language-shell"><code>    ~ $ crontab -l
    0 * * * * /data/data/com.termux/files/usr/bin/bash /data/data/com.termux/files/home/scripts/scan_and_move_media.sh
    * * * * * echo "$(date) - $(whoami)" &gt;&gt; ~/temp.logs   </code></pre><p>第一行为实际执行的脚本，配置为 1 小时一次。第二行是用来监控 crond 是否在正常执行的。因为使用了虚拟环境的原因，我没有直接执行 Python 脚本，而是通过一个 Shell 脚本来执行的。并且为了统一管理，这个 Shell 脚本和第二步的 Python 脚本我都统一放在 `$HOME/scripts` 路径下。</p><pre class="language-shell"><code>#!/data/data/com.termux/files/usr/bin/bash

# 设置 trap：无论脚本是正常退出 (EXIT)、被中断 (INT) 还是被终止 (TERM) 都会释放唤醒锁
trap termux-wake-unlock EXIT INT TERM

# 获取 Termux 唤醒锁
termux-wake-lock

# 激活虚拟环境并执行 Python 脚本
source "$HOME/.venv/bin/activate"
python "$HOME/scripts/scan_and_move_media.py"

# 脚本正常退出，执行释放唤醒锁的命令
exit 0</code></pre><p>最后别忘了给脚本可执行权限：</p><pre class="language-shell"><code># 直接给 scripts 目录可执行权限

# ~ $ chmod +x -R scripts/

# 或者单独设置两个脚本的可执行权限

~ $ chmod +x scripts/scan_and_move_media.py

~ $ chmod +x scripts/scan_and_move_media.sh</code></pre><p>完成配置后，让 Termux 在后台保持运行即可。一段时间后，可以通过检查日志文件，确定定时任务的执行情况。</p><h2>优化</h2><ul><li>开机启动：可以安装 <a href="https://wiki.termux.com/wiki/Termux:Boot" target="_blank">Termux:Boot</a> 应用，配置 <code>crond</code> 命令在安卓设备开机时自动启动。</li><li>后台保活：让 Termux 获取唤醒锁或者将 Termux <a href="https://dontkillmyapp.com/" target="_blank">加入电池优化白名单</a>，避免定时任务执行失败。</li><li>媒体库刷新：需要执行 <code>pkg install termux-api</code>，并在手机上安装 <a href="https://wiki.termux.com/wiki/Termux:API" target="_blank">Termux:API</a>应用。然后配合 Python 脚本中执行的 termux-media-scan 命令即可。</li></ul><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/102182</id>
            <title>云巅之上——六天五晚川西之旅（下）</title>
            <link>https://sspai.com/post/102182</link>
            <guid isPermaLink="false">https://sspai.com/post/102182</guid>
            <pubDate></pubDate>
            <updated>Mon, 01 Sep 2025 03:38:14 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;<br />文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><p>书接<a href="https://sspai.com/post/101669">上回</a>，在阴雨连绵的川西漫步数日后，此行终于迎来了难得的晴天。第四日一早，稍作休整后，我们从理塘县出发，开始奔赴此次旅行的重点游览地——稻城亚丁。</p><p>高反仍然是一个绕不开的话题，而漫长的车程也由司机大哥的一个笑话开启。饶是一个月就有二十多天在高原穿行的司机大哥也打趣道「你们昨晚能睡好吗？我之前来理塘顺路捎带一个雅江县的女士回老家，她说自己出嫁到了理塘县，高反得天天睡不好，作为一个土生土长的高原常住民也受不了理塘的海拔了，必须回老家住。」一车夜半三点被高反头疼醒的人此刻反倒有了精神，原来他们高原人也会高反，那平原上土生土长的我们能平稳度过这几天也值得叉腰了。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/0303faf4900127cedcb3669c214a5f75.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/1888f1974fcd6815a62c2d50b9c9bad9.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>Day 4：未能守得云开，但仍不掩雪山壮阔</h3><p>今天的车程安排十分密集，中途我们仅在兔儿山观景台和海子山某观景点稍作休息。其中比较让人印象深刻的是海子山，山如其名，「海子」在此地是指「有水的湖泊」。海子山与我们途径的其他山峰不同，山顶上是星罗棋布的裸露石块和四处可见的浅浅水坑，据说这样的海子数量在 1000 多个，明明是在山巅穿行，却经常给人一种行走在山谷间的错觉。颇让人哭笑不得的是，在县城里要价 20 元、15 元的工艺品，在人烟稀少的山顶上小哥竟然直接开价 8 元，甚至不待我们讲价便大手一挥「买多了直接给你们算 7 块」，于是我的背包里便有了横跨四种价位的各式各样的小转经筒。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/d0d8200b483059c2fb896793b800a2a4.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/f9450acb31ec6900e811931f3948f3a5.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/5f4e5b4ab68454ef347dcb00ffede464.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/b34c05345f280f894ff89727e3631f5c.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/ab11b84f4814d4be64b7003fb63e24bc.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/8be7d9f274e12a908bf8714c8614ae94.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>穿过山峰，路过稻城，触摸云端，问候牦牛，下午三点半，我们终于到达了稻城亚丁风景区，根据原定的旅行安排，我们今天下午将利用3个多小时在稻城亚丁景区进行短线徒步。这里得益于报团，线上领队提前三天便发布了注意事项，从天气状况到建议着装都有提及，稍微复杂一点的是行李的打包，仅是在稻城亚丁这一天半的时间我们需要打包出三份行李。随身携带的 1 号行李，用于当天短途徒步的供给；2号行李则为第二天长途徒步的必备供给，且需要包含自备的午餐，相比 1 号行李更加丰富；3号行李为其他随身换洗衣物，由于徒步期间用不到，所以直接装箱寄存酒店即可。在进入景区大巴后，大巴会有多个停靠点，可以根据自己预定的景区民俗提前与酒店联系好，中途停车不下车交接 2、3 号行李。有长线徒步打算的话这边还是建议提前一晚入住景区，长线徒步耗时极长，且要考虑到天气等因素，不必要把自己时间搞得过于慌张。</p><figure class="image ss-img-wrapper image_resized" style="width: 315px;"><img src="https://cdnfile.sspai.com/2025/08/29/2b6b53b8c78a00719368c24d668a36b6.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>景区车盘旋上山途中，可以看到稻城亚丁内的住宿区</figcaption></figure><p>下面说说我自己在稻城亚丁徒步的一点经验，第一天下午的短线徒步距离在 3 公里左右，耗时 2～3 小时，看似很短的路程，但由于身处高海拔地区且需要一路上行，因此时间和体力消耗还是较大的。</p><p><strong>补给方面：</strong>建议随身携带保温杯，准备士力架、葡萄糖等高热量食物应急，质量较好的氧气瓶至少一瓶（过于便宜的氧气瓶氧气压缩量低，很快就会吸完），如果两人同行则一共准备 3 瓶最为保险。</p><p><strong>着装方面：</strong>7月出行的话带有防水防风性能的三合一冲锋衣便足够了，建议穿防滑性能较好的运动鞋，或是专业的户外徒步鞋，同样的也是有防水功能最佳，佩戴帽子用来防风或是防范小雨也很有必要。至于登山杖，根据我半天的经验来讲，短线徒步完全不建议携带，因为这条线路基本上都是金属栈道，中部全是孔洞，登山杖完全没有用武之地，即便是第二天的长线徒步也会有 1/3 的路程上是这种栈道，登山杖只能徒增负重。</p><figure class="image ss-img-wrapper image_resized" style="width: 315px;"><img src="https://cdnfile.sspai.com/2025/08/29/d89794c9b609b11cebbf9ab722ddfaa6.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>如图所示，金属材质的栈道上登山杖毫无用处，小松鼠也这么认为</figcaption></figure><p>可能是两年没有出门正经旅游了，稻城亚丁景区的大巴车竟然让我觉得体验极好，自上车起，车上音响便会开始景区介绍，中间穿插当地的神话传说、村庄由来、景区特色，移步换景、介绍及时，难得的大家在车上没有睡觉没有低头扣玩手机，而是跟着大巴车讲解寻找对应的景物。随着雪山传说的故事娓娓道来，我们在音响的提示下看向了窗外，仙乃日神山陡然出现在转角处，在暗色天空的映衬下显得神秘、壮阔，说起来不好意思，进入川西以来这是我们第一次如此真切地看到雪山，背景里的神话故事仍在讲述，不知道为什么竟然有一种想要流泪的感觉，或许人类永远会为大自然的力量所折服，那种油然而生的敬畏感并不受控。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/a471f3b299939fe44be99fda6de325c8.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/dc30515645caa2da7b5e956a314ab91b.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/398567e36cdef903e4ccf5f330e8f763.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/4eebf39c9fe67d6118d5479360108b90.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>进入主景区，在扎灌崩下大巴，稍作休整后便能开始短线徒步了，这条线路又被称为「观音慈悲线」，而与之相对的长线徒步线路则被称为「文殊智慧线」和「金刚挑战线」，关于线路的详细介绍可以参考官网公众号的<a href="https://cn.yadingtour.com/wit/faq/523-2022-06-24-02-10-00">这篇</a>介绍，不必要看网络上的片面攻略。另外结合我途中看到的游客状态，最为艰苦的「金刚挑战线」不建议挑战，毕竟它和「文殊智慧线」的途径点完全一样，只是中途有一段直升至少 700 米海拔的陡坡，属于景相同、先吃苦、易放弃的路线。</p><figure class="image ss-img-wrapper image_resized" style="width: 285px;"><img src="https://cdnfile.sspai.com/2025/08/29/d44fd6954a9beede59fc8fab5a6884ce.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>图源：稻城亚丁景区官方公众号</figcaption></figure><p>短线徒步路线由扎灌崩起，途径冲古寺，继续上行至珍珠海，珍珠海即为仙乃日神山的最佳观测点之一，稍后便能原路返回至扎灌崩。沿途或许会有当地的居民声称可以作为导游带领游客走近路，且会提供背包服务，我们比较谨慎，且体力尚可没有选择这种方式，而短线徒步路线其实算是比较轻松的路线，大家如果前往也不必要相信所谓的近路。由于到达景区当天仍然是阴天且伴有小雨，这条路线的景色美观度相对一般，且到达珍珠海后由于云雾渐起，反而看不到一路上都很明显的雪山，不过可以适当放低期待，就当是山林漫步放松心情。提醒大家在进行徒步的过程中，不要随意投喂野生动物，这里的猴子整体比较礼貌，但还是碰到了一只成年猴子抢夺我同伴包侧的物品，我们一前一后行走，我没有被抢，猜测是我的背包没有侧兜，且拉链紧锁，猴子没有注意到，同伴的书包侧边有侧兜并且放有物品，就会被当成攻击对象。好在猴子没有伤人，抢夺的物品也是使用过的垃圾，没有造成损失，只可惜不能抢回来把垃圾入篓了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/29/599e389372f690579cfc716a9634ca6d.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>天气状况不佳，远处的雪山犹抱琵琶半遮面</figcaption></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/9bbfd2e3cb637d97cf45c8a3e9ec0fa1.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/b8895fb6fc166bf6a919ade6861ac320.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/7d7260f8c88e41a4117e32760e5c209c.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/34bf981207028f14492249022cd6b859.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>不管你今天的徒步进度如何，由于扎灌崩返程的大巴末班为 7 点，一定要赶在这个时间点前保证自己在扎灌崩候车。晚上我们入住了景区内的见山民宿。重点表扬一下，民宿老板会在指定站点接客人，且提前为我们准备了热水，保障客人到店有不错的体验。民俗内也可以点菜做饭，味道是我们进入川西后最好的一次，此外民俗的所有客房窗户都能做到遥望雪山，或许也是由此得名。如果你晚上不想在民宿内就餐，景区内也有大食堂可供选择。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/29/03407d31912b6b43908b1437fb7fed03.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>另一侧看到的仙乃日雪山，象征慈悲</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/29/416703857e123a76ad04bd2daa741501.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>短线徒步路线上也可以看到央迈勇雪山，象征智慧</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/29/e49fb870e868104502bffb8be6eab66f.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>距离日照金山最近的一次，但终究由于方位问题未能一饱眼福</figcaption></figure><h3>Day 5：我想这是我此生见过的排名最靠前的美景了</h3><p>难得睡得不错，休整一夜后，我们将要背上行李开启今日的长线徒步之旅，如上文所说，我们选择的路线为「文殊智慧线」，早上 8 点出发的话，大约在中午 12 点左右能到达牛奶海的休息处用餐。今天我随身携带的补给有：电解质饮料两瓶（着重推荐），矿泉水一瓶，保温杯满杯温开水，自热米饭一份，士力架两根，小零食若干，高压缩医用氧气瓶（氧气压缩量更大，价格更贵，但也更加耐吸）+普通医用氧气瓶各一瓶。</p><p>如果不想携带过多食物类补给，那么景区内部设立有多个小型补给站，牛奶海附近也有一个大型补给站，费用相比于外部略有提高。但<strong>氧气瓶一定要自行提前准备充足</strong>，不要抱着进入景区再买的心理，因为景区内氧气购买机数量不多，即便遇到也不能保证里面还有货品，万一突发缺氧又补给不足后果不堪设想，一定要确保和通行的伙伴备有一瓶的冗余量。</p><p>照例今天仍然是先到达扎灌崩，之后会途径冲古草甸，起早的话，冲古草甸上动物不多，只有满天繁星一般散落在草地中的不具名野花，之后从冲古草甸到洛绒牛场需要乘坐景区付费的摆渡车，全程大约 7km，坐车时长 20 分钟左右，然后趁着早晨还未散去的水汽，我们便正式开始了长线徒步之旅。通行的栈道环绕着洛绒牛场，我们可以一边感受山谷小道的幽静，一边欣赏开阔草场的大气，时不时还会遇到由雪山融水汇聚的小溪流或是小水坑，水质清可见底，伴随着早晨逐渐升起的太阳，小小水池当中倒映出壮丽的雪山山峰，小与大的碰撞融合会让最开始本应艰难的路程变得激动人心。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/29/d3fcf9865a4027d7221cb6b779b0eca2.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>清晨太阳还未完全照耀到的冲古草甸</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/29/5424e19937b3219bffe2bae33bd5adfd.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>另一个角度下的仙乃日雪山</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/29/5ada9fad16b91d2faba3fb99dad3011e.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>阳光下滋滋冒气儿的大雪糕——央迈勇雪山</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/29/aba570862fc038415ee0c2cde73657c3.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>草地上的小花像星星一样闪耀</figcaption></figure><p>由于我们徒步开启得时间较早，路途上没什么人，遇到分岔口时我们便犯了难，生怕走错了就是一场南辕北辙的囧途，好在稻城亚丁景区处于安全考虑，基本上全天都会有巡视员，这些巡视员通常是当地人且穿着有制服，遇到问题直接礼貌询问即可。平稳前行了 2km 之后，眼前的栈道坡度陡然变大，体力的挑战才刚刚开始，从这时起我们就会看到路边不时有停下来休息的人，一定结合自己的身体状况适时休息。我们选择的第一个休息点是贡嘎措，此处海拔为 4200m，时间大概在上午 10 点左右，太阳已经完全升起，雪山的轮廓异常清晰，贡嘎措视野开阔，是央迈勇神山的绝佳观测点。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/06314404346045dee8b11b56a38d4651.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/e7564d66cf5050466afd66fa2afa276f.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>休整并补充水分后，我们从贡嘎措继续出发，而从此刻起，真正的挑战和乐趣也刚刚开始。根据景区内的路牌提示，我们距离牛奶海还有 2.8km，请记住这个温馨的路牌提示，因为接下来你将用汗水和酸胀的双腿去度量这在平常看来毫不起眼的长度数据。我们会穿过泥泞的小道，倾听溪水潺潺，然后在无数次想要停下来休息的时候咬牙凭借意志力继续前进，在木制栈道上足够艰难地前行 40多分钟后，我们才来到曲久扎尕服务站。抬头一看路牌，距离牛奶海还有 1.9km，这种感觉简直像打开地图工具后看到距离 2km 但是打车时哐当变成 10km 那么荒谬。您是说我们累到无数次想要躺下来但是咬牙坚持走了这么久才前进了 0.9km？</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/be3339fc0a7a038b38884de8c2d0ac8f.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/4c3b68016e3d692312c4eed3a975fa9c.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/f1e56b92c2a734e33a2f158c3fe494d2.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/df2f8eb56c6baceee7717b34d5a96fe3.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>来不及感慨，因为最艰难的部分已经近在眼前，据线上领队介绍，从曲久扎尕服务站到舍生崖的 1.1km 将是全程最艰难的部分，我们会经历 300m 的直线上升，对体力、意志力都将是巨大的考验。这部分的栈道又变成了金属结构，因此别人携带的登山杖完全没有用武之地，我们没有购买登山杖反倒正好轻装上阵，开启挑战。怎么形容这段路程呢，就是脑海中「我不行了，我要停下来休息」和「我不能停，停下来就彻底不想动了」的两种想法一刻不停地交战，腿机械地抬起上升，呼吸和说话开始困难，前面的人随时停下来导致你不得不绕路打乱上升节奏，更何况中间会经过一段施工区，更加给人一种攀登悬空栈道的感觉。</p><figure class="image ss-img-wrapper image_resized" style="width: 316px;"><img src="https://cdnfile.sspai.com/2025/08/29/1ddec92b7e139f6ea8240e47c87ea9a5.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>图中是相对来说最平缓的路了，上升途中连拿出手机拍照的力气都没有</figcaption></figure><p>我自身的体会是，上升途中数台阶是个不错的方法，和自己约定好爬升几阶就休息，加上运动手表的心率辅助，每次休息时间不宜超过 5 分钟，心率下来一点后、呼吸不那么急促就可以继续前进，另外还是真诚建议如果需要休息还是不要突然在上升的台阶处停留，至少上到一个平台处再坐下，避免给后续人员造成困扰，平稳的休息处也能减少自身的安全隐患。相信我，度过这段路程，到达舍生崖后，视野的突然开阔和浑身汗透的酸爽感觉会让你心情大好，经历了极度疲劳后挑战自己带来成就感太爽了（前提仍然是安全，不要强行挑战）。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/b7c924b0e500b2be68c8d048fd44b253.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/a8850b040c6366e4d71fb4f30c351328.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>当你看到下图这个路牌时，不要怀疑，这就是官方设置的指路牌。明明五色海更远，为什么它和牛奶海的距离一样？放弃思考吧，往上走就是了，相信经过刚刚的挑战，我们都希望接下来的一段路程足够平稳，那么请继续前往牛奶海，之后再绕行至五色海，否则先到五色海的直升 1000m 的金刚挑战线会让你很容易彻底放弃。到达牛奶海已经是 11:40，被<strong>仙乃日</strong>、<strong>央迈勇</strong>、<strong>夏诺多吉</strong>三座神山环绕着，尽管身体经历着地狱般的折磨，但眼睛却仿若在天堂之中，这种风景的独特和美只有置身其中才能体会，手机镜头完全无法还原。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/4308a2aaf8d351396edae4d52962f3c2.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/8536465df947720ccbf4e9d773694f86.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper image_resized" style="width: 318px;"><img src="https://cdnfile.sspai.com/2025/08/29/cad0d4e7d63fdbc46e9d3aab672f9199.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我至今认为牛奶海这个名字还是有一丝丝标题党了</figcaption></figure><p>我们在午间休息的时候遇到了一个背包客，他可能是在路途中捡拾了一个近乎完整的牦牛头骨计划作为纪念品带回，一个当地居民对他进行了友善劝告，在他们的观念当中，这种动物头骨是专门放在山中表达虔诚和祈祷的，随意拿走可能招来灾祸。最后那位背包客是否会听劝将物品放回我们无从得知，但这里也提醒大家除了脑海中的风景尽量什么都不要带走，面对友善的劝诫还是听进去为妙。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/29/236be15e638c5190d44bf4eaccb2d603.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>头骨大概长这样，不要随便捡</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/29/4328939c52a1dae757a48aecbe565251.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>徒步期间，注意景区内的提示，一切以安全为首</figcaption></figure><p>吃饱喝足后，如果你拍到了足够满意的照片，那么就可以继续上行，去五色海看看，在我看来，牛奶海也好，五色海也罢，只是辅助我们前行的地图标识，这两个湖泊并不是我们此次徒步的目的，整个徒步的过程和沿途不可复刻的风景才是，一定要摒弃打卡式旅游的思维，否则只是为了这两个湖泊的话你可能会失望。此次稻城亚丁的长线徒步之旅对我而言更是一场身心挑战，经历了前几天的高反症状，身体已经逐渐适应了高原环境，这份回归山野的挑战带给我的是完全的满足和对自己满满的骄傲，跳脱出常规的生活和循规蹈矩的工作后，才明白「偷得浮生半日闲」的美妙境界。</p><figure class="image ss-img-wrapper image_resized" style="width: 316px;"><img src="https://cdnfile.sspai.com/2025/08/29/0519096d1e25e4e9cf08e1eab19450ad.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>五色海旁边的游客照</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/08/29/d1f40a0d5d2d9fdccd378e85c0756c22.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>高山仰止，人类在大自然前的渺小被具象化</figcaption></figure><figure class="image ss-img-wrapper image_resized" style="width: 314px;"><img src="https://cdnfile.sspai.com/2025/08/29/ad84d560b6bf69f7fe421f380470b26f.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>高山之上，无防护措施只身站在栈道外侧的测绘人员，向他们致敬</figcaption></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/f9fca9765657315317f1398f29c518ca.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/4e96040e09ba04e485f4931965d04fd3.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/46a307d3ff3d568f67354572693c9a8e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/69bd75e0753d98c1d8a53c9faea3e92a.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>对了，如果你是小动物爱好者，相信在这边会更加充实和美好，我在一路上看到了许许多多可爱动物，有不知名的小鸟，还有在悬崖峭壁上轻盈跳跃的岩羊；下山后还能在草地上看到闪闪发光的赤麻鸭，和身姿矫健自由奔跑的马儿和骡子；至于猴子们，那更是数不胜数。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/7418a9c105a5e39448583df3fcfcc9b5.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/3b5f6db419def402eff9a5cfc30fdee8.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/cac1ca5698c01ffd6446a9bcb3514d54.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/17e302b2dcd9beb6a5b0c53446fda7c5.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/4caebd33b036189d81f57e3711b634fc.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/6ff36d06f6abe7aefc5352ef79316604.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/525fdd7abaf85baf97234853c52ada0e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/1a1759505222403f7551da6219e5136e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/47af007114c44404e234a60d3e305542.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/c176120bcc9ec5bd8d6451f81c327489.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/08/29/a99fb805f3cf8a5f119e63a07ba0cd7d.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/08/29/a840292e4613e462480a97e3a7002aef.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这篇游记到这里便戛然而止了，就像是一次短暂的旅途在突然结束后内心更多的是一种失落感一样，那些沿途的风景突然之间就远离了你的生活，一场美梦终究有尽头。于是我们才用一次又一次的出发去创造更多绚烂的瞬间，证明我们也曾活得肆意且自由。</p><p><strong>关联阅读</strong>：</p><span class="ss-linkCard">&nbsp;</span><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>